{
  "openapi": "3.0.0",
  "info": {
    "title": "CATAPULT Passport API Suite",
    "contact": {
      "email": "support@ecrs.com",
      "url": "https://www.ecrs.com",
      "name": "ECRS Support"
    },
    "x-logo": {
      "url": "https://static-assets.ecrs.com/wp-content/uploads/2017/11/ecrs-logo-blue.png"
    },
    "description": "---\nThe Catapult Passport API Suite describes REST-like endpoints for adding, updating, or deleting data from a CATAPULTÂ® system.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "servers": [
    {
      "url": "https://accountId.catapultweboffice.com/api"
    }
  ],
  "tags": [
    {
      "name": "Overview",
      "description": "---\n**Authentication**\n  * Endpoint authentication is managed by API Keys. Keys are acquired in CATAPULT Web Office and assigned to individual <a href=\"https://olm.ecrs.com/5-6/?page_id=15975\">Employee Records</a>. \n  * For security Best Practices, it is recommended to include the API Key value in the <code>X-ECRS-APIKEY</code> request header, instead of the query string, wherever possible. \n  * As an additional security measure, employee API Keys **do not** replicate between stores. This means API Keys created in a Web Office interface apply to that specific store location only. \n  * In addition, any <a href=\"https://olm.ecrs.com/5-6/?page_id=40449\">Employee Record</a> marked as Inactive, Locked, or terminated (Termination Date is populated) will not be able to use their associated API Key with any endpoint in Passport API suite; no action will be taken through the endpoints in these scenarios.\n\nWhile it is recommended that calls be made to the HQ and filtered with available parameters, authentication for calls to non-HQ Web Office addresses are possible.\nThese require the creation of separate API Keys on employee records in the respective Web Office interface. For example:\n  \n  * Employee 142 has an API Key created on their maintenance record in the HQ Web Office. This can be used to authenticate requests sent to the HQ Web Office and will only display on the employee record when viewed in the HQ Web Office interface.\n  * Employee 142 has another API Key created on their maintenance record in the RS1 Web Office. This will be used to authenticate requests sent to the RS1 Web Office and will only display on the employee record when viewed in the RS1 Web Office interface.\n  \nThe API Key visible in the HQ Web Office interface is used to authenticate HQ requests, while the API Key from the RS1 Web Office interface is used for RS1 requests.\n\n**Content Negotiation & Media Types** \\\nCatapult Passport API operations support these response content-types in the request <code>accept:</code> header:\n  \n  * application/xml\n  * application/json\n  * text/csv\n  \nAPI response content-type is determined by agent-driven, or client-based, content negotiation.\nResponse content-type will default to XML data format if the incoming request header does not describe a specific accept value.\n\n**CSV Format Requirements** \\\nXML and JSON data formats are unconditionally accepted by all Catapult Passport API endpoints. \nThe CSV data format is likewise accepted by all endpoints, provided the incoming request satisfies the neccessary formatting criteria:\n* The CSV file must always start with a header row that names each column.\n* Each column is delimited by a comma <code>,</code>.\n* Each row is delimited by 1 or more carriage return and/or newline characters.\n* A single-quote <code>'</code> character placed after a row or column delimiter will start the next row or column as quoted.\n* Quoted columns do not terminate until the next single-quote character is encountered.  \n* Single-quotes within an quoted column can be escaped by a back-slash <code>\\\\</code> character.\n* A row or column delimiter must be placed immediately after each single-quote termination (after closing a quoted row or column).\n\n**Data Type Requirements** \\\nCertain data types allow for more leeway with accepted values, while others expect a strict input format. For consistency, unless where otherwise noted and when present in a query parameter,\nthe data types listed here will acccept: \n* **Boolean** - Standard <code>true</code> or <code>false</code> values or binary <code>0</code>, <code>1</code> numeric values.\n* **Date Time** - Time-zone optional, separator-agnostic <code>YYYY-MM-DDThh:mm:ss</code> or <code>YYYY-MM-DD hh:mm:ss</code> ISO8601/RFC3339 format.\n* **Empty String** - Pair of double-quotes without a space separator, such as <code>parameter=\"\"</code>.\n* **Currency** - Standard decimial-separated USD format, such as <code>12.50</code>\n\n**Network Connectivity Requirements** \\\nPerforming requests or updates via the Passport Services API is not possible over Wide-Area-Network (WAN) connections without an active VPN. Requests are only accepted from the same environment where cardholder data is located. More specifically, requests are only accepted from non-routable RFC1918 private network addresses; communication is not possible with any cloud-based platforms or applications. \n\n**Licensing Requirements** \\\nIn order for a CATAPULT merchant - or their chosen third party - to perform requests through the Passport Services API, the CATAPULT store that contains the database where requests will be sent must have one of the following \"Passport API\" licenses enabled:\n\n  * **Passport API Read Only** - This license allows authorized personnel to submit requests to endpoints that only support <code>GET</code> methods (e.g., Transaction Journal, Items, Dynamic Promotions, etc.). Endpoints that support a variety of methods - such as Customers and Maintenance Profiles - cannot be sent requests with this license, even though they support one or more <code>GET</code> methods. In turn, this means that no updates to the merchant's CATAPULT database can be made via Passport Services API with this license. Please note, responses like \"Passport APIs are not licensed for this server\" and \"The requested service is not valid\" will be returned should a request be made to an ineligible endpoint. \n  * **Passport API Read & Write** - This license allows authorized personnel to use all Passport Services API endpoints to the fullest by submitting <code>GET</code> requests and/or performing <code>PUT</code>, <code>POST</code>, or <code>DEL</code> updates. \n  \nPlease note that unique licenses cannot be assigned to individual users of the Passport Services API for each store. Meaning, if User 1 and User 2 both needed to submit requests via the Passport Services API to a store, both users would have the same level of access (i.e., Read Only or Read/Write); User 1 could not have Read Only access while User 2 had Read/Write.\n\n**Troubleshooting**\n* All Passport API endpoints do not use an employee's assigned Authorization Security checkpoints to determine access. Instead, an employee's Inactive status is used. \n * If an employee with a valid API Key is NOT marked as \"Inactive\" (on their record in CATAPULT Web Office), then that employee will have access to query all Passport API endpoints.\n * If an employee with a valid API Key IS marked as \"Inactive\", then that employee will not be able to query any Passport API endpoint.\n* Endpoint operations are only accessible to requests that originate from the same local, non-routing private network or VPN as the HQ.\n* API events are output to the CATAPULT web server and can be found in the \\\\Tomcat X.X\\\\logs\\\\ directory, for example: api.YYYY-MM-DD.log\n* Use a unique batch number for different batch procedures. This will make it easier to identify related batch events in the batch_importMessages table and filter for a specific batch number.\n* Passport includes XML v1.1 formatting. Most browsers do not currently support XML v1.1 formatting and should therefore not be relied on, if used at all, for accurate troubleshooting. A dedicated API testing platform is recommended."
    },
    {
      "name": "Transaction Journal",
      "description": "***\nThe Transaction Journal endpoint enables you to obtain all available T-Log details and reporting data for a range \nof transaction upload times. Use **<font color=\"#2F8132\">GET</font>** to retrieve.\n\nWhen a startTime and/or endTime are entered in the request parameters, the TransactionJournal query uses\nthe timestamp from the TRN_uploadTime field to determine if a transaction should be included in the response. \nThis is an important distinction as the TRN_uploadTime defines if, and when, a transaction record \nis inserted in the HQ T-Log. As such, transactions with a TRN_uploadTime timestamp after the startTime, \nand/or before the endTime, will be returned."
    },
    {
      "name": "Items",
      "description": "***\nCATAPULT Passport API offers three endpoints that allow you to obtain data for inventory items. For each endpoint, the data is obtained via a **<font color=\"#2F8132\">GET</font>** request. The three \"Items\" endpoints are:\n  - **Detailed Search** - This endpoint allows you to query and receive item data by Receipt Alias, Item ID, or Item Group. Viewing item data at specific stores is also possible with this endpoint. \n  - **View All** - This endpoint allows you query and receive all items from all stores. Note that only a subset of the fields available on an inventory record will be included in the response with this endpoint. \n  - **Deli Item Data** - This endpoint, which is only available with CATAPULT 5.7.141 and newer, allows you to obtain item data with associated deli information and attributes (e.g., nutrition facts).\n\nSee the **Detailed Search**, **View All**, and **Deli Item Data** sections below for more information on each endpoint."
    },
    {
      "name": "Customers",
      "description": "***\nThe Customer endpoint provides a means to quickly view, create or update customer records outside your Web Office interface.\n\nUse **<font color=\"#2F8132\">GET</font>** to obtain customer information that already exists in your database. You can provide a particular\ncustomerId to check individual records or, by leaving the customerId parameter blank, check all available records. \nUse **<font color=\"#95507C\">PUT</font>** to create new customer records or update existing ones. \nBe sure the Web Office login associated with the apikey in the **<font color=\"#95507C\">PUT</font>** request has the necessary Add Customer, Edit Customer \nAuthorization Security checkpoints enabled. That security access will be inherited by the request."
    },
    {
      "name": "Dynamic Promotions",
      "description": "***\n**Available with CATAPULT 5.6.116+.**\n\nThe Dynamic Promotion Details endpoint allows you to query and <font color=\"#2F8132\">GET</font> details about active Dynamic Promotions within a \nspecified date range. These details include the Dynamic Promotion Name, Schedules, the Store Coupon required to fire the Dynamic Promotion, and more. \nSee the **Responses** in the *Get Dynamic Promotion Details* section below for a complete list of the \ndetails you can <font color=\"#2F8132\">GET</font> about a Dynamic Promotion with this endpoint. \n\n**Notes**\n   - Details about Dynamic Promotions outside of the specified date range will not be returned.\n   - When performing this query, Item Groups and individual items are returned in the Responses. If you have constructed Item Groups with a large number of items (e.g., 100,000 or more), and attached those Item Groups to the Dynamic Promotions returned within the query parameters, the performance of this endpoint may be impacted. Specifically, it may take an extended period of time for the responses to be returned.\n   - Due to the data being separated by ASCII control characters GS (Group Separator) and RS (Record Separator), the CSV response for this endpoint becomes less useful, as most text editors fail to render those characters. Instead, the recommendation is to use either the JSON or XML response output for this endpoint."
    },
    {
      "name": "Maintenance Profiles",
      "description": "***\nMaintenance Profiles include endpoints that enable you to obtain or modify information on the more nuanced elements of your CATAPULT data,\nsuch as customer/store coupons and departments. Additional profile endpoints are in development and will be released with supporting information as they become available.\n\nThe **Customer Store Coupon Management** endpoint enables you to obtain a list of, attach new, and remove existing Customer Store Coupons \nassociated to a customer. Also use it change existing Store Coupon expiration dates. \n**<font color=\"#2F8132\">GET</font>** will let you view existing Customer Store Coupons; \n**<font color=\"#95507C\">PUT</font>** will allow you to attach and change the expiration dates; \n**<font color=\"#CC3333\">DELETE</font>** will remove the coupon from a specified record.\n\nThe **Department Detail** endpoint enables read-only information requests on your item hierarchy departments. \n**<font color=\"#2F8132\">GET</font>** will let you view details for all departments or, if specified in the request, a certain one.\n\nThe **Membership Profile** endpoint allows you to query, create, or update membership profiles.  \n**<font color=\"#2F8132\">GET</font>** lets you find information about existing Membership Profiles, \nwhile **<font color=\"#95507C\">PUT</font>** will have you create new and update existing records.\n\nThe **Supplier Detail** endpoint enables read-only information requests on supplier (vendor) records in your database.  \nUse **<font color=\"#2F8132\">GET</font>** to view details for all available suppliers. Requests can be filtered using optional parameters."
    },
    {
      "name": "Purchase Orders",
      "description": "***\n**Available in CATAPULT version 5.6.97 and greater,** all **<font color=\"#95507C\">PUT</font>** Purchase Order endpoints provide a means to query, create, or update non-committed purchase order worksheets. Likewise, available with CATAPULT version 5.6.117 and greater, the **<font color=\"#2F8132\">GET</font>** endpoint provides a means to obtain order details about committed and non-committed worksheets.\nOperations will respond with a simple confirmation on success or provide details on the cause and related item(s) on failure.\nYou may optionally use the endpoints to submit a new worksheet, modify the inventory records and details associated with that worksheet, and finally commit the worksheet all outside of Web Office.\nEndpoints conditionally support both <a href=\"https://olm.ecrs.com/5-6/?page_id=1873\">Conventional</a> and <a href=\"https://olm.ecrs.com/5-6/?page_id=1871\">Receive-Only</a> purchase orders; see parameters for specifics.\n\n**Purchase Order Header** enables you to update the status of a purchase order worksheet. Use **<font color=\"#95507C\">PUT</font>** to pass worksheet parameters to the server. Use the CREATE action(s) to start a new order, the EDIT action to modify an order, the SUBMIT action to process the worksheet into to the Ordered state, and COMMIT action to finalize the worksheet and close the order. Worksheets must have an <code>invoiceNumber</code> to allow commits. In CATAPULT version 5.6.117 and newer, the purchaseOrderId is returned upon a successful call to this endpoint.\n\n**Purchase Order Items** enables you to modify specific rows and item associations on a particular worksheet. Use **<font color=\"#95507C\">PUT</font>** to add/update/remove worksheet items.     "
    },
    {
      "name": "Price Changes",
      "description": "***\nThe Price Change Detail endpoint provides a means to query price change worksheets. \n**<font color=\"#2F8132\">GET</font>** will let you retrieve worksheet data from within a defined date range."
    },
    {
      "name": "Inventory Adjustments",
      "description": "***\nThere are three endpoints available for <a href=\"https://olm.ecrs.com/5-6/?page_id=1727\"> Inventory Adjustment worksheets</a> in CATAPULT Web Office. Specifically:\n   1. Inventory Adjustment Details \n   2. Inventory Adjustment Header (create/edit/commit)\n   3. Inventory Adjustment Items (add)\n   \n**Available with CATAPULT 5.6.98+,** the *Inventory Adjustment Details* endpoint allows you to query and **<font color=\"#2F8132\">GET</font>** data about committed Inventory Adjustment worksheets. \n  This worksheet data includes:\n   - Worksheet Name\n   - Timestamp Committed\n   - Item ID\n   - Item Description (Receipt Alias)\n   - Adjustment Quantity (positive or negative)\n   - Base Item Adjustment Quantity\n   - Adjustment Reason\n   - Adjustment Memo\n   \n**Available with CATAPULT 5.6.117+**, the *inventoryAdjustmentHeader* endpoint allows you to create new Inventory Adjustment worksheets, make edits to the Memo or Worksheet Name fields, or even commit the worksheet. These actions are done through **<font color=\"#95507C\">PUT</font>** commands.\n\n**Available with CATAPULT 5.6.118+**, the *inventoryAdjustmentItems* endpoint allows you to add items to Inventory Adjustment worksheets.  These actions are done through **<font color=\"#95507C\">PUT</font>** commands."
    },
    {
      "name": "Physical Inventory",
      "description": "***\n**Available with CATAPULT 5.6.98+.** The Physical Inventory Details endpoint allows you to perform an HTTP <font color=\"#2F8132\">GET</font> query and obtain data from committed <a href=\"https://olm.ecrs.com/5-6/?page_id=1795\"> Physical Inventory worksheets</a>. \nThis worksheet data includes:\n   - Worksheet Name\n   - Timestamp Committed\n   - Item ID\n   - Item Description\n   - Prior On Hand Count\n   - New On Hand Count         "
    },
    {
      "name": "Summary Item Data",
      "description": "***\n**Available with CATAPULT 5.6.99+.** The Summary Item Data endpoint allows you to perform a HTTP <font color=\"#2F8132\">GET</font> query to obtain summarized transaction data for Items OR Departments over a date range for a specific store.\n\nThe summarized **Department** data includes:\n   - Department Number\n   - Department Name\n   - (Net) quantity sold within the Department over the specified period\n   - Extended cost of the items sold within the Department over the specified period\n   - (Net) sales of the Department over the specified period\n   - Store Number\n   - Store Name\n   \nThe summarized **Item** data includes:\n   - Item ID\n   - Item Description (Receipt Alias)\n   - (Net) quantity sold of the item over the specified period\n   - Extended cost of the item sold over the specified period\n   - (Net) sales of the item over the specified period\n   - Store Number\n   - Store Name\n   "
    },
    {
      "name": "Summary Financials",
      "description": "***\n**Available with CATAPULT 5.6.117+**\nThe Summary Financials endpoint allows you to perform a HTTP <font color=\"#2F8132\">GET</font> query to obtain summarized financial data over a date range for a specific store or list of stores. The data returned will be all data collected and summarized for a 24-hour period for the specified store(s).\n\nThe summarized data includes:\n   - Date\n   - Store ID\n   - Store Name\n   - Type of Financial Data\n    - Buydowns\n    - Discounts - Line Item\n    - Discounts - Subtotal\n    - Discounts - Excluded\n    - Drawer Loans\n    - Dynamic Promotions\n    - Dynamic Promotions - Excluded\n    - Negatives (i.e., All Voids, Item Corrects, Returns, No Sale)\n    - Paid Ins / Paid Outs\n    - Safe Drops\n    - Taxes\n    - Taxes - Exempt\n    - Tenders\n    - Totals (i.e., Gross Sales, Gross Sales - Training Mode)\n    - Vendor Coupons\n   - Name or Description of the Financial Data Type (e.g., \"Cash\")\n   - Amount of the Financial Data (e.g., total amount of the \"Cash\" Tender collected)\n   - Count of the Financial Data (e.g., how many Tenders were collected)\n   - Omit from Sales Indicator\n   - Foreign Currency Exchange Rate\n   - Foreign Currency Amount\n   "
    },
    {
      "name": "File Cache",
      "description": "***\n**Available with CATAPULT 5.6.120+**\nThe **<code>filecache</code>** endpoint allows you to perform a **<font color=\"#2774B8\">POST</font>** request to the CATAPULT Database to place a text file into the File Cache table. When a text file is placed in the database through this endpoint, other ECRS applications - such as Gateway - can reference and use the files as needed (e.g., pick the file up and move it to a specific destination). The specific CATAPULT Database where the file will be placed will be determined by the location where this endpoint is used. For example, if the **<font color=\"#2774B8\">POST</font>** request is made from the Headquarters location, the file will be placed in the Headquarters CATAPULT Database. \n   "
    },
    {
      "name": "Gift Cards",
      "description": "***\n**Only Available with CATAPULT 5.7.135+**\n\nThis endpoint is associated with creating and updating CATAPULT self-hosted Gift Cards within your store's CATAPULT database. This endpoint is in no way associated with - or has any affect on - Gift Card services or providers used/hosted outside of CATAPULT. \n\nCurrently, this endpoint only contains the <code>/giftCardBulk</code> request method. This method allows you to perform a **<font color=\"#2774B8\">POST</font>** request to the CATAPULT Database to create and activate a bulk set of Electronic Gift Cards (i.e., E-Gift Cards). See the **Create E-Gift Cards in Bulk** section for more details."
    },
    {
      "name": "Batch Updates",
      "description": "***\n### Overview\n  - The Batch Update endpoints are extensions of the Staging Tables procedures, and as such are only used when the Staging Tables module is present on a database. Each Batch Update endpoint is used for bulk additions and modifications to a specific dataset or task, such as inventory and suppliers or worksheet processing and promotion configuration.The Batch Update endpoints are the recommended method for secure manipulation of data outside of the Web Office interface.\n  - These are commonly used for synchronizing data from Legacy systems during migration or the automatition of certain tasks. Each endpoint is limited to **<font color=\"#2774B8\">POST</font>** requests unless where noted otherwise in the operation description.\n  - External links to the CATAPULT Online Manual (OLM) are included for additional clarification of terms, fields, parameters, and data points where applicable.\n  \n### Notes\n  - When any of the Batch Update endpoints are used, the associated data is temporarily stored in a table within the CATAPULT database at the store (where the endpoint was used). After the data is processed for any of the endpoints, the table will be automatically cleared/purged to prevent bloat. This self-cleaning behavior cannot be changed or modified, and no action is required for it to occur.\n  - **With CATAPULT 5.7.142 and newer**, if the Staging Tables are used outside of the Batch Update endpoints, please note that the database tables associated with each endpoint - except for <code>batch_ImportMessages</code> - will be cleared upon database restart. "
    }
  ],
  "paths": {
    "/Customer": {
      "get": {
        "summary": "View & Search",
        "operationId": "get-customer",
        "tags": [
          "Customers"
        ],
        "description": "<font color=\"#2F8132\">Use with a GET request to retrieve data from customer records.\nLimit results by <code>customerId</code> and/or <code>modifiedSince</code>, \nor exclude optional parameters to return all available data.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "customerId",
            "description": "The unique ID of a customer record. To request data for all customer records, do not send this parameter.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534\">Customer ID</a>.",
            "example": "401234567890"
          },
          {
            "schema": {
              "type": "datetime"
            },
            "in": "query",
            "name": "modifiedSince",
            "description": "Last modified date. Filters response data by <code>cus_timestamp</code>. \nAccepts date-only <code>YYYY-MM-DD</code> or full datetime <code>YYYY-MM-DD hh:mm:ss</code>.\nTo request data for all customer records, do not send this parameter. \n\nNote: Use datetime format to further refine search results from a date-only request.''"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/customers"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "$ref": "#/components/examples/GET-XML"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customers"
                  },
                  "examples": {
                    "Simple JSON Response": {
                      "$ref": "../schemas/customers.examples.yaml#/components/examples/GET-JSON"
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customers"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "$ref": "#/components/examples/GET-CSV"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SQLerror message=\"RAISERROR executed: Customer ID not found\"/>"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: Customer ID not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/Customer?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=401234567890&modifiedSince=SOME_DATETIME_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/Customer?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=401234567890&modifiedSince=SOME_DATETIME_VALUE\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/Customer?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=401234567890&modifiedSince=SOME_DATETIME_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/Customer',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    customerId: '401234567890',\n    modifiedSince: 'SOME_DATETIME_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      },
      "put": {
        "operationId": "put-customer",
        "summary": "Edit & Update",
        "tags": [
          "Customers"
        ],
        "description": "<font color=\"#95507C\">Use the customer endpoint with a PUT request to insert new, or update existing, customer records in your CATAPULT database. The lastName\nparameter is only required for new customer records. Note that this operation is limited to the creation and modification of customer maintenance records. It **does not** \ncreate Discounts, Price Levels, Check Profiles, or Membership Profiles. These must be created separately, either in WebOffice or by a supported API endpoint,\nbefore being used in a request parameter with the customer endpoint.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "customerId",
            "description": "If this fieldâs value is not specified, then a new Customer will be created, with a Customer ID determined automatically.\n\nGenerated Customer ID's will be 12-digit integers, starting with a 4, and ending with a GS1 UPC/EAN-compliant check digit.\n\nIf this fieldâs value is specified, a new Customer will be created (or updated if already existing) having the specified Customer ID."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 25
            },
            "in": "query",
            "name": "firstName",
            "description": "This field contains the Customerâs First Name."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 25
            },
            "in": "query",
            "name": "lastName",
            "description": "This field contains the Customerâs Last Name.\n\nRequired for new records."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 25
            },
            "in": "query",
            "name": "middleName",
            "description": "This field contains the Customerâs Middle Name."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 25
            },
            "in": "query",
            "name": "nickName",
            "description": "This field contains the Customerâs Alias."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "prefix",
            "description": "This field contains the Customerâs Prefix (Rev., Mrs., Mr., etc.)."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "suffix",
            "description": "This field contains the Customerâs Suffix (Jr.,Sr.,MD., etc.)."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 25
            },
            "in": "query",
            "name": "title",
            "description": "This field contains the Customerâs Title."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "query",
            "name": "company",
            "description": "This field contains the Company associated with the Customer."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "in": "query",
            "name": "memo",
            "description": "This field contains a string for entering notes about the Customer to save to the record."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "automaticDiscount",
            "description": "Enter name of the Automatic Discount to apply on a Customer's record. Send empty string to remove an Automatic Discount from existing customer record.\n\n**Warning:** If the specified Discount does not exist, an error will be returned and the record will not be created or updated.\n\nIf an Automatic Discount is specified, it will take priority over Automatic Discount Groups entered in the same query and remove those that already exist on the customer record. \nRecords cannot have both an Automatic Discount and an Automatic Discount Group."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "automaticDiscountGroup",
            "description": "This field contains the name of the Automatic Discount Group to apply to a Customer. Send empty string to remove an Automatic Discount Group from the customer record.\n\n**Warning:** If the specified Discount Group does not exist, an error will be returned and the record will not be created or updated.\n\nIf an Automatic Discount is specified in the same query, then any entered Automatic Discount Group will be blocked/dropped. \nRecords cannot have both an Automatic Discount and an Automatic Discount Group."
          },
          {
            "schema": {
              "type": "tinyint"
            },
            "in": "query",
            "name": "priceLevel",
            "description": "This field contains the Price Level assigned to the Customer. You may specify the name of the Price Level or the number (1, 2, 3, or 4).\n\n**Warning:** If the specified Price Level does not exist, an error will be returned and the record will not be created or updated."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField1",
            "description": "This field contains the value of Power Field 1."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "powerField2",
            "maxLength": 30,
            "description": "This field contains the value of Power Field 2."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField3",
            "description": "This field contains the value of Power Field 3."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField4",
            "description": "This field contains the value of Power Field 4."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField5",
            "description": "This field contains the value of Power Field 5."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField6",
            "description": "This field contains the value of Power Field 6."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField7",
            "description": "This field contains the value of Power Field 7."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "powerField8",
            "description": "This field contains the value of Power Field 8."
          },
          {
            "schema": {
              "type": "date"
            },
            "in": "query",
            "name": "birthDate",
            "description": "This field contains the Customerâs Birth Date (YYYY-MM-DD)."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "loyaltyEnabled",
            "description": "This field is set to True if the Customer is to accrue Loyalty Points, False otherwise. For new Customers, true is assumed if the default accrual rate for new Customers is set in headquarters' Transaction Security Profile."
          },
          {
            "schema": {
              "type": "number",
              "format": "double"
            },
            "in": "query",
            "name": "loyaltyAccrualMultiplier",
            "description": "This field contains the Accrual Rate Multiplier of the new Customer (must be between 0 and 10 inclusive)."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "suppressReceipt",
            "description": "This field is set to true to opt the Customer out of paper receipts, false otherwise."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "in": "query",
            "name": "checkFileMemo",
            "description": "This field contains a string for entering notes related to the Customerâs Check File."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "checkAcceptanceProfile",
            "description": "This field contains the name of the Customerâs Check Profile.\n\n**Warning:** If the specified Check Profile does not exist, an error will be returned and the record will not be created or updated."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "membershipAccount",
            "description": "This field contains the Customerâs Membership Account ID.\n\n**Warning:** If the specified Membership Profile does not exist, an error will be returned and the record will not be created or updated."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "query",
            "name": "billToAddressLine1",
            "description": "This field contains the first line of the Customerâs street address.\n\n**Warning:** If not specified, the remaining billToAddress parameters will be ignored."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "query",
            "name": "billToAddressLine2",
            "description": "This field contains the second line of the Customerâs street address."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 20
            },
            "in": "query",
            "name": "billToAddressCity",
            "description": "This field contains the city of the Customerâs street address."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 2
            },
            "in": "query",
            "name": "billToAddressStateProv",
            "description": "This field contains the state or province of the Customerâs street address."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 15
            },
            "in": "query",
            "name": "billToAddressPostalCode",
            "description": "This field contains the postal code of the Customerâs street address."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "billToAddressDescription",
            "description": "This field contains a brief description of the Customerâs street address. If not specified, this field defaults to âHomeâ."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "in": "query",
            "name": "billToEmailAddress",
            "description": "This field contains the Customerâs email address."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "billToEmailDescription",
            "description": "This field contains a brief description of the Customerâs email address. If not specified, this field defaults to âHomeâ."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "billToEmailMarketing",
            "description": "If this field is set to true, the specified e-mail address will be opted in for LoyaltyBot. If this field is set to false, the specified email address will be opted out for LoyaltyBot."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "billToEmailReceipt",
            "description": "If this field is set to true, the specified e-mail address is opted in for eReceipt.; If this field is set to false, the specified e-mail address is opted out for eReceipt."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 14
            },
            "in": "query",
            "name": "billToPhoneNumber",
            "description": "This field contains the Customerâs Phone Number."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "billToPhoneDescription",
            "description": "This field contains a brief description of the Customerâs Phone Number."
          },
          {
            "schema": {
              "type": "date"
            },
            "in": "query",
            "name": "membershipAccountJoined",
            "example": "2021-01-01",
            "description": "This field contains the date the Customer obtained Membership in the Store (YYYY-MM-DD HH:MM:SS.sss)."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hideInLookup",
            "example": false,
            "description": "If this field is set to true, the specified customer will be hidden from POS lookup screens."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "membershipInactive",
            "example": false,
            "description": "Accepts true or false. Updates the membership inactive option. \n\n*Available in versions 5.5.4.142 and greater.*"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "customerInactive",
            "example": false,
            "description": "Accepts true or false. Updates the customer inactive option.\n\n*Available in versions 5.5.4.142 and greater.*"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "loyaltyProgram",
            "example": "",
            "description": "Selects a loyalty program to import Loyalty Points into. When omitted or not valid, the default loyalty program is selected"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "loyaltyPoints",
            "example": "1",
            "description": "Imports a positive or negative loyalty point value. Value is points where 1 = 1.00 or 100 points. .01 = 0.01 or 1 single point"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "householdMainCustomerId",
            "example": "",
            "description": "This customer account ID that is desired to be the Parent. \nNone of the household details are considered without this field. \nThis replaces whatever is currently on the customer record. \nPass <code>none</code> for this parameter value to remove all household data for the customer record."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "householdRelation",
            "example": "",
            "description": "Text describing the relationship to the head of household, optional. \n\n*Available in versions 5.5.4.210 and greater.*"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "householdCanRedeem",
            "example": false,
            "description": "Defaults to true if not sent. Enables the household member to use the head of household loyalty points.\n\n*Available in versions 5.5.4.210 and greater.*"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "householdCanCharge",
            "example": false,
            "description": "Defaults to false if not sent. Enables the household member to use the head of household charge account.\n\n*Available in versions 5.5.4.210 and greater.*"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254,
              "enum": [
                "type%1dname%1dbirthdate",
                "none"
              ]
            },
            "in": "query",
            "name": "dependentsList",
            "description": "List of dependents and their attributes (type, name, birthdate; birthDate is optional). The records in this list are delimited by ascii code RS (30 or hex 1e). The fields in the record are delimited by ascii code GS(29 or hex 1d). Added in 5.5.4.216 or better.\n  Supply dependent attributes <code>type</code>, <code>name</code>, and <code>birthDate</code> (birthDate is optional) to add dependent(s) on a customer record.<sup>1</sup> \nPass keyword <code>none</code> as a request value for this parameter to remove all dependents from a customer record.<sup>2</sup>\n* Listed dependent records are delimited by ascii code RS30 or hex <code>%1e</code>. \n* Dependent attributes are delimited by ascii code GS29 or hex <code>%1d</code>. \n example: \"Friend%1dJohn%1d1980-01-05%1ePet%1dFido%1d\"",
            "example": "dependentsList=Friend\\John\\2022-01-05\\Pet\\William\\"
          },
          {
            "schema": {
              "type": "string",
              "maxlength": 254
            },
            "in": "query",
            "name": "taxExemption",
            "description": "Pass the name(s) of a tax to update customer record. Use group separator <code>%1d</code> to pass multiple tax exemptions onto a record. Use keyword <code>none</code> to remove all tax exemptions from a record. For example:\n* <code>.../Customer?customerID=722&taxExemption=Tax_121</code> will add tax exemption named Tax121 on  customer record 722.\n* <code>.../Customer?customerID=723&taxExemption=none</code> will remove all tax exemptions from customer record 723.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=763\">Taxes</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=960#tax-name\">Navigating & Understanding the Tax Generator (Tax Name)</a>.",
            "example": "GA_Gizmonic%1dVA_Deep13"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "PF"
              ]
            },
            "in": "query",
            "name": "taxExemptionType",
            "description": "Use this parameter coupled with the one above to affect bulk tax exemptions onto a customer record where the selected taxes each have the same Tax PowerField value as supplied in the request. For example:\n* <code>...?customerID=724&taxExemptionType=PF&taxExemption=GA</code> will add all taxes with a PowerField value of GA as exemptions on customer record 724.\n**Warning:** Disabled by default. Enable parameter by Global Advanced Setting in HQ Web Office: \n* KEY: enableTaxPowerfield\n* VALUE: true\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=960#tax-powerfield\">Navigating & Understanding the Tax Generator (Tax PowerField)</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=751#overview\">Advanced Settings</a>.\n*<sup>1</sup>Available in versions 5.5.4.216 and greater.* \\\n*<sup>2</sup>Available in versions 5.6.94 and greater.*",
            "example": "PF&taxExemption=VA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/customers"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Confirmation Response": {
                    "$ref": "#/components/examples/PUT-XML"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customers"
                  }
                },
                "examples": {
                  "Simple JSON Confirmation Response": {
                    "$ref": "#/components/examples/PUT-JSON"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customers"
                  }
                },
                "examples": {
                  "Simple XML Confirmation Response": {
                    "$ref": "#/components/examples/PUT-CSV"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Bad Request": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SQLerror message=\"RAISERROR executed: lastName is required for new customers\"/>"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: lastName is required for new customers"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/Customer?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&middleName=SOME_STRING_VALUE&nickName=SOME_STRING_VALUE&prefix=SOME_STRING_VALUE&suffix=SOME_STRING_VALUE&title=SOME_STRING_VALUE&company=SOME_STRING_VALUE&memo=SOME_STRING_VALUE&automaticDiscount=SOME_STRING_VALUE&automaticDiscountGroup=SOME_STRING_VALUE&priceLevel=SOME_TINYINT_VALUE&powerField1=SOME_STRING_VALUE&powerField2=SOME_STRING_VALUE&powerField3=SOME_STRING_VALUE&powerField4=SOME_STRING_VALUE&powerField5=SOME_STRING_VALUE&powerField6=SOME_STRING_VALUE&powerField7=SOME_STRING_VALUE&powerField8=SOME_STRING_VALUE&birthDate=SOME_DATE_VALUE&loyaltyEnabled=SOME_BOOLEAN_VALUE&loyaltyAccrualMultiplier=SOME_NUMBER_VALUE&suppressReceipt=SOME_BOOLEAN_VALUE&checkFileMemo=SOME_STRING_VALUE&checkAcceptanceProfile=SOME_STRING_VALUE&membershipAccount=SOME_STRING_VALUE&billToAddressLine1=SOME_STRING_VALUE&billToAddressLine2=SOME_STRING_VALUE&billToAddressCity=SOME_STRING_VALUE&billToAddressStateProv=SOME_STRING_VALUE&billToAddressPostalCode=SOME_STRING_VALUE&billToAddressDescription=SOME_STRING_VALUE&billToEmailAddress=SOME_STRING_VALUE&billToEmailDescription=SOME_STRING_VALUE&billToEmailMarketing=SOME_BOOLEAN_VALUE&billToEmailReceipt=SOME_BOOLEAN_VALUE&billToPhoneNumber=SOME_STRING_VALUE&billToPhoneDescription=SOME_STRING_VALUE&membershipAccountJoined=2021-01-01&hideInLookup=false&membershipInactive=false&customerInactive=false&loyaltyProgram=&loyaltyPoints=1&householdMainCustomerId=&householdRelation=&householdCanRedeem=false&householdCanCharge=false&dependentsList=dependentsList%3DFriend%5CJohn%5C2022-01-05%5CPet%5CWilliam%5C&taxExemption=GA_Gizmonic%251dVA_Deep13&taxExemptionType=PF%26taxExemption%3DVA'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/Customer?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&middleName=SOME_STRING_VALUE&nickName=SOME_STRING_VALUE&prefix=SOME_STRING_VALUE&suffix=SOME_STRING_VALUE&title=SOME_STRING_VALUE&company=SOME_STRING_VALUE&memo=SOME_STRING_VALUE&automaticDiscount=SOME_STRING_VALUE&automaticDiscountGroup=SOME_STRING_VALUE&priceLevel=SOME_TINYINT_VALUE&powerField1=SOME_STRING_VALUE&powerField2=SOME_STRING_VALUE&powerField3=SOME_STRING_VALUE&powerField4=SOME_STRING_VALUE&powerField5=SOME_STRING_VALUE&powerField6=SOME_STRING_VALUE&powerField7=SOME_STRING_VALUE&powerField8=SOME_STRING_VALUE&birthDate=SOME_DATE_VALUE&loyaltyEnabled=SOME_BOOLEAN_VALUE&loyaltyAccrualMultiplier=SOME_NUMBER_VALUE&suppressReceipt=SOME_BOOLEAN_VALUE&checkFileMemo=SOME_STRING_VALUE&checkAcceptanceProfile=SOME_STRING_VALUE&membershipAccount=SOME_STRING_VALUE&billToAddressLine1=SOME_STRING_VALUE&billToAddressLine2=SOME_STRING_VALUE&billToAddressCity=SOME_STRING_VALUE&billToAddressStateProv=SOME_STRING_VALUE&billToAddressPostalCode=SOME_STRING_VALUE&billToAddressDescription=SOME_STRING_VALUE&billToEmailAddress=SOME_STRING_VALUE&billToEmailDescription=SOME_STRING_VALUE&billToEmailMarketing=SOME_BOOLEAN_VALUE&billToEmailReceipt=SOME_BOOLEAN_VALUE&billToPhoneNumber=SOME_STRING_VALUE&billToPhoneDescription=SOME_STRING_VALUE&membershipAccountJoined=2021-01-01&hideInLookup=false&membershipInactive=false&customerInactive=false&loyaltyProgram=&loyaltyPoints=1&householdMainCustomerId=&householdRelation=&householdCanRedeem=false&householdCanCharge=false&dependentsList=dependentsList%3DFriend%5CJohn%5C2022-01-05%5CPet%5CWilliam%5C&taxExemption=GA_Gizmonic%251dVA_Deep13&taxExemptionType=PF%26taxExemption%3DVA\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/Customer?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&middleName=SOME_STRING_VALUE&nickName=SOME_STRING_VALUE&prefix=SOME_STRING_VALUE&suffix=SOME_STRING_VALUE&title=SOME_STRING_VALUE&company=SOME_STRING_VALUE&memo=SOME_STRING_VALUE&automaticDiscount=SOME_STRING_VALUE&automaticDiscountGroup=SOME_STRING_VALUE&priceLevel=SOME_TINYINT_VALUE&powerField1=SOME_STRING_VALUE&powerField2=SOME_STRING_VALUE&powerField3=SOME_STRING_VALUE&powerField4=SOME_STRING_VALUE&powerField5=SOME_STRING_VALUE&powerField6=SOME_STRING_VALUE&powerField7=SOME_STRING_VALUE&powerField8=SOME_STRING_VALUE&birthDate=SOME_DATE_VALUE&loyaltyEnabled=SOME_BOOLEAN_VALUE&loyaltyAccrualMultiplier=SOME_NUMBER_VALUE&suppressReceipt=SOME_BOOLEAN_VALUE&checkFileMemo=SOME_STRING_VALUE&checkAcceptanceProfile=SOME_STRING_VALUE&membershipAccount=SOME_STRING_VALUE&billToAddressLine1=SOME_STRING_VALUE&billToAddressLine2=SOME_STRING_VALUE&billToAddressCity=SOME_STRING_VALUE&billToAddressStateProv=SOME_STRING_VALUE&billToAddressPostalCode=SOME_STRING_VALUE&billToAddressDescription=SOME_STRING_VALUE&billToEmailAddress=SOME_STRING_VALUE&billToEmailDescription=SOME_STRING_VALUE&billToEmailMarketing=SOME_BOOLEAN_VALUE&billToEmailReceipt=SOME_BOOLEAN_VALUE&billToPhoneNumber=SOME_STRING_VALUE&billToPhoneDescription=SOME_STRING_VALUE&membershipAccountJoined=2021-01-01&hideInLookup=false&membershipInactive=false&customerInactive=false&loyaltyProgram=&loyaltyPoints=1&householdMainCustomerId=&householdRelation=&householdCanRedeem=false&householdCanCharge=false&dependentsList=dependentsList%3DFriend%5CJohn%5C2022-01-05%5CPet%5CWilliam%5C&taxExemption=GA_Gizmonic%251dVA_Deep13&taxExemptionType=PF%26taxExemption%3DVA\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/Customer',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    customerId: 'SOME_STRING_VALUE',\n    firstName: 'SOME_STRING_VALUE',\n    lastName: 'SOME_STRING_VALUE',\n    middleName: 'SOME_STRING_VALUE',\n    nickName: 'SOME_STRING_VALUE',\n    prefix: 'SOME_STRING_VALUE',\n    suffix: 'SOME_STRING_VALUE',\n    title: 'SOME_STRING_VALUE',\n    company: 'SOME_STRING_VALUE',\n    memo: 'SOME_STRING_VALUE',\n    automaticDiscount: 'SOME_STRING_VALUE',\n    automaticDiscountGroup: 'SOME_STRING_VALUE',\n    priceLevel: 'SOME_TINYINT_VALUE',\n    powerField1: 'SOME_STRING_VALUE',\n    powerField2: 'SOME_STRING_VALUE',\n    powerField3: 'SOME_STRING_VALUE',\n    powerField4: 'SOME_STRING_VALUE',\n    powerField5: 'SOME_STRING_VALUE',\n    powerField6: 'SOME_STRING_VALUE',\n    powerField7: 'SOME_STRING_VALUE',\n    powerField8: 'SOME_STRING_VALUE',\n    birthDate: 'SOME_DATE_VALUE',\n    loyaltyEnabled: 'SOME_BOOLEAN_VALUE',\n    loyaltyAccrualMultiplier: 'SOME_NUMBER_VALUE',\n    suppressReceipt: 'SOME_BOOLEAN_VALUE',\n    checkFileMemo: 'SOME_STRING_VALUE',\n    checkAcceptanceProfile: 'SOME_STRING_VALUE',\n    membershipAccount: 'SOME_STRING_VALUE',\n    billToAddressLine1: 'SOME_STRING_VALUE',\n    billToAddressLine2: 'SOME_STRING_VALUE',\n    billToAddressCity: 'SOME_STRING_VALUE',\n    billToAddressStateProv: 'SOME_STRING_VALUE',\n    billToAddressPostalCode: 'SOME_STRING_VALUE',\n    billToAddressDescription: 'SOME_STRING_VALUE',\n    billToEmailAddress: 'SOME_STRING_VALUE',\n    billToEmailDescription: 'SOME_STRING_VALUE',\n    billToEmailMarketing: 'SOME_BOOLEAN_VALUE',\n    billToEmailReceipt: 'SOME_BOOLEAN_VALUE',\n    billToPhoneNumber: 'SOME_STRING_VALUE',\n    billToPhoneDescription: 'SOME_STRING_VALUE',\n    membershipAccountJoined: '2021-01-01',\n    hideInLookup: 'false',\n    membershipInactive: 'false',\n    customerInactive: 'false',\n    loyaltyProgram: '',\n    loyaltyPoints: '1',\n    householdMainCustomerId: '',\n    householdRelation: '',\n    householdCanRedeem: 'false',\n    householdCanCharge: 'false',\n    dependentsList: 'dependentsList=Friend\\John\\2022-01-05\\Pet\\William\\',\n    taxExemption: 'GA_Gizmonic%1dVA_Deep13',\n    taxExemptionType: 'PF&taxExemption=VA'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/itemDetail": {
      "get": {
        "summary": "Detailed Search",
        "operationId": "get-item-detail",
        "tags": [
          "Items"
        ],
        "description": "<font color=\"#2F8132\">The Item Detail endpoint allows you to search for and retrieve information about a particular item, including promotional data. \nProvide the exact Item ID, the Receipt Alias, or a Conventional Item Group to perform a search. \nThe <code>itemSearch</code> parameter accepts **exact** text matches for Item IDs and **exact** or **begins with** text matches for the Receipt Alias or Conventional Item Group.\nExclude any search parameters to return all inventory records. \nPromotional details for an inventory record are returnable only if a provided <code>storeNumber</code> is correctly associated with an applicable Zone profile.\n\nResponses can be called from either the HQ or a RS Web Office address. \nNote API Keys do not replicate and must be re-created for an employee record in a target RS Web Office interface. \nThis RS-specific API Key can then be passed in the request header for authentication to that particular store.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 32
            },
            "in": "query",
            "name": "itemSearch",
            "description": "Accepts a Receipt Alias, the starting characters of a Receipt Alias, or an Item ID. Item ID must be an exact match.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=398\">General tab (Inventory Maintenance)</a>.",
            "example": "401234567890"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "query",
            "name": "groupSearch",
            "description": "Accepts a Conventional Item Group name or the starting characters of a Conventional Item Group name.\nReturns the item in itemSearch when both paramaters are provided.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1379\">Item Groups (Conventional Item Groups)</a>.",
            "example": "Bakery"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10
            },
            "in": "query",
            "name": "storeNumber",
            "description": "Accepts a Store Number to filter response data. The Store Number could represent a Headquarters (HQ) or Remote Store (RS). \nStores must have a Zone profile association to return promotional data. \nIf the <code>storeNumber</code> is not specified in the request query, then only data will be returned for the store where the query is being performed. For example, if you are running the API against the HQ CATAPULT location, and a <code>storeNumber</code> is not specified in the query, then only data from the HQ will be returned.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1089\">Zones (Profiles)</a>.",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/itemDetail"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/itemDetail"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <row itemId=\"999\"\n  storeName=\"Market 5\" \n  zoneName=\"Store Zone 2\"\n  receiptAlias=\"Gala Apple\" \n  itemName=\"GALA APPLE\" \n  department=\"Produce\"\n  subDepartment=\"Organic\"\n  category=\"\"\n  subCategory=\"\"\n  variety=\"\"\n  size=\"1 lb.\"\n  brand=\"Williamn Producers\"\n  loyaltyMultiplier=\"1.100\" \n  shelfLocation=\"11\"\n  shelfSequence=\"2\"\n  PricePL1=\"0.5000\" \n  priceDividerPL1=\"1\"\n  PricePL2=\"\" \n  priceDividerPL2=\"\"\n  PricePL3=\"\" \n  priceDividerPL3=\"\"\n  PricePL4=\"\" \n  priceDividerPL4=\"\"\n  promoPricePL1=\"\"\n  promoPriceDividerPL1=\"\"\n  promoPricePL2=\"\"\n  promoPriceDividerPL2=\"\"\n  promoPricePL3=\"\"\n  promoPriceDividerPL3=\"\"\n  promoPricePL4=\"\"\n  promoPriceDividerPL4=\"\"\n  lastCost=\"0.5000\" \n  averageCost=\"0.5000\" \n  onHand=\"125.000\",\n  onOrder=\"70.000\",\n  defaultSupplier=\"Catapult Industries\" \n  defaultSupplierUnitId=\"ca-1\" \n  defaultSupplierUnitQty=\"15.000\"\n  powerField1=\"Popular\"\n  storePowerField1=\"Not Popular\"\n  type=\"Stock Inventory\"\n  discontinued=\"1\"/>\n</root>"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/itemDetail"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "$ref": "#/components/examples/examples-GET-CSV"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/itemDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&itemSearch=401234567890&groupSearch=Bakery&storeNumber=123'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/itemDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&itemSearch=401234567890&groupSearch=Bakery&storeNumber=123\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/itemDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&itemSearch=401234567890&groupSearch=Bakery&storeNumber=123\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/itemDetail',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    itemSearch: '401234567890',\n    groupSearch: 'Bakery',\n    storeNumber: '123'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/allItems": {
      "get": {
        "summary": "View All",
        "operationId": "get-all-items",
        "tags": [
          "Items"
        ],
        "description": "<font color=\"#2F8132\">The All Items endpoint allows for the bulk retrieval of inventory records from your CATAPULT database.\nThe Item Detail endpoint (see previous) could be used to further refine details gleaned from responses to this endpoint.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/allItems"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <row itemId=\"999\" \n  name=\"REAL MEDLEYS APPLE NUT HRVST BAR\"\n  receiptAlias=\"APPLE NUT HRVST BAR\"\n  unitOfMeasure=\"12 ea\"\n  departmentNumber=\"5\"\n  brand=\"QUAKER\"\n  powerField1=\"Fruit Bar Collection\"\n  subCategoryNumber=\"15\"\n  categoryNumber=\"45\"\n  variety=\"Harvest Bar\"\n  familyLine=\"Breakfast Bar\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/allItems"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/allItems"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "$ref": "#/components/examples/components-examples-GET-CSV"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/allItems?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/allItems?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/allItems?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/allItems',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0'}\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/TransactionJournal": {
      "get": {
        "summary": "View & Search",
        "operationId": "get-transactionJournal",
        "tags": [
          "Transaction Journal"
        ],
        "description": "<font color=\"#2F8132\">Use this method to retrieve information on available transaction records, either for all customers or specific customers. \nServer responses are provided in XML format by default and content of the response body is modeled after the v_TJTrans (T-Log view) structure.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "startTime",
            "description": "This parameter contains the start time. Only transactions which were inserted into the HQ T-Log database after this will be included in the output. This time should be in the following format: 2015-03-25T12:00:00 (ISO 8601).",
            "example": "2015-03-25T12:00:00",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "endTime",
            "description": "This parameter contains the end time. Only transactions which were inserted into the HQ T-Log database before this will be included in the output. This time should  be in the following format: 2015-03-25T12:00:00 (ISO 8601).",
            "example": "2015-03-25T16:00:00",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "CustomerID",
            "description": "This parameter - available with CATAPULT 5.7.133 and newer - allows you to specify a Customer ID that you want to filter associated Transaction Journal information for. \n  * If the entered Customer ID parameter does not exactly match a corresponding record in the CATAPULT database, no results will be returned. \n  * If the Customer ID parameter is not sent in the query, all transactions within the specified date range will be returned. \n  * If the Customer ID parameter is empty (i.e., null), all transactions within the specified date range that do not have a customer associated to them will be returned.",
            "example": "4000000123456789"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "TransactionStatus",
            "description": "This parameter - available with CATAPULT 5.7.149 and newer - allows you to specify a desired (and eligible) Transaction Status to filter the transactions returned from the <code>transactionJournal</code> endpoint. \n\nThe following Transaction Statuses can be specified with this parameter:\n- <code>0</code> = Finalized Transactions\n- <code>1</code> = Training Mode\n- <code>3</code> = Suspended Transactions\n- <code>6</code> = Web Order Paid\n- <code>7</code> = Web Order\n- <code>10</code> = Order Pick Picking\n- <code>11</code> = Order Pick Ready\n- <code>12</code> = Picking in Progress\n- <code>13</code> = Fuel Pay Inside\n- <code>14</code> = Web Order Editing\n\nIf this query parameter is used but no Transaction Status code is specified, <code>0</code> will be used by default, which means only \"Finalized Transactions\" will be included in the response. \n\n**TIP:** This parameter can be used in conjunction with the <code>CustomerID</code> parameter to further filter the transactions returned with this endpoint.",
            "example": "10"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "AllVoid",
            "description": "This parameter - available with CATAPULT 5.7.149 and newer - allows you to filter for \"All Void\" transactions using the following options:\n- <code>0</code> = This option will **exclude** All Void transactions from the response. \n- <code>1</code> = This option will cause All Void transactions to be the only ones included in the response.\n\nIf this query parameter is used but neither option is specified, <code>0</code> will be used by default, which means \"All Void\" transactions will be excluded from the response.\n\n**TIP:** This parameter can be used in conjunction with the <code>CustomerID</code> parameter to further filter the transactions returned with this endpoint.",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/transactionjournal"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version=\"1.0\" encoding=\"windows-1252\" ?>\n<root>\n    <row TRN_PK=\"18048\",\n    TRN_CPK=\"1002\",\n    TRN_STO_FK=\"3\",\n    TRN_STO_CFK=\"1000\",\n    TRN_StartTime=\"2016-01-06 10:37:20.870\",\n    TRN_EndTime=\"2016-01-06 10:37:20.870\",\n    TRN_ReceiptNumber=\"16029\",\n    TRN_Type=\"0\",\n    TRN_EMP_FK=\"4\",\n    TRN_EMP_CFK=\"1000\",\n    TRN_SequenceNumber=\"16029\",\n    TRN_TCF_FK=\"2\",\n    TRN_TCF_CFK=\"1002\",\n    TRN_CUS_FK=\"2\",\n    TRN_CUS_CFK=\"1000\",\n    TRN_AllVoid=\"0\",\n    TRN_UploadTime=\"2016-01-06 10:37:20.870\",\n    TRN_Status=\"0\",\n    TCF_Description=\"Terminal 1\",\n    TCF_Number=\"1\",\n    TCF_TerminalId=\"07325795\",\n    EMP_Number=\"99\",\n    EMP_FirstName=\"Self\",\n    EMP_LastName=\"Checkout\",\n    CUS_AccountNumber=\"4012345678900\",\n    CUS_FirstName=\"John\",\n    CUS_LastName=\"Smith\",\n    CUS_Company=\"ECRS\",\n    TLI_PK=\"1\",\n    TLI_LIT_FK=\"1\",\n    TLI_StartTime=\"2016-01-06 10:37:20.870\",\n    TLI_EndTime=\"2016-01-06 10:37:20.870\",\n    TLI_Amount=\"1.29\",\n    TLI_ReceiptAlias=\"Widget\",\n    TLI_Quantity=\"1.000\",\n    TLI_ScanCode=\"212345678901\",\n    TLI_TaxDifference=\"1.29\",\n    ExtendedPrice=\"1.29\",\n    ExtendedBasePrice=\"1.29\",\n    CTI_CMB_FK=0,\n    CTI_CMB_CFK=0,\n    CTI_DiscountAmount=null,\n    CTI_SellingAmount=null,\n    CTI_TLI_FK_Item=\"1\",\n    CMB_Name=\"string\",\n    CPT_Void=\"0\",\n    DLI_TypeDollar=true,\n    DLI_TypePercent=true,\n    DLI_LineItem=\"string\",\n    DLI_DIS_FK=0,\n    DLI_Void=\"0\",\n    DLI_DIS_CFK=0,\n    DLI_ApplyBeforeTax=\"0\",\n    DLI_Return=\"0\",\n    DLI_INV_FK=\"1\",\n    DLI_INV_CFK=\"1000\",\n    DLI_Automatic=\"0\",\n    DLI_ASC_FK=\"1\",\n    DLI_ASC_CFK=\"1000\",\n    DLI_InventoryLineItem=\"3\",\n    DLI_ReportConsolidated=\"0\",\n    ITI_AverageCost=\"1.29\",\n    ITI_EntryMethod=\"1\",\n    ITI_Return=\"0\",\n    ITI_INV_FK=\"1\",\n    ITI_Void=true,\n    ITI_INV_CFK=\"1000\",\n    ITI_SellingPrice=\"1.29\",\n    ITI_BasePrice=\"string\",\n    ITI_ASC_FK=\"1\",\n    ITI_ASC_CFK=\"1000\",\n    ITI_ASCQuantity=\"1.00\",\n    ITI_PriceLevel=\"1\",\n    ITI_DiscountPriceOverride=\"1\",\n    DPT_Name=\"Grocery\",\n    DPT_Number=\"99\",\n    DPT_OmitFromSales=\"0\",\n    TTI_TAX_FK=\"1000\",\n    TTI_TAX_CFK=\"1000\",\n    TTI_ReturnTax=\"0\",\n    TTI_TaxableAmount=\"1.29\",\n    NTI_TEN_FK=\"1\",\n    NTI_TEN_CFK=\"1000\",\n    NTI_AuthorizationCode=\"string\",\n    TRN_ETI_AccountName=\"string\",\n    TRN_ETI_AccountNumber=\"stri\",\n    TRN_ETI_CardType=\"strin\",\n    TRN_ETI_TenderAmount=\"1.29\",\n    NTI_TenderType=\"2\",\n    NTI_Amount=\"1.2900\",\n    NTI_Void=\"0\",\n    NTI_SafeDrop=\"1\",\n    NTI_Loan=\"1\",\n    NTI_FCExchangeRate=\"0.76\",\n    NTI_FCTenderAmount=\"1.29\",\n    NTI_ForeignCurrency=\"0\",\n    TEN_PK=\"1\",\n    TEN_CPK=\"1000\",\n    TEN_Description=\"Cash\",\n    CTI_BonusAmount=\"1.29\",\n    CTI_EntryMethod=\"1\",\n    CTI_Void=\"0\",\n    CTI_ManufacturerCode=\"string\",\n    CTI_FamilyCode=\"string\",\n    CTI_CouponCode=\"string\",\n    SalespersonFK=\"1\",\n    SalespersonCFK=\"1000\",\n    GCT_Void=\"0\",\n    LTN_Start1=\"string\",\n    LTN_End1=\"string\",\n    LTN_Start2=\"string\",\n    LTN_End2=\"string\",\n    LTN_Start3=\"string\",\n    LTN_End3=\"string\",\n    LTN_Start4=\"string\",\n    LTN_End4=\"string\",\n    LTN_Start5=\"string\",\n    LTN_End5=\"string\",\n    LTN_Start6=\"string\",\n    LTN_End6=\"string\",\n    LTN_AddtlRanges=\"string\",\n    TRN_Total=\"string\",\n    TRN_NetSales=\"string\",\n    TRN_ItemQuantity=\"string\",\n    TRN_ItemCorrects=\"string\",\n    TRN_Negatives=\"string\",\n    StoreNumber=\"string\",\n    TRN_ETI_Approval=\"string\",\n    TRN_ETI_Reference=\"string\",\n    TRN_ETI_RemainingBalance=\"string\",\n    TRN_ETI_CvvResult=\"s\",\n    TRN_ETI_AvsResult=\"s\",\n    TRN_ETI_Bin=\"string\",\n    TRN_ETI_AuthorizationDate=\"string\",\n    TRN_ETI_AuthorizationTime=\"string\",\n    TRN_ETI_AuthorizationType=\"string\",\n    TRN_ETI_AuthorizationStan=\"string\",\n    CTI_ApplyToFoodstamps=true,\n    CTI_ApplyToFSA=true,\n    CTI_CouponBarcode=\"string\",\n    CTI_ProviderId=\"string\",\n    CTI_FaceValue=\"string\",\n    NTI_CHG_FK=0,\n    NTI_CHG_CFK=0,\n    NTI_TLI_CashBack=0,\n    TLI_Divider=0,\n    ITI_BasePriceDivider=0,\n    ITI_PL1BasePriceDivider=0,\n    ITI_WeightEntryMethod=0,\n    ITI_TareEntryMethod=0,\n    ITI_Pl1BasePrice=\"string\",\n    ITI_Pl1PromptForPrice=true,\n    ITI_TareWeight=\"string\",\n    ITI_EmbeddedPrice=\"string\",\n    ITI_SpecialPricing=true,\n    ITI_Variation=0,\n    ITI_LinkType=0,\n    ITI_ModQuantity=\"string\",\n    ITI_ModPrice=\"string\",\n    ITI_EmbeddedDiscount=\"string\",\n    ITI_FSA=true,\n    ITI_SNAP=true,\n    ITI_WeightUnit=0,\n    PromptName=\"string\",\n    PromptResponse=\"string\",\n    PromptItem=0,\n    CTI_Expiration=\"string\",\n    ITI_MarkdownBarCode=\"string\",\n    ITI_TLI_LinkLineItem=0,\n    ComboTotalLoyaltyProgram=\"string\",\n    ComboTotalStoreCouponName=\"string\",\n    CTH_Voided=true,\n    CTH_EarnedLoyalty=\"string\",\n    LoyaltyTransactionLoyaltyProgram=\"string\",\n    LoyaltyTransactionStoreCouponName=\"string\",\n    LTI_Expiring=\"string\",\n    LTI_ExpirationDate=\"string\",\n    CTI_ComboTotalLineItem=0,\n    ComboOmitFromSales=true,\n    CMB_ApplyAfterTaxes=true,\n    STI_Status=0,\n    EMD_SequenceNumber=0,\n    EMD_TransactionSequenceNumber=0,\n    EMD_Time=\"string\",\n    EMD_Tender=\"string\",\n    EMD_TLI_FK=0,\n    EMD_5A=\"string\",\n    EMD_82=\"stri\",\n    EMD_84=\"string\",\n    EMD_9A=\"string\",\n    EMD_9F21=\"string\",\n    EMD_9C=\"st\",\n    EMD_5F34=\"st\",\n    EMD_5F2A=\"str\",\n    EMD_9F02=\"string\",\n    EMD_9F03=\"string\",\n    EMD_9F08=\"stri\",\n    EMD_9F09=\"stri\",\n    EMD_9F1A=\"str\",\n    EMD_9F33=\"string\",\n    EMD_9F34=\"string\",\n    EMD_9F35=\"st\",\n    EMD_9F36=\"stri\",\n    EMD_9F37=\"string\",\n    EMD_9F0D=\"string\",\n    EMD_9F0E=\"string\",\n    EMD_9F0F=\"string\",\n    EMD_TACD=\"string\",\n    EMD_TACO=\"string\",\n    EMD_TACF=\"string\",\n    EMD_95_1GEN=\"string\",\n    EMD_9F10_1GEN=\"string\",\n    EMD_9F26_1GEN=\"string\",\n    EMD_9F27_1GEN=\"st\",\n    EMD_91=\"string\",\n    EMD_95_2GEN=\"string\",\n    EMD_9F26_2GEN=\"string\",\n    EMD_9F27_2GEN=\"st\",\n    EMD_8A=\"stri\",\n    EMD_9B=\"stri\",\n    EMD_AppName=\"string\",\n    EMD_CardEntryMethod=\"string\",\n    EMD_CardVerMethod=\"string\",\n    EMD_Mode=\"string\",\n    EMD_9F06=\"string\",\n    ITI_RetailAccountingPrice=\"string\",\n    ITI_RetailAccountingReportCode=\"string\",\n    GCT_GCP_FK=0,\n    GCT_GCP_CFK=0,\n    GCT_Code=\"str\",\n    GCT_Account=\"string\",\n    GCT_SendDate=\"string\",\n    GCT_Print=true,\n    GCT_RecipientEmail=\"string\",\n    GCT_RecipientPhoneNumber=\"string\",\n    GCT_RecipientName=\"string\",\n    GCT_SenderName=\"string\",\n    TRN_WTR_FK=0,\n    TRN_WTR_CFK=0,\n    TRN_ETI_ExpDate=\"strin\",\n    TRN_ETI_CardSwiped=true,\n    TRN_ETI_Processor=\"string\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transactionjournal"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transactionjournal"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "$ref": "#/components/examples/transactionjournal_components-examples-GET-CSV"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Bad Request": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SQLerror message=\"Cannot convert &#39;2015-0325T16:00:00&#39; to timestamp\"/>"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "Cannot convert &#39;2015-0325T16:00:00&#39; to timestamp"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/TransactionJournal?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startTime=2015-03-25T12%3A00%3A00&endTime=2015-03-25T16%3A00%3A00&CustomerID=4000000123456789&TransactionStatus=10&AllVoid=1'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/TransactionJournal?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startTime=2015-03-25T12%3A00%3A00&endTime=2015-03-25T16%3A00%3A00&CustomerID=4000000123456789&TransactionStatus=10&AllVoid=1\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/TransactionJournal?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startTime=2015-03-25T12%3A00%3A00&endTime=2015-03-25T16%3A00%3A00&CustomerID=4000000123456789&TransactionStatus=10&AllVoid=1\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/TransactionJournal',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startTime: '2015-03-25T12:00:00',\n    endTime: '2015-03-25T16:00:00',\n    CustomerID: '4000000123456789',\n    TransactionStatus: '10',\n    AllVoid: '1'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/CustomerStoreCoupon": {
      "get": {
        "summary": "Customer Store Coupon",
        "description": "<font color=\"#2F8132\">Use **GET** to obtain a list of Store Coupons attached to a customer maintenance record.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "customerId",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#CustomerID\">Customer ID</a>."
          }
        ],
        "tags": [
          "Maintenance Profiles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "type": "string",
                              "example": "1234567",
                              "description": "The unique ID for the customer in the associated row."
                            },
                            "couponCode": {
                              "type": "string",
                              "example": "V8>OS1",
                              "description": "The code used by the coupon in the associated row."
                            },
                            "couponReceiptAlias": {
                              "type": "string",
                              "description": "The receipt alias used by the coupon in the associated row."
                            },
                            "couponName": {
                              "type": "string",
                              "description": "The coupon name."
                            },
                            "couponExpires": {
                              "type": "date",
                              "description": "The coupon expiration date, if set."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>OS1\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Coupon\" \n      couponExpires=\"\"/>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>ORS\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Coupon Category\" \n      couponExpires=\"\"/>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>OSC\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Special\" \n      couponExpires=\"\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "example": "1234567",
                        "description": "The unique ID for the customer in the associated row."
                      },
                      "couponCode": {
                        "type": "string",
                        "example": "V8>OS1",
                        "description": "The code used by the coupon in the associated row."
                      },
                      "couponReceiptAlias": {
                        "type": "string",
                        "example": "Household Coupon",
                        "description": "The receipt alias used by the coupon in the associated row."
                      },
                      "couponName": {
                        "type": "string",
                        "description": "The coupon name."
                      },
                      "couponExpires": {
                        "type": "date",
                        "description": "The coupon expiration date, if set."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "example": "1234567",
                        "description": "The unique ID for the customer in the associated row."
                      },
                      "couponCode": {
                        "type": "string",
                        "example": "V8>OS1",
                        "description": "The code used by the coupon in the associated row."
                      },
                      "couponReceiptAlias": {
                        "type": "string",
                        "description": "The receipt alias used by the coupon in the associated row."
                      },
                      "couponName": {
                        "type": "string",
                        "description": "The coupon name."
                      },
                      "couponExpires": {
                        "type": "date",
                        "description": "The coupon expiration date, if set."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "\n'customerId','couponCode','couponReceiptAlias','couponName','couponExpires'\n'1234567','V8>OS1','','Household Coupon',''\n'1234567','V8>ORS','','Household Coupon Category',''\n'1234567','V8>OSC','','Household Special',''"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-CustomerStoreCoupon",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/CustomerStoreCoupon',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', customerId: 'SOME_STRING_VALUE'}\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      },
      "put": {
        "summary": "Customer Store Coupon",
        "description": "<font color=\"#95507C\">Use **PUT** to attach new Store Coupons on a customer record or change the expiry date on existing ones. Responses are sorted to display the most recent coupon attachments at the top.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "customerId",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#CustomerID\">Customer ID</a>.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "couponCode",
            "description": "The couponCode or couponReceiptAlias to attach on the specified customer record.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1191\">Store Coupons/Customer Groups</a>.",
            "required": true
          },
          {
            "schema": {
              "type": "date"
            },
            "in": "query",
            "name": "couponExpires",
            "description": "Expiration date for the Store Coupon attached on the specified customer record. Accepts YYYY-MM-DD format.",
            "required": true
          }
        ],
        "tags": [
          "Maintenance Profiles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "type": "string",
                              "example": "1234567",
                              "description": "The unique ID for the customer in the associated row."
                            },
                            "couponCode": {
                              "type": "string",
                              "example": "V8>OS1",
                              "description": "The code used by the coupon in the associated row."
                            },
                            "couponReceiptAlias": {
                              "type": "string",
                              "description": "The receipt alias used by the coupon in the associated row."
                            },
                            "couponName": {
                              "type": "string",
                              "description": "The coupon name."
                            },
                            "couponExpires": {
                              "type": "date",
                              "description": "The coupon expiration date, if set."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>OSC\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Special\" \n      couponExpires=\"\"/>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>OS1\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Coupon\" \n      couponExpires=\"\"/>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>ORS\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Coupon Category\" \n      couponExpires=\"\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "example": "1234567",
                        "description": "The unique ID for the customer in the associated row."
                      },
                      "couponCode": {
                        "type": "string",
                        "example": "V8>OS1",
                        "description": "The code used by the coupon in the associated row."
                      },
                      "couponReceiptAlias": {
                        "type": "string",
                        "example": "Household Coupon",
                        "description": "The receipt alias used by the coupon in the associated row."
                      },
                      "couponName": {
                        "type": "string",
                        "description": "The coupon name."
                      },
                      "couponExpires": {
                        "type": "date",
                        "description": "The coupon expiration date, if set."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "example": "1234567",
                        "description": "The unique ID for the customer in the associated row."
                      },
                      "couponCode": {
                        "type": "string",
                        "example": "V8>OS1",
                        "description": "The code used by the coupon in the associated row."
                      },
                      "couponReceiptAlias": {
                        "type": "string",
                        "description": "The receipt alias used by the coupon in the associated row."
                      },
                      "couponName": {
                        "type": "string",
                        "description": "The coupon name."
                      },
                      "couponExpires": {
                        "type": "date",
                        "description": "The coupon expiration date, if set."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "\n'customerId','couponCode','couponReceiptAlias','couponName','couponExpires'\n'1234567','V8>OSC','','Household Special',''\n'1234567','V8>OS1','','Household Coupon',''\n'1234567','V8>ORS','','Household Coupon Category',''"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "operationId": "put-CustomerStoreCoupon",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&couponCode=SOME_STRING_VALUE&couponExpires=SOME_DATE_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&couponCode=SOME_STRING_VALUE&couponExpires=SOME_DATE_VALUE\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&couponCode=SOME_STRING_VALUE&couponExpires=SOME_DATE_VALUE\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/CustomerStoreCoupon',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    customerId: 'SOME_STRING_VALUE',\n    couponCode: 'SOME_STRING_VALUE',\n    couponExpires: 'SOME_DATE_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      },
      "delete": {
        "summary": "Customer Store Coupon",
        "description": "<font color=\"#CC3333\">Use **DELETE** to remove a particular Store Coupon from a customer record. Responses will return the list of coupons, if any, that remain on the customer record.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 16
            },
            "in": "query",
            "name": "customerId",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#CustomerID\">Customer ID</a>.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "couponCode",
            "description": "The couponCode or couponReceiptAlias of the coupon association targeted for removal.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1191\">Store Coupons/Customer Groups</a>.",
            "required": true
          }
        ],
        "tags": [
          "Maintenance Profiles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "type": "string",
                              "example": "1234567",
                              "description": "The unique ID for the customer in the associated row."
                            },
                            "couponCode": {
                              "type": "string",
                              "example": "V8>OS1",
                              "description": "The code used by the coupon in the associated row."
                            },
                            "couponReceiptAlias": {
                              "type": "string",
                              "description": "The receipt alias used by the coupon in the associated row."
                            },
                            "couponName": {
                              "type": "string",
                              "description": "The coupon name."
                            },
                            "couponExpires": {
                              "type": "date",
                              "description": "The coupon expiration date, if set."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>OS1\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Coupon\" \n      couponExpires=\"\"/>\n    <row customerId=\"1234567\" \n      couponCode=\"V8>ORS\" \n      couponReceiptAlias=\"\" \n      couponName=\"Household Coupon Category\" \n      couponExpires=\"\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "example": "1234567",
                        "description": "The unique ID for the customer in the associated row."
                      },
                      "couponCode": {
                        "type": "string",
                        "example": "V8>OS1",
                        "description": "The code used by the coupon in the associated row."
                      },
                      "couponReceiptAlias": {
                        "type": "string",
                        "example": "Household Coupon",
                        "description": "The receipt alias used by the coupon in the associated row."
                      },
                      "couponName": {
                        "type": "string",
                        "description": "The coupon name."
                      },
                      "couponExpires": {
                        "type": "date",
                        "description": "The coupon expiration date, if set."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "example": "1234567",
                        "description": "The unique ID for the customer in the associated row."
                      },
                      "couponCode": {
                        "type": "string",
                        "example": "V8>OS1",
                        "description": "The code used by the coupon in the associated row."
                      },
                      "couponReceiptAlias": {
                        "type": "string",
                        "description": "The receipt alias used by the coupon in the associated row."
                      },
                      "couponName": {
                        "type": "string",
                        "description": "The coupon name."
                      },
                      "couponExpires": {
                        "type": "date",
                        "description": "The coupon expiration date, if set."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "\n'customerId','couponCode','couponReceiptAlias','couponName','couponExpires'\n'1234567','V8>OS1','','Household Coupon',''\n'1234567','V8>ORS','','Household Coupon Category',''"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "operationId": "delete-CustomerStoreCoupon",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url 'https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&couponCode=SOME_STRING_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&couponCode=SOME_STRING_VALUE\"))\n    .method(\"DELETE\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/CustomerStoreCoupon?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&customerId=SOME_STRING_VALUE&couponCode=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://accountid.catapultweboffice.com/api/CustomerStoreCoupon',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    customerId: 'SOME_STRING_VALUE',\n    couponCode: 'SOME_STRING_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/departmentDetail": {
      "get": {
        "summary": "Department Detail",
        "operationId": "get-department-detail",
        "tags": [
          "Maintenance Profiles"
        ],
        "description": "<font color=\"#2F8132\">The Department Detail endpoint allows you to retrieve data for your global department(s).\nYou may optionally pass a specific department number in the call operation to limit the server response to information for that particular object.\nInformation for all available, global departments are returned if a unique department number is not specified.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "in": "query",
            "name": "deptNumber",
            "description": "Unique identifier for a global department. Use this parameter to limit response data for that particular department. Store-specific departments are not included. Inalvid, non-global, or unrecognized department numbers will result in an error.",
            "example": "42",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "departmentNumber": {
                        "type": "string",
                        "maxLength": 8,
                        "example": "3000",
                        "description": "The unique department identifier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#id\">Department ID</a>."
                      },
                      "departmentName": {
                        "type": "string",
                        "maxLength": 30,
                        "example": "GIZMONIC",
                        "description": "The department name. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#name\">Department Name</a>."
                      },
                      "departmentBuyer": {
                        "type": "string",
                        "maxLength": 25,
                        "example": "Forrester",
                        "description": "Name of employee associated with department purchases. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#buyer\">Department Buyer</a>."
                      },
                      "departmentOpenSaleLowAmt": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Department *Prompt for Price* minimum. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#deptlimits\">Department Limits</a>."
                      },
                      "departmentOpenSaleHighAmt": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Department *Prompt for Price* maximum."
                      },
                      "departmentHighQtyMultiplier": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Maximum value allowed for quantity or weight adjustment multiplier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#highest-wt-qty\">Department Adjustment Multiplier (High)</a>."
                      },
                      "departmentLowQtyMultiplier": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Minimum value allowed for quantity or weight adjustment multiplier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#lowest-wt-qty\">Department Adjustment Multiplier (Low)</a>."
                      },
                      "departmentOmitFromSales": {
                        "type": "boolean",
                        "description": "Defines if the department is reported separately from general sales: returns <code>0</code> if disabled/false and <code>1</code> if enabled/true. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#omitsales\">Department Omit from Sales</a>."
                      },
                      "departmentTransLimit": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Department purchase limit. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#transactionlimit\">Department Purchase Limit</a>."
                      },
                      "departmentAdjustWarning": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Maximum value (positive or negative) for a quantity adjustment that can be made to an on-hand item before a warning is prompted. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#qtyadjustment\">Department Quantity Adjustments</a>."
                      },
                      "departmentMemo": {
                        "type": "string",
                        "maxLength": 254,
                        "description": "The department memo."
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "departmentNumber": {
                              "type": "string",
                              "maxLength": 8,
                              "example": "3000",
                              "description": "The unique department identifier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#id\">Department ID</a>."
                            },
                            "departmentName": {
                              "type": "string",
                              "maxLength": 30,
                              "example": "GIZMONIC",
                              "description": "The department name. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#name\">Department Name</a>."
                            },
                            "departmentBuyer": {
                              "type": "string",
                              "maxLength": 25,
                              "example": "Forrester",
                              "description": "Name of employee associated with department purchases. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#buyer\">Department Buyer</a>."
                            },
                            "departmentOpenSaleLowAmt": {
                              "type": "number",
                              "format": "double",
                              "maxLength": 12,
                              "description": "Department *Prompt for Price* minimum. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#deptlimits\">Department Limits</a>."
                            },
                            "departmentOpenSaleHighAmt": {
                              "type": "number",
                              "format": "double",
                              "maxLength": 12,
                              "description": "Department *Prompt for Price* maximum."
                            },
                            "departmentHighQtyMultiplier": {
                              "type": "number",
                              "format": "double",
                              "maxLength": 12,
                              "description": "Maximum value allowed for quantity or weight adjustment multiplier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#highest-wt-qty\">Department Adjustment Multiplier (High)</a>."
                            },
                            "departmentLowQtyMultiplier": {
                              "type": "number",
                              "format": "double",
                              "maxLength": 12,
                              "description": "Minimum value allowed for quantity or weight adjustment multiplier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#lowest-wt-qty\">Department Adjustment Multiplier (Low)</a>."
                            },
                            "departmentOmitFromSales": {
                              "type": "boolean",
                              "description": "Defines if the department is reported separately from general sales: returns <code>0</code> if disabled/false and <code>1</code> if enabled/true. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#omitsales\">Department Omit from Sales</a>."
                            },
                            "departmentTransLimit": {
                              "type": "number",
                              "format": "double",
                              "maxLength": 12,
                              "description": "Department purchase limit. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#transactionlimit\">Department Purchase Limit</a>."
                            },
                            "departmentAdjustWarning": {
                              "type": "number",
                              "format": "double",
                              "maxLength": 12,
                              "description": "Maximum value (positive or negative) for a quantity adjustment that can be made to an on-hand item before a warning is prompted. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#qtyadjustment\">Department Quantity Adjustments</a>."
                            },
                            "departmentMemo": {
                              "type": "string",
                              "maxLength": 254,
                              "description": "The department memo."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <row departmentNumber=\"3000\"\n  departmentName=\"GIZMONIC\"\n  departmentBuyer=\"Forrester\"\n  departmentOpenSaleLowAmt=\".0100\"\n  departmentOpenSaleHighAmt=\"99.0000\"\n  departmentHighQtyMultiplier=\"36.000\"\n  departmentLowQtyMultiplier=\"0.000\"\n  departmentOmitFromSales=\"0\"\n  departmentMemo=\"\"/>\n</root>"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "departmentNumber": {
                        "type": "string",
                        "maxLength": 8,
                        "example": "3000",
                        "description": "The unique department identifier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#id\">Department ID</a>."
                      },
                      "departmentName": {
                        "type": "string",
                        "maxLength": 30,
                        "example": "GIZMONIC",
                        "description": "The department name. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#name\">Department Name</a>."
                      },
                      "departmentBuyer": {
                        "type": "string",
                        "maxLength": 25,
                        "example": "Forrester",
                        "description": "Name of employee associated with department purchases. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#buyer\">Department Buyer</a>."
                      },
                      "departmentOpenSaleLowAmt": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Department *Prompt for Price* minimum. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#deptlimits\">Department Limits</a>."
                      },
                      "departmentOpenSaleHighAmt": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Department *Prompt for Price* maximum."
                      },
                      "departmentHighQtyMultiplier": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Maximum value allowed for quantity or weight adjustment multiplier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#highest-wt-qty\">Department Adjustment Multiplier (High)</a>."
                      },
                      "departmentLowQtyMultiplier": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Minimum value allowed for quantity or weight adjustment multiplier. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#lowest-wt-qty\">Department Adjustment Multiplier (Low)</a>."
                      },
                      "departmentOmitFromSales": {
                        "type": "boolean",
                        "description": "Defines if the department is reported separately from general sales: returns <code>0</code> if disabled/false and <code>1</code> if enabled/true. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#omitsales\">Department Omit from Sales</a>."
                      },
                      "departmentTransLimit": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Department purchase limit. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#transactionlimit\">Department Purchase Limit</a>."
                      },
                      "departmentAdjustWarning": {
                        "type": "number",
                        "format": "double",
                        "maxLength": 12,
                        "description": "Maximum value (positive or negative) for a quantity adjustment that can be made to an on-hand item before a warning is prompted. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=607#qtyadjustment\">Department Quantity Adjustments</a>."
                      },
                      "departmentMemo": {
                        "type": "string",
                        "maxLength": 254,
                        "description": "The department memo."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": "\n'departmentNumber','departmentName','departmentBuyer','departmentOpenSaleLowAmt','departmentOpenSaleHighAmt','departmentHighQtyMultiplier','departmentLowQtyMultiplier','departmentOmitFromSales','departmentMemo'\n'3000','GIZMONIC','Forrester','.0100','99.0000','36.000','0.000','0',''"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/departmentDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&deptNumber=42'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/departmentDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&deptNumber=42\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/departmentDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&deptNumber=42\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/departmentDetail',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', deptNumber: '42'}\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/dynamicPromotionsDetail": {
      "get": {
        "operationId": "get-dynamic-promotions-detail",
        "summary": "Get Dynamic Promotion Details",
        "tags": [
          "Dynamic Promotions"
        ],
        "description": "This endpoint allows you to <font color=\"#2F8132\">GET</font> all details about active Dynamic Promotions within a specified date range.",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "startDate",
            "description": "The first day to return promotions for.\nIf no <code>startDate</code> is specified in the query, it will default to 1 week in the past from the query date. ",
            "example": "2023-01-01"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "The last day to return promotions for.\nIf no <code>endDate</code> is specified in the query, it will default to the current date. ",
            "example": "2023-07-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dynamicPromotionsDetail"
                  }
                },
                "examples": {
                  "Simple JSON Response": {
                    "value": [
                      {
                        "id": "1012|1000",
                        "name": "Test Item Promotion",
                        "alias": "Test Item Promotion",
                        "storeCoupon": "Opt Out Print Rec - 10% Off",
                        "storeFilterType": "Zone",
                        "zone": "All",
                        "storeGroup": "",
                        "powerField1": "test 1",
                        "powerField2": "test 2",
                        "powerField3": "test 3",
                        "powerField4": "test 4",
                        "powerField5": "test 5",
                        "powerField6": "test 6",
                        "powerField7": "test 7",
                        "powerField8": "test 8",
                        "terminalGroup": "POS Lanes",
                        "BOGOflag": 1,
                        "BOGOlesserValue": 0,
                        "BOGOgreaterValue": 0,
                        "itemGroups": [
                          {
                            "itemGroupName": "Apples",
                            "itemGroupID": "5|1003",
                            "requiredQuantity": 1,
                            "requiredAmount": 0,
                            "distribution": 100,
                            "receivesDiscount": 1,
                            "itemCount": 4,
                            "items": [
                              "022014320806",
                              "025000100000",
                              "517251000012",
                              "23535235235235"
                            ]
                          },
                          {
                            "itemGroupName": "Vegetables",
                            "itemGroupID": "4|1000",
                            "requiredQuantity": 1,
                            "requiredAmount": 0,
                            "distribution": 0,
                            "receivesDiscount": 0,
                            "itemCount": 4,
                            "items": [
                              "024515048845",
                              "027917008851",
                              "202303209999",
                              "202303209998"
                            ]
                          },
                          {
                            "itemGroupName": "Bagged Coffee",
                            "itemGroupID": "3|1003",
                            "requiredQuantity": 1,
                            "requiredAmount": 0,
                            "distribution": 0,
                            "receivesDiscount": 0,
                            "itemCount": 1,
                            "items": [
                              "000100000115"
                            ]
                          }
                        ],
                        "schedules": [
                          {
                            "startDate": "2019-04-01",
                            "endDate": "2023-11-08",
                            "startTime": "12:00:00 AM",
                            "endTime": "11:59:00 PM",
                            "amount": 0,
                            "percent": 10,
                            "overridePriceSequence": "",
                            "rounding": "When half or more"
                          }
                        ],
                        "discountType": "Percent Amount",
                        "maximumAllowedPerTransaction": 0,
                        "maximumPurchaseAmount": 20,
                        "stackLevel": "Always Applies",
                        "includeItemGroup": "All",
                        "excludeItemGroup": "Department 15",
                        "generalLedgerAccount": "1234-0000",
                        "storeCoupontriggers": "Require Scan or Attachment",
                        "disabled": 0,
                        "applyToBasePrice": 0,
                        "DisableUseLimits": 0,
                        "deferrable": 1,
                        "usesPerPeriod": 4,
                        "maxSavingsPerPeriod": 0,
                        "limitAppliesTo": "Transaction",
                        "enforceUseLimits": "Coupon Type",
                        "resetUsages": "Never",
                        "rewardedLoyaltyOption": "None",
                        "rewardedLoyaltyProgram": "",
                        "rewardedLoyaltyPoints": 0,
                        "rewardedLoyaltyMultiplier": 0,
                        "rewardCoupon": "Test Coupon",
                        "rewardedReceiptPromoSection": "coupon receipt",
                        "maxDiscountPerPromo": 0,
                        "maximumTransactionDiscount": 0,
                        "minimumPurchaseAmount": 0,
                        "weightedItemOptions": "Discount by line item"
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n  <row id=\"1012|1000\" name=\"Test Item Promotion\" alias=\"Test Item Promotion\" storeCoupon=\"Opt Out Print Rec - 10% Off\" storeFilterType=\"Zone\" zone=\"All\" storeGroup=\"\" powerField1=\"test 1\" powerField2=\"test 2\" powerField3=\"test 3\" powerField4=\"test 4\" powerField5=\"test 5\" powerField6=\"test 6\" powerField7=\"test 7\" powerField8=\"test 8\" terminalGroup=\"POS Lanes\" BOGOflag=\"1\" BOGOlesserValue=\"0\" BOGOgreaterValue=\"0\" discountType=\"Percent Amount\" maximumAllowedPerTransaction=\"0\" maximumPurchaseAmount=\"20.00\" stackLevel=\"Always Apply\" includeItemGroup=\"All\" excludeItemGroup=\"All\" generalLedgerAccount=\"1234-0000\" storeCoupontriggers=\"Require Scan or Attachment\" disabled=\"0\" applyToBasePrice=\"0\" DisableUseLimits=\"0\" deferrable=\"1\" usesPerPeriod=\"4\" limitAppliesTo=\"Transaction\" enforceUseLimits=\"Coupon Type\" resetUsages=\"Never\" rewardedLoyaltyOption=\"None\" rewardedLoyaltyProgram=\"\" rewardedLoyaltyPoints=\"0\" rewardedLoyaltyMultiplier=\"0.000\" rewardCoupon=\"Coupon Test\" rewardedReceiptPromoSection=\"Coupon Receipt\" maxDiscountPerPromo=\"0\" maximumTransactionDiscount=\"0.0000\" minimumPurchaseAmount=\"0.0000\" weightedItemOptions=\"Discount by line item\">\n      <itemGroups itemGroupName=\"Apples\" itemGroupID=\"5|1003\" requiredQuantity=\"1\" requiredAmount=\"0.0000\" distribution=\"100.0000\" receivesDiscount=\"1\" itemCount=\"4\">\n          <items value=\"022014320806\"/>\n          <items value=\"025000100000\"/>\n          <items value=\"517251000012\"/>\n          <items value=\"23535235235235\"/>\n      </itemGroups>\n      <itemGroups itemGroupName=\"Vegetables\" itemGroupID=\"4|1000\" requiredQuantity=\"1\" requiredAmount=\"0.0000\" distribution=\"0.0000\" receivesDiscount=\"0\" itemCount=\"4\">\n          <items value=\"024515048845\"/>\n          <items value=\"027917008851\"/>\n          <items value=\"202303209999\"/>\n          <items value=\"202303209998\"/>\n      </itemGroups>\n      <itemGroups itemGroupName=\"Bagged Coffee\" itemGroupID=\"3|1003\" requiredQuantity=\"1\" requiredAmount=\"0.0000\" distribution=\"0.0000\" receivesDiscount=\"0\" itemCount=\"1\">\n          <items value=\"000100000115\"/>\n      </itemGroups>\n      <schedules startDate=\"2019-04-01\" endDate=\"2023-11-08\" startTime=\"12:00:00 AM\" endTime=\"11:59:00 PM\" amount=\"0.0000\" percent=\"10.0000\" overridePriceSequence=\"\" rounding=\"When half or more\"/>                  \n  </row>\n</root>\ntext/csv:"
                  }
                }
              },
              "text/csv": {
                "examples": {
                  "Simple CSV Response": {
                    "value": "'id','name','alias','storeCoupon','storeFilterType','zone','storeGroup','powerField1','powerField2','powerField3','powerField4','powerField5','powerField6','powerField7','powerField8','terminalGroup','BOGOflag','BOGOlesserValue','BOGOgreaterValue','itemGroups','schedules','discountType','maximumAllowedPerTransaction','maximumPurchaseAmount','stackLevel','includeItemGroup','excludeItemGroup','generalLedgerAccount','storeCoupontriggers','disabled','applyToBasePrice','DisableUseLimits','deferrable','usesPerPeriod','maxSavingsPerPeriod','limitAppliesTo','enforceUseLimits','resetUsages','rewardedLoyaltyOption','rewardedLoyaltyProgram','rewardedLoyaltyPoints','rewardedLoyaltyMultiplier','rewardCoupon','rewardedReceiptPromoSection','maxDiscountPerPromo','maximumTransactionDiscount','minimumPurchaseAmount','weightedItemOptions'\n'1012|1000','Test Item Promotion','Test Item Promotion','Opt Out Print Rec - 10% Off','Zone','All','','test 1',,,,,,,,'POS Lanes',1,0,0,'Apples,5|1003,1,0.0000,100.0000,1,4,022014320806,025000100000,517251000012,23535235235235,Vegetables,4|1000,1,0.0000,0.0000,0,4,024515048845,027917008851,202303209999,202303209998,Bagged Coffee,3|1003,1,0.0000,0.0000,0,1,000100000115','2019-04-01,2023-11-08,12:00:00 AM,11:59:00 PM,0.0000,10.0000,,When half or more','Percent Amount',0,,'Always Apply','All',,,'Require Scan or Attachment',0,0,0,1,4,,'Transaction','Coupon Type','Never','None','',0,0.000,,,0,0.0000,0.0000,'Discount by line item'\n"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/dynamicPromotionsDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2023-01-01&endDate=2023-07-01'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/dynamicPromotionsDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2023-01-01&endDate=2023-07-01\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/dynamicPromotionsDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2023-01-01&endDate=2023-07-01\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/dynamicPromotionsDetail',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startDate: '2023-01-01',\n    endDate: '2023-07-01'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/MembershipProfile": {
      "get": {
        "operationId": "get-MembershipProfile",
        "summary": "Membership Profile",
        "description": "<font color=\"#2F8132\">Use with GET to retreive a list of all membership profiles in your database.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "membershipProfile",
            "description": "Provide the name of a particular membership profile to query, othewrise leave this parameter blank to return all applicable profiles."
          }
        ],
        "tags": [
          "Maintenance Profiles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "membershipProfile": {
                              "type": "string",
                              "example": "Equity Member",
                              "description": "Name of a particular membership profile."
                            },
                            "isPrivate": {
                              "type": "boolean",
                              "example": "false",
                              "description": "Declares if the membership profile is private or open."
                            },
                            "isDefault": {
                              "type": "boolean",
                              "example": "false",
                              "description": "If the given profile has been flagged to automatically apply, by default, on new customers."
                            },
                            "automaticDiscount": {
                              "type": "string",
                              "example": "VIP 5% off",
                              "description": "Name of the Automatic Discount applied to the membership profile. Returns an empty string if none exist."
                            },
                            "priceLevel": {
                              "type": "string",
                              "example": "1 Price Level",
                              "description": "The Price Level applied to the given membership profile."
                            },
                            "equityEnabled": {
                              "type": "boolean",
                              "example": "true",
                              "description": "Declares whether or not equity payments are enabled on the membership profile."
                            },
                            "maxEquity": {
                              "type": "currency",
                              "example": "100.0000",
                              "description": "Maximum level of equity set for customers associated with the membership profile."
                            },
                            "equityMode": {
                              "type": "string",
                              "example": "standard",
                              "description": "Method of equity payment collection for the membership profile."
                            },
                            "equityPaymentAmount": {
                              "type": "currency",
                              "example": "5.0000",
                              "description": "Dollar amount of incremental equity payments when equityMode is set to <code>standard</code>."
                            },
                            "equityPaymentInterval": {
                              "type": "string",
                              "example": "monthly",
                              "description": "Interval of recurring equity payments when equityMode is set to <code>standard</code>."
                            },
                            "surchargePercent": {
                              "type": "percent",
                              "example": "0",
                              "description": "Percentage of a transaction total to be charged towards customer accounts that have not yet paid-in-full. Requires equityMode set to <code>surcharge</code>."
                            },
                            "membershipFeeEnabled": {
                              "type": "boolean",
                              "example": "true",
                              "description": "Declares whether or not a recurring, non-equity membership fee is enabled on the membership profile."
                            },
                            "membershipFeeAmount": {
                              "type": "currency",
                              "example": "1.0000",
                              "description": "Dollar amount of membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                            },
                            "membershipFeeInterval": {
                              "type": "string",
                              "example": "monthly",
                              "description": "Interval of recurring membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                            },
                            "joinFeeEnabled": {
                              "type": "boolean",
                              "example": "true",
                              "description": "Declares whether or not a one-time join fee is enabled on the membership profile."
                            },
                            "joinFeeAmount": {
                              "type": "currency",
                              "example": "5.0000",
                              "description": "Dollar amount of one-time join fee when joinFeeEnabled is set to <code>true</code>."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row membershipProfile=\"Equity Member\"\n    isPrivate=\"false\"\n    isDefault=\"false\"\n    automaticDiscount=\"VIP 5% off\"\n    priceLevel=\"1 Price Level\"\n    equityEnabled=\"true\"\n    maxEquity=\"100.0000\"\n    equityMode=\"standard\"\n    equityPaymentAmount=\"5.0000\"\n    equityPaymentInterval=\"monthly\"\n    surchargePercent=\"0\"\n    membershipFeeEnabled=\"true\"\n    membershipFeeAmount=\"1.0000\"\n    membershipFeeInterval=\"monthly\"\n    joinFeeEnabled=\"true\"\n    joinFeeAmount=\"5.0000\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "membershipProfile": {
                        "type": "string",
                        "example": "Equity Member",
                        "description": "Name of a particular membership profile."
                      },
                      "isPrivate": {
                        "type": "boolean",
                        "example": "false",
                        "description": "Declares if the membership profile is private or open."
                      },
                      "isDefault": {
                        "type": "boolean",
                        "example": "false",
                        "description": "If the given profile has been flagged to automatically apply, by default, on new customers."
                      },
                      "automaticDiscount": {
                        "type": "string",
                        "example": "VIP 5% off",
                        "description": "Name of the Automatic Discount applied to the membership profile. Returns an empty string if none exist."
                      },
                      "priceLevel": {
                        "type": "string",
                        "example": "1 Price Level",
                        "description": "The Price Level applied to the given membership profile."
                      },
                      "equityEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not equity payments are enabled on the membership profile."
                      },
                      "maxEquity": {
                        "type": "currency",
                        "example": "100.0000",
                        "description": "Maximum level of equity set for customers associated with the membership profile."
                      },
                      "equityMode": {
                        "type": "string",
                        "example": "standard",
                        "description": "Method of equity payment collection for the membership profile."
                      },
                      "equityPaymentAmount": {
                        "type": "currency",
                        "example": "5.0000",
                        "description": "Dollar amount of incremental equity payments when equityMode is set to <code>standard</code>."
                      },
                      "equityPaymentInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring equity payments when equityMode is set to <code>standard</code>."
                      },
                      "surchargePercent": {
                        "type": "percent",
                        "example": "0",
                        "description": "Percentage of a transaction total to be charged towards customer accounts that have not yet paid-in-full. Requires equityMode set to <code>surcharge</code>."
                      },
                      "membershipFeeEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not a recurring, non-equity membership fee is enabled on the membership profile."
                      },
                      "membershipFeeAmount": {
                        "type": "currency",
                        "example": "1.0000",
                        "description": "Dollar amount of membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "membershipFeeInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "joinFeeEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not a one-time join fee is enabled on the membership profile."
                      },
                      "joinFeeAmount": {
                        "type": "currency",
                        "example": "5.0000",
                        "description": "Dollar amount of one-time join fee when joinFeeEnabled is set to <code>true</code>."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "membershipProfile": {
                        "type": "string",
                        "example": "Equity Member",
                        "description": "Name of a particular membership profile."
                      },
                      "isPrivate": {
                        "type": "boolean",
                        "example": "false",
                        "description": "Declares if the membership profile is private or open."
                      },
                      "isDefault": {
                        "type": "boolean",
                        "example": "false",
                        "description": "If the given profile has been flagged to automatically apply, by default, on new customers."
                      },
                      "automaticDiscount": {
                        "type": "string",
                        "example": "VIP 5% off",
                        "description": "Name of the Automatic Discount applied to the membership profile. Returns an empty string if none exist."
                      },
                      "priceLevel": {
                        "type": "string",
                        "example": "1 Price Level",
                        "description": "The Price Level applied to the given membership profile."
                      },
                      "equityEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not equity payments are enabled on the membership profile."
                      },
                      "maxEquity": {
                        "type": "currency",
                        "example": "100.0000",
                        "description": "Maximum level of equity set for customers associated with the membership profile."
                      },
                      "equityMode": {
                        "type": "string",
                        "example": "standard",
                        "description": "Method of equity payment collection for the membership profile."
                      },
                      "equityPaymentAmount": {
                        "type": "currency",
                        "example": "5.0000",
                        "description": "Dollar amount of incremental equity payments when equityMode is set to <code>standard</code>."
                      },
                      "equityPaymentInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring equity payments when equityMode is set to <code>standard</code>."
                      },
                      "surchargePercent": {
                        "type": "percent",
                        "example": "0",
                        "description": "Percentage of a transaction total to be charged towards customer accounts that have not yet paid-in-full. Requires equityMode set to <code>surcharge</code>."
                      },
                      "membershipFeeEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not a recurring, non-equity membership fee is enabled on the membership profile."
                      },
                      "membershipFeeAmount": {
                        "type": "currency",
                        "example": "1.0000",
                        "description": "Dollar amount of membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "membershipFeeInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "joinFeeEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not a one-time join fee is enabled on the membership profile."
                      },
                      "joinFeeAmount": {
                        "type": "currency",
                        "example": "5.0000",
                        "description": "Dollar amount of one-time join fee when joinFeeEnabled is set to <code>true</code>."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "\n'membershipProfile','isPrivate','isDefault','automaticDiscount','priceLevel','equityEnabled','maxEquity','equityMode','equityPaymentAmount','equityPaymentInterval','surchargePercent','membershipFeeEnabled','membershipFeeAmount','membershipFeeInterval','joinFeeEnabled','joinFeeAmount'\n'Equity Member','false','false','VIP 5% off','1 Price Level','true','100.0000','standard','5.0000','monthly','0','true','1.0000','monthly','true','5.0000'"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "API Key Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/MembershipProfile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&membershipProfile=SOME_STRING_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/MembershipProfile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&membershipProfile=SOME_STRING_VALUE\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/MembershipProfile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&membershipProfile=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/MembershipProfile',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    membershipProfile: 'SOME_STRING_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      },
      "put": {
        "summary": "Membership Profile",
        "operationId": "put-MembershipProfile",
        "description": "<font color=\"#95507C\">Use PUT to create new membership profiles and to update existing ones.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "membershipProfile",
            "description": "Name of a particular membership profile to create or update.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "newName",
            "description": "New name for a membership profile, if renaming an existing one."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isPrivate",
            "description": "Defaults to <code>false</code> when not specified. Set to <code>true</code> to mark the profile as private."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isDefault",
            "description": "Defaults to <code>false</code> when not specified. Set to <code>true</code> to mark the profile as default for new accounts."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "autoDiscount",
            "description": "Name of the Automatic Discount associated with the selected profile. Exclude this parameter from the request to leave it unchanged. Send a blank or empty string with the parameter to unset (remove) the association."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "priceLevel",
            "description": "Set Price Level for the selected profile. Accepted values include the Price Level name or number (1, 2, 3, 4). Send a blank or empty string with the parameter to unset (remove) the association."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "equityEnabled",
            "description": "Set to <code>true</code> if equity payments are enabled on the selected profile. Set to <code>false</code> if not."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "equityMode",
            "description": "Set to <code>standard</code> for flat equity payments, or to <code>surcharge</code> to charge a percentage of transaction totals.\n\n**Required if equityEnabled = true**"
          },
          {
            "schema": {
              "type": "unsigned double"
            },
            "in": "query",
            "name": "equityPaymentAmount",
            "description": "The dollar amount for standard-mode equity payments associated with the selected profile.\n\n**Required if equityMode = standard**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "equityPaymentInterval",
            "description": "Interval of recurring payments. Accepted values include <code>monthly</code>, <code>quartly</code>, <code>semianually</code>, and <code>annually</code>.\n\n**Required if equityMode = standard**"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "preservePaidInFull",
            "description": "Set to <code>false</code> to mark accounts that have paid less than their total equity amount as not paid-in-full.\n\n**Required when you raise a membership profile equityAmount and at least one customer record associated with that selected profile was already marked paid-in-full**"
          },
          {
            "schema": {
              "type": "unsigned double"
            },
            "in": "query",
            "name": "surchargePercentage",
            "description": "The percentage of a transaction total, to be charged on customer accounts not paid-in-full with each transaction, until all associated membership profile equity is paid.\n\n**Required if equityMode = surcharge**"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "joinFeeEnabled",
            "description": "Set to <code>true</code> if membership joining fees are enabled on the selected profile. Set to <code>false</code> if not."
          },
          {
            "schema": {
              "type": "unsigned double"
            },
            "in": "query",
            "name": "joinFeeAmount",
            "description": "The amount of the joining fee for a selected membership profile.\n\n**Required if joinFeeEnabled = true**"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "membershipFeeEnabled",
            "description": "Set to <code>true</code> if a recurring, non-equity membership fee is enabled on the selected profile. Set to <code>false</code> if not."
          },
          {
            "schema": {
              "type": "unsigned double"
            },
            "in": "query",
            "name": "membershipFeeAmount",
            "description": "The amount of the recurring membership fee for a selected profile.\n\n**Required if membershipFeeEnabled = true**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "membershipFeeInterval",
            "description": "Interval for a recurring membership fee. Accepted values include <code>monthly</code>, <code>quartly</code>, <code>semianually</code>, and <code>annually</code>.\n\n**Required if membershipFeeEnabled = true**"
          }
        ],
        "tags": [
          "Maintenance Profiles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "membershipProfile": {
                              "type": "string",
                              "example": "Homegroup Membership",
                              "description": "Name of a particular membership profile."
                            },
                            "isPrivate": {
                              "type": "boolean",
                              "example": "false",
                              "description": "Declares if the membership profile is private or open."
                            },
                            "isDefault": {
                              "type": "boolean",
                              "example": "true",
                              "description": "If the given profile has been flagged to automatically apply, by default, on new customers."
                            },
                            "automaticDiscount": {
                              "type": "string",
                              "example": "% Discount",
                              "description": "Name of the Automatic Discount applied to the membership profile. Returns an empty string if none exist."
                            },
                            "priceLevel": {
                              "type": "string",
                              "example": "1 Price Level",
                              "description": "The Price Level applied to the given membership profile."
                            },
                            "equityEnabled": {
                              "type": "boolean",
                              "example": "true",
                              "description": "Declares whether or not equity payments are enabled on the membership profile."
                            },
                            "maxEquity": {
                              "type": "currency",
                              "example": "0.0000",
                              "description": "Maximum level of equity set for customers associated with the membership profile."
                            },
                            "equityMode": {
                              "type": "string",
                              "example": "standard",
                              "description": "Method of equity payment collection for the membership profile."
                            },
                            "equityPaymentAmount": {
                              "type": "currency",
                              "example": "1.0000",
                              "description": "Dollar amount of incremental equity payments when equityMode is set to <code>standard</code>."
                            },
                            "equityPaymentInterval": {
                              "type": "string",
                              "example": "monthly",
                              "description": "Interval of recurring equity payments when equityMode is set to <code>standard</code>."
                            },
                            "surchargePercent": {
                              "type": "percent",
                              "example": "0",
                              "description": "Percentage of a transaction total to be charged towards customer accounts that have not yet paid-in-full. Requires equityMode set to <code>surcharge</code>."
                            },
                            "membershipFeeEnabled": {
                              "type": "boolean",
                              "example": "false",
                              "description": "Declares whether or not a recurring, non-equity membership fee is enabled on the membership profile."
                            },
                            "membershipFeeAmount": {
                              "type": "currency",
                              "example": "0.0000",
                              "description": "Dollar amount of membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                            },
                            "membershipFeeInterval": {
                              "type": "string",
                              "example": "monthly",
                              "description": "Interval of recurring membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                            },
                            "joinFeeEnabled": {
                              "type": "boolean",
                              "example": "true",
                              "description": "Declares whether or not a one-time join fee is enabled on the membership profile."
                            },
                            "joinFeeAmount": {
                              "type": "currency",
                              "example": "5.0000",
                              "description": "Dollar amount of one-time join fee when joinFeeEnabled is set to <code>true</code>."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n  <root>\n      <row membershipProfile=\"Homegroup Membership\" \n        isPrivate=\"false\" \n        isDefault=\"true\" \n        automaticDiscount=\"% Discount\" \n        priceLevel=\"1 Price Level\" \n        equityEnabled=\"true\" \n        maxEquity=\"0.0000\" \n        equityMode=\"standard\" \n        equityPaymentAmount=\"1.0000\" \n        equityPaymentInterval=\"monthly\" \n        surchargePercent=\"0\" \n        membershipFeeEnabled=\"false\" \n        membershipFeeAmount=\"0.0000\" \n        membershipFeeInterval=\"monthly\" \n        joinFeeEnabled=\"true\" \n        joinFeeAmount=\"5.0000\"/>\n  </root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "membershipProfile": {
                        "type": "string",
                        "example": "Homegroup Membership",
                        "description": "Name of a particular membership profile."
                      },
                      "isPrivate": {
                        "type": "boolean",
                        "example": "false",
                        "description": "Declares if the membership profile is private or open."
                      },
                      "isDefault": {
                        "type": "boolean",
                        "example": "true",
                        "description": "If the given profile has been flagged to automatically apply, by default, on new customers."
                      },
                      "automaticDiscount": {
                        "type": "string",
                        "example": "% Discount",
                        "description": "Name of the Automatic Discount applied to the membership profile. Returns an empty string if none exist."
                      },
                      "priceLevel": {
                        "type": "string",
                        "example": "1 Price Level",
                        "description": "The Price Level applied to the given membership profile."
                      },
                      "equityEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not equity payments are enabled on the membership profile."
                      },
                      "maxEquity": {
                        "type": "currency",
                        "example": "0.0000",
                        "description": "Maximum level of equity set for customers associated with the membership profile."
                      },
                      "equityMode": {
                        "type": "string",
                        "example": "standard",
                        "description": "Method of equity payment collection for the membership profile."
                      },
                      "equityPaymentAmount": {
                        "type": "currency",
                        "example": "1.0000",
                        "description": "Dollar amount of incremental equity payments when equityMode is set to <code>standard</code>."
                      },
                      "equityPaymentInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring equity payments when equityMode is set to <code>standard</code>."
                      },
                      "surchargePercent": {
                        "type": "percent",
                        "example": "0",
                        "description": "Percentage of a transaction total to be charged towards customer accounts that have not yet paid-in-full. Requires equityMode set to <code>surcharge</code>."
                      },
                      "membershipFeeEnabled": {
                        "type": "boolean",
                        "example": "false",
                        "description": "Declares whether or not a recurring, non-equity membership fee is enabled on the membership profile."
                      },
                      "membershipFeeAmount": {
                        "type": "currency",
                        "example": "0.0000",
                        "description": "Dollar amount of membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "membershipFeeInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "joinFeeEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not a one-time join fee is enabled on the membership profile."
                      },
                      "joinFeeAmount": {
                        "type": "currency",
                        "example": "5.0000",
                        "description": "Dollar amount of one-time join fee when joinFeeEnabled is set to <code>true</code>."
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "membershipProfile": {
                        "type": "string",
                        "example": "Homegroup Membership",
                        "description": "Name of a particular membership profile."
                      },
                      "isPrivate": {
                        "type": "boolean",
                        "example": "false",
                        "description": "Declares if the membership profile is private or open."
                      },
                      "isDefault": {
                        "type": "boolean",
                        "example": "false",
                        "description": "If the given profile has been flagged to automatically apply, by default, on new customers."
                      },
                      "automaticDiscount": {
                        "type": "string",
                        "example": "% Discount",
                        "description": "Name of the Automatic Discount applied to the membership profile. Returns an empty string if none exist."
                      },
                      "priceLevel": {
                        "type": "string",
                        "example": "1 Price Level",
                        "description": "The Price Level applied to the given membership profile."
                      },
                      "equityEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not equity payments are enabled on the membership profile."
                      },
                      "maxEquity": {
                        "type": "currency",
                        "example": "0.0000",
                        "description": "Maximum level of equity set for customers associated with the membership profile."
                      },
                      "equityMode": {
                        "type": "string",
                        "example": "standard",
                        "description": "Method of equity payment collection for the membership profile."
                      },
                      "equityPaymentAmount": {
                        "type": "currency",
                        "example": "1.0000",
                        "description": "Dollar amount of incremental equity payments when equityMode is set to <code>standard</code>."
                      },
                      "equityPaymentInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring equity payments when equityMode is set to <code>standard</code>."
                      },
                      "surchargePercent": {
                        "type": "percent",
                        "example": "0",
                        "description": "Percentage of a transaction total to be charged towards customer accounts that have not yet paid-in-full. Requires equityMode set to <code>surcharge</code>."
                      },
                      "membershipFeeEnabled": {
                        "type": "boolean",
                        "example": "false",
                        "description": "Declares whether or not a recurring, non-equity membership fee is enabled on the membership profile."
                      },
                      "membershipFeeAmount": {
                        "type": "currency",
                        "example": "0.0000",
                        "description": "Dollar amount of membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "membershipFeeInterval": {
                        "type": "string",
                        "example": "monthly",
                        "description": "Interval of recurring membership fee payments when membershipFeeEnabled is set to <code>true</code>."
                      },
                      "joinFeeEnabled": {
                        "type": "boolean",
                        "example": "true",
                        "description": "Declares whether or not a one-time join fee is enabled on the membership profile."
                      },
                      "joinFeeAmount": {
                        "type": "currency",
                        "example": "5.0000",
                        "description": "Dollar amount of one-time join fee when joinFeeEnabled is set to <code>true</code>."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "\n'membershipProfile','isPrivate','isDefault','automaticDiscount','priceLevel','equityEnabled','maxEquity','equityMode','equityPaymentAmount','equityPaymentInterval','surchargePercent','membershipFeeEnabled','membershipFeeAmount','membershipFeeInterval','joinFeeEnabled','joinFeeAmount'\n'Homegroup Membership','false','true','% Discount','1 Price Level','true','0.0000','standard','1.0000','monthly','0','false','0.0000','monthly','true','5.0000'"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "API Key Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/MembershipProfile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&membershipProfile=SOME_STRING_VALUE&newName=SOME_STRING_VALUE&isPrivate=SOME_BOOLEAN_VALUE&isDefault=SOME_BOOLEAN_VALUE&autoDiscount=SOME_STRING_VALUE&priceLevel=SOME_STRING_VALUE&equityEnabled=SOME_BOOLEAN_VALUE&equityMode=SOME_STRING_VALUE&equityPaymentAmount=SOME_UNSIGNED%20DOUBLE_VALUE&equityPaymentInterval=SOME_STRING_VALUE&preservePaidInFull=SOME_BOOLEAN_VALUE&surchargePercentage=SOME_UNSIGNED%20DOUBLE_VALUE&joinFeeEnabled=SOME_BOOLEAN_VALUE&joinFeeAmount=SOME_UNSIGNED%20DOUBLE_VALUE&membershipFeeEnabled=SOME_BOOLEAN_VALUE&membershipFeeAmount=SOME_UNSIGNED%20DOUBLE_VALUE&membershipFeeInterval=SOME_STRING_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/MembershipProfile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&membershipProfile=SOME_STRING_VALUE&newName=SOME_STRING_VALUE&isPrivate=SOME_BOOLEAN_VALUE&isDefault=SOME_BOOLEAN_VALUE&autoDiscount=SOME_STRING_VALUE&priceLevel=SOME_STRING_VALUE&equityEnabled=SOME_BOOLEAN_VALUE&equityMode=SOME_STRING_VALUE&equityPaymentAmount=SOME_UNSIGNED%20DOUBLE_VALUE&equityPaymentInterval=SOME_STRING_VALUE&preservePaidInFull=SOME_BOOLEAN_VALUE&surchargePercentage=SOME_UNSIGNED%20DOUBLE_VALUE&joinFeeEnabled=SOME_BOOLEAN_VALUE&joinFeeAmount=SOME_UNSIGNED%20DOUBLE_VALUE&membershipFeeEnabled=SOME_BOOLEAN_VALUE&membershipFeeAmount=SOME_UNSIGNED%20DOUBLE_VALUE&membershipFeeInterval=SOME_STRING_VALUE\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/MembershipProfile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&membershipProfile=SOME_STRING_VALUE&newName=SOME_STRING_VALUE&isPrivate=SOME_BOOLEAN_VALUE&isDefault=SOME_BOOLEAN_VALUE&autoDiscount=SOME_STRING_VALUE&priceLevel=SOME_STRING_VALUE&equityEnabled=SOME_BOOLEAN_VALUE&equityMode=SOME_STRING_VALUE&equityPaymentAmount=SOME_UNSIGNED%20DOUBLE_VALUE&equityPaymentInterval=SOME_STRING_VALUE&preservePaidInFull=SOME_BOOLEAN_VALUE&surchargePercentage=SOME_UNSIGNED%20DOUBLE_VALUE&joinFeeEnabled=SOME_BOOLEAN_VALUE&joinFeeAmount=SOME_UNSIGNED%20DOUBLE_VALUE&membershipFeeEnabled=SOME_BOOLEAN_VALUE&membershipFeeAmount=SOME_UNSIGNED%20DOUBLE_VALUE&membershipFeeInterval=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/MembershipProfile',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    membershipProfile: 'SOME_STRING_VALUE',\n    newName: 'SOME_STRING_VALUE',\n    isPrivate: 'SOME_BOOLEAN_VALUE',\n    isDefault: 'SOME_BOOLEAN_VALUE',\n    autoDiscount: 'SOME_STRING_VALUE',\n    priceLevel: 'SOME_STRING_VALUE',\n    equityEnabled: 'SOME_BOOLEAN_VALUE',\n    equityMode: 'SOME_STRING_VALUE',\n    equityPaymentAmount: 'SOME_UNSIGNED DOUBLE_VALUE',\n    equityPaymentInterval: 'SOME_STRING_VALUE',\n    preservePaidInFull: 'SOME_BOOLEAN_VALUE',\n    surchargePercentage: 'SOME_UNSIGNED DOUBLE_VALUE',\n    joinFeeEnabled: 'SOME_BOOLEAN_VALUE',\n    joinFeeAmount: 'SOME_UNSIGNED DOUBLE_VALUE',\n    membershipFeeEnabled: 'SOME_BOOLEAN_VALUE',\n    membershipFeeAmount: 'SOME_UNSIGNED DOUBLE_VALUE',\n    membershipFeeInterval: 'SOME_STRING_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/supplierDetail": {
      "get": {
        "summary": "Supplier Detail",
        "operationId": "get-supplier-detail",
        "tags": [
          "Maintenance Profiles"
        ],
        "description": "<font color=\"#2F8132\">The Get Supplier Detail endpoint allows you to retrieve information associated with the suppliers/vendors stored in your database.\nYou may optionally pass a specific supplier code in the request operation to limit the server response to information on a single record\nInformation for all available supplier records are returned if a unique supplier number is not specified.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "in": "query",
            "name": "venCode",
            "description": "Optionally provide a unique supplier code to return information specific to that record. Inalvid or unrecognized supplier codes will result in an error.",
            "example": "42",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "supplierCode": {
                        "type": "string",
                        "maxLength": 10,
                        "example": "1989",
                        "description": "The unique supplier identifier. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>."
                      },
                      "supplierName": {
                        "type": "string",
                        "maxLength": 25,
                        "example": "InGen",
                        "description": "The supplier name. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#name\">Supplier Name</a>."
                      },
                      "supplierContact": {
                        "type": "string",
                        "maxLength": 25,
                        "example": "Hammond",
                        "description": "Name of Contact #1 for the supplier. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#contact\">Supplier Contacts</a>."
                      },
                      "supplierMemo": {
                        "type": "string",
                        "maxLength": 254,
                        "example": "Spare no expense!",
                        "description": "Memo field for the supplier record."
                      },
                      "supplierTerms": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Returns the Terms Profile associated with the supplier record, where applicable. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=675#terms\">Supplier Terms</a>."
                      },
                      "supplierOrdersAddressLine1": {
                        "type": "string",
                        "description": "First line of the street address used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=673\">Supplier Addresses</a>."
                      },
                      "supplierOrdersAddressLine2": {
                        "type": "string",
                        "description": "Second line of the street address used for supplier orders."
                      },
                      "supplierOrdersAddressCity": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "Palo Alto",
                        "description": "Name of the city associated with the supplier order address."
                      },
                      "supplierOrdersAddressState": {
                        "type": "string",
                        "maxLength": 2,
                        "example": "CA",
                        "description": "State or province associated with the supplier order address."
                      },
                      "supplierOrdersAddressZip": {
                        "type": "string",
                        "maxLength": 15,
                        "example": "94301",
                        "description": "Postal code of the street address used for supplier orders."
                      },
                      "supplierOrdersAddressCountry": {
                        "type": "string",
                        "maxLength": 2,
                        "example": "US",
                        "description": "Country associated with the supplier order address. The Country will be returned as a two-character abbreviation, and will only be retuned with CATAPULT versions 5.6.119 and newer."
                      },
                      "supplierReturnsAddressLine1": {
                        "type": "string",
                        "description": "First line of the street address used for supplier returns."
                      },
                      "supplierReturnsAddressLine2": {
                        "type": "string",
                        "description": "Second line of the street address used for supplier returns."
                      },
                      "supplierReturnsAddressCity": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Name of the city associated with the supplier return address."
                      },
                      "supplierReturnsAddressState": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "State or province associated with the supplier return address."
                      },
                      "supplierReturnsAddressZip": {
                        "type": "string",
                        "maxLength": 15,
                        "description": "Postal code of the street address used for supplier returns."
                      },
                      "supplierReturnsAddressCountry": {
                        "type": "string",
                        "maxLength": 2,
                        "example": "US",
                        "description": "Country associated with the supplier return address. The Country will be returned as a two-character abbreviation, and will only be retuned with CATAPULT versions 5.6.119 and newer."
                      },
                      "supplierOrdersPhoneNumber": {
                        "type": "string",
                        "maxLength": 14,
                        "description": "Phone number used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=671\">Supplier Phone Numbers</a>."
                      },
                      "supplierReturnsPhoneNumber": {
                        "type": "string",
                        "maxLength": 14,
                        "description": "Phone number used for supplier returns."
                      },
                      "supplierOrdersEmailAddress": {
                        "type": "string",
                        "maxLength": 254,
                        "description": "E-mail address used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=669\">Supplier E-mail Addresses</a>."
                      },
                      "supplierReturnsEmailAddress": {
                        "type": "string",
                        "maxLength": 254,
                        "description": "E-mail address used for supplier returns."
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "type": "object",
                          "properties": {
                            "supplierCode": {
                              "type": "string",
                              "maxLength": 10,
                              "example": "1989",
                              "description": "The unique supplier identifier. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>."
                            },
                            "supplierName": {
                              "type": "string",
                              "maxLength": 25,
                              "example": "InGen",
                              "description": "The supplier name. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#name\">Supplier Name</a>."
                            },
                            "supplierContact": {
                              "type": "string",
                              "maxLength": 25,
                              "example": "Hammond",
                              "description": "Name of Contact #1 for the supplier. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#contact\">Supplier Contacts</a>."
                            },
                            "supplierMemo": {
                              "type": "string",
                              "maxLength": 254,
                              "example": "Phones disconnected?",
                              "description": "Memo field for the supplier record."
                            },
                            "supplierTerms": {
                              "type": "string",
                              "maxLength": 12,
                              "example": "Net 30",
                              "description": "Returns the Terms Profile associated with the supplier record, where applicable. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=675#terms\">Supplier Terms</a>."
                            },
                            "supplierOrdersAddressLine1": {
                              "type": "string",
                              "description": "First line of the street address used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=673\">Supplier Addresses</a>."
                            },
                            "supplierOrdersAddressLine2": {
                              "type": "string",
                              "description": "Second line of the street address used for supplier orders."
                            },
                            "supplierOrdersAddressCity": {
                              "type": "string",
                              "maxLength": 20,
                              "description": "Name of the city associated with the supplier order address."
                            },
                            "supplierOrdersAddressState": {
                              "type": "string",
                              "maxLength": 2,
                              "description": "State or province associated with the supplier order address."
                            },
                            "supplierOrdersAddressZip": {
                              "type": "string",
                              "maxLength": 15,
                              "description": "Postal code of the street address used for supplier orders."
                            },
                            "supplierOrdersAddressCountry": {
                              "type": "string",
                              "maxLength": 2,
                              "example": "US",
                              "description": "Country associated with the supplier order address. The Country will be returned as a two-character abbreviation, and will only be retuned with CATAPULT versions 5.6.119 and newer."
                            },
                            "supplierReturnsAddressLine1": {
                              "type": "string",
                              "description": "First line of the street address used for supplier returns."
                            },
                            "supplierReturnsAddressLine2": {
                              "type": "string",
                              "description": "Second line of the street address used for supplier returns."
                            },
                            "supplierReturnsAddressCity": {
                              "type": "string",
                              "maxLength": 20,
                              "description": "Name of the city associated with the supplier return address."
                            },
                            "supplierReturnsAddressState": {
                              "type": "string",
                              "maxLength": 2,
                              "description": "State or province associated with the supplier return address."
                            },
                            "supplierReturnsAddressZip": {
                              "type": "string",
                              "maxLength": 15,
                              "description": "Postal code of the street address used for supplier returns."
                            },
                            "supplierReturnsAddressCountry": {
                              "type": "string",
                              "maxLength": 2,
                              "example": "US",
                              "description": "Country associated with the supplier return address. The Country will be returned as a two-character abbreviation, and will only be retuned with CATAPULT versions 5.6.119 and newer."
                            },
                            "supplierOrdersPhoneNumber": {
                              "type": "string",
                              "maxLength": 14,
                              "description": "Phone number used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=671\">Supplier Phone Numbers</a>."
                            },
                            "supplierReturnsPhoneNumber": {
                              "type": "string",
                              "maxLength": 14,
                              "description": "Phone number used for supplier returns."
                            },
                            "supplierOrdersEmailAddress": {
                              "type": "string",
                              "maxLength": 254,
                              "description": "E-mail address used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=669\">Supplier E-mail Addresses</a>."
                            },
                            "supplierReturnsEmailAddress": {
                              "type": "string",
                              "maxLength": 254,
                              "description": "E-mail address used for supplier returns."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <row supplierCode=\"1989\" \n  supplierName=\"InGen\" \n  supplierContact=\"Hammond\" \n  supplierMemo=\"Phones disconnected?\" \n  supplierTerms=\"Net 30\" \n  supplierOrdersAddressLine1=\"Order Address L1\" \n  supplierOrdersAddressLine2=\"\" \n  supplierOrdersAddressCity=\"Palo Alto\" \n  supplierOrdersAddressState=\"CA\" \n  supplierOrdersAddressZip=\"94301\" \n  supplierOrdersAddressCountry=\"US\"\n  supplierReturnsAddressLine1=\"Returns Address L1\" \n  supplierReturnsAddressLine2=\"\" \n  supplierReturnsAddressCity=\"Newark\" \n  supplierReturnsAddressState=\"NJ\" \n  supplierReturnsAddressZip=\"07101\"\n  supplierReturnsAddressCountry=\"US\"\n  supplierOrdersPhoneNumber=\"\"\n  supplierReturnsPhoneNumber=\"\"\n  supplierOrdersEmailAddress=\"\"\n  supplierReturnsEmailAddress=\"\"/>\n</root>"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "supplierCode": {
                        "type": "string",
                        "maxLength": 10,
                        "example": "1989",
                        "description": "The unique supplier identifier. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>."
                      },
                      "supplierName": {
                        "type": "string",
                        "maxLength": 25,
                        "example": "InGen",
                        "description": "The supplier name. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#name\">Supplier Name</a>."
                      },
                      "supplierContact": {
                        "type": "string",
                        "maxLength": 25,
                        "example": "Masrani",
                        "description": "Name of Contact #1 for the supplier. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#contact\">Supplier Contacts</a>."
                      },
                      "supplierMemo": {
                        "type": "string",
                        "maxLength": 254,
                        "example": "Update contact info LD",
                        "description": "Memo field for the supplier record."
                      },
                      "supplierTerms": {
                        "type": "string",
                        "maxLength": 12,
                        "description": "Returns the Terms Profile associated with the supplier record, where applicable. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=675#terms\">Supplier Terms</a>."
                      },
                      "supplierOrdersAddressLine1": {
                        "type": "string",
                        "description": "First line of the street address used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=673\">Supplier Addresses</a>."
                      },
                      "supplierOrdersAddressLine2": {
                        "type": "string",
                        "description": "Second line of the street address used for supplier orders."
                      },
                      "supplierOrdersAddressCity": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "Palo Alto",
                        "description": "Name of the city associated with the supplier order address."
                      },
                      "supplierOrdersAddressState": {
                        "type": "string",
                        "maxLength": 2,
                        "example": "CA",
                        "description": "State or province associated with the supplier order address."
                      },
                      "supplierOrdersAddressZip": {
                        "type": "string",
                        "maxLength": 15,
                        "example": "94301",
                        "description": "Postal code of the street address used for supplier orders."
                      },
                      "supplierOrdersAddressCountry": {
                        "type": "string",
                        "maxLength": 2,
                        "example": "US",
                        "description": "Country associated with the supplier order address. The Country will be returned as a two-character abbreviation, and will only be retuned with CATAPULT versions 5.6.119 and newer."
                      },
                      "supplierReturnsAddressLine1": {
                        "type": "string",
                        "description": "First line of the street address used for supplier returns."
                      },
                      "supplierReturnsAddressLine2": {
                        "type": "string",
                        "description": "Second line of the street address used for supplier returns."
                      },
                      "supplierReturnsAddressCity": {
                        "type": "string",
                        "maxLength": 20,
                        "description": "Name of the city associated with the supplier return address."
                      },
                      "supplierReturnsAddressState": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "State or province associated with the supplier return address."
                      },
                      "supplierReturnsAddressZip": {
                        "type": "string",
                        "maxLength": 15,
                        "description": "Postal code of the street address used for supplier returns."
                      },
                      "supplierReturnsAddressCountry": {
                        "type": "string",
                        "maxLength": 2,
                        "example": "US",
                        "description": "Country associated with the supplier return address. The Country will be returned as a two-character abbreviation, and will only be retuned with CATAPULT versions 5.6.119 and newer."
                      },
                      "supplierOrdersPhoneNumber": {
                        "type": "string",
                        "maxLength": 14,
                        "description": "Phone number used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=671\">Supplier Phone Numbers</a>."
                      },
                      "supplierReturnsPhoneNumber": {
                        "type": "string",
                        "maxLength": 14,
                        "description": "Phone number used for supplier returns."
                      },
                      "supplierOrdersEmailAddress": {
                        "type": "string",
                        "maxLength": 254,
                        "description": "E-mail address used for supplier orders. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=669\">Supplier E-mail Addresses</a>."
                      },
                      "supplierReturnsEmailAddress": {
                        "type": "string",
                        "maxLength": 254,
                        "description": "E-mail address used for supplier returns."
                      }
                    }
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'supplierCode','supplierName','supplierContact','supplierMemo','supplierTerms','supplierOrdersAddressLine1','supplierOrdersAddressLine2','supplierOrdersAddressCity','supplierOrdersAddressState','supplierOrdersAddressZip','supplierOrdersAddressCountry','supplierReturnsAddressLine1','supplierReturnsAddressLine2','supplierReturnsAddressCity','supplierReturnsAddressState','supplierReturnsAddressZip','supplierReturnsAddressCountry','supplierOrdersPhoneNumber','supplierReturnsPhoneNumber','supplierOrdersEmailAddress','supplierReturnsEmailAddress'\n'1989','InGen','Masrani','Update contact info LD','Net 30','Order Address L1','Palo Alto','CA','94301','US','Returns Address L1','','Newark','NJ','07101','US','','','',''"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/supplierDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&venCode=42'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/supplierDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&venCode=42\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/supplierDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&venCode=42\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/supplierDetail',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', venCode: '42'}\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/purchaseOrderHeader?Action=N": {
      "put": {
        "summary": "Create New",
        "operationId": "add-purchase-order",
        "tags": [
          "Purchase Orders"
        ],
        "description": "<font color=\"#95507C\">Used to create new Conventional or Receive-Only Purchase Orders in Web Office.\nUse <code>Action=N</code> to create a new conventional worksheet, per the example, or replace with <code>Action=R</code> to create a new receive-only worksheet.\nAdditional optional parameters for use with the create actions can be found in the **Edit & Update** section after this.\nSuccess: purchaseOrderId is returned.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 1
            },
            "name": "Action",
            "in": "query",
            "required": true,
            "enum": [
              "N",
              "R",
              "E",
              "S",
              "C"
            ],
            "description": "Type of Action to be Performed:\n* <code>N</code> - CREATE Conventional purchase order worksheet.\n* <code>R</code> - CREATE Receive-Only purchase order worksheet.",
            "example": "N"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10
            },
            "name": "supplier",
            "in": "query",
            "description": "Supplier ID associated with the Purchase Order. \nThis parameter can not be edited once set.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677\">Supplier Maintenance</a>."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 4
            },
            "name": "receivingStore",
            "in": "query",
            "required": true,
            "description": "Conventional purchase orders only.\nStore ID to receive the Purchase Order when worksheet is created at HQ. \nThe Receiving Store can not be specified when a Purchase Order is created at a RS.\nThis parameter can not be edited once set.           \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723\">General tab (Store Maintenance)</a>."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "receivingStoreHq",
            "in": "query",
            "description": "Conventional purchase orders only. Defines if the order can be edited at the HQ once submitted. \nThis parameter can not be specified when a Purchase Order is created and/or edited for HQ.\n* <code>0</code> - Worksheet can only be edited from the <code>receivingStore</code>.\n* <code>1</code> - Worksheet can be edited from the HQ.\n\nDefaults to <code>0</code> when PO created at HQ and submitted for another RS location.\nDefaults to <code>1</code> when PO created and submitted for HQ. "
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "Web Office User Permissions": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: User not authorized to submit Purchase Orders\\n\"\n}"
                  },
                  "Purchase Order ID not found": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: worksheet 2695-1000 not found as purchase order\\n\"\n}"
                  }
                }
              },
              "application/xml": {
                "examples": {
                  "Web Office User Permissions": {
                    "value": "\n{\"code\":4, \"message\":\"RAISERROR executed: User not authorized to submit Purchase Orders\\n\"}"
                  },
                  "Purchase Order ID not found": {
                    "value": "\n{\"code\": 4, \"message\": \"RAISERROR executed: worksheet 2695-1000 not found as purchase order\\n\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&Action=N&supplier=SOME_STRING_VALUE&receivingStore=SOME_STRING_VALUE&receivingStoreHq=SOME_BOOLEAN_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&Action=N&supplier=SOME_STRING_VALUE&receivingStore=SOME_STRING_VALUE&receivingStoreHq=SOME_BOOLEAN_VALUE\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&Action=N&supplier=SOME_STRING_VALUE&receivingStore=SOME_STRING_VALUE&receivingStoreHq=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/purchaseOrderHeader',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    Action: 'N',\n    supplier: 'SOME_STRING_VALUE',\n    receivingStore: 'SOME_STRING_VALUE',\n    receivingStoreHq: 'SOME_BOOLEAN_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/purchaseOrderHeader?Action=E": {
      "put": {
        "summary": "Edit & Update",
        "operationId": "update-purchase-order",
        "tags": [
          "Purchase Orders"
        ],
        "description": "<font color=\"#95507C\">Used to edit existing or update the status of an active, non-committed Purchase Order in Web Office.\nEndpoint can be used to conditionally modify both Conventional and Receive-Only purchase orders. \nEdits can NOT be made to worksheets have been received or are already committed.\nOptional editable parameters listed here may also be passed in new worksheets, see **Create New** above.\nSuccess: purchaseOrderId is returned.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 32
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 32
            },
            "name": "purchaseOrderId",
            "in": "query",
            "description": "This required parameter is the output of a call to <a href=\"#operation/purchaseOrderHeader\">purchaseOrderHeader</a>.\nIt is a unique identifier for the Purchase Order; a dash-separated worksheet PurchaseOrderID and store CreatorID, formatted in the query as <code>WRK_PK-WRK_CPK</code>. \nIf the output of a call to <code>purchaseOrderHeader</code> is not available, another way to determine this parameter, examine the URL when a Purchase Order worksheet is opened in Web Office.\nHere the worksheet's <code>purchaseOrderId</code> value can be extracted from the final bits of the web address, where \nthe WRK_PK will be a string of digits before <code>%257C</code>, and the WRK_CPK will be the string of digits afterward. For example:\n\n> https://162fi.catapultweboffice.com/weboffice/#purchaseOrder:pk=31428%257C5083\n\nThis Purchase Order has a <code>WRK_PK-WRK_CPK</code> value of <code>31428-5083</code>, as seen by the string at the end of the web address. ",
            "example": "31428-5083",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 1
            },
            "name": "Action",
            "in": "query",
            "required": true,
            "enum": [
              "N",
              "R",
              "E",
              "S",
              "C"
            ],
            "description": "Type of Action to be Performed:\n* <code>E</code> - EDIT the purchase order worksheet.",
            "example": "E"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "name": "invoiceNumber",
            "in": "query",
            "required": true,
            "description": "The vendor invoice number for a received/completed purchase order. \nApplies to conventional and receive-only orders.\nThis parameter is required to finalize and ultimately commit an order.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1875#receiving-information\">Receiving Information (Purchase Orders)</a>."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "name": "alias",
            "in": "query",
            "description": "The worksheet alias.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1875#general-tab\">General tab (Purchase Orders)</a>."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "DoNotSubmitViaGateway",
            "in": "query",
            "required": false,
            "description": "Conventional purchase orders only. Confirms if the purchase order will or won't be submitted through Gateway:\n* <code>0</code> - PO is submitted via Gateway.\n* <code>1</code> - PO is NOT submitted via Gateway. \n\nDefaults to <code>0</code>."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 9
            },
            "name": "orderingEmployee",
            "in": "query",
            "description": "Conventional purchase orders only. Employee ID of account creating the purchase order. Pass value <code>NONE</code> to clear parameter.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1891#po-information\">Purchase Order Information</a>."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 9
            },
            "name": "receivingEmployee",
            "in": "query",
            "description": "Employee ID of account receiving the purchase order. Pass value <code>NONE</code> to clear parameter.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1885#ReceivingInformation\">Receiving Information (Purchase Orders)</a>."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "receivingStoreHq",
            "in": "query",
            "description": "Conventional purchase orders only. Defines if the order can be edited at the HQ once submitted.\n* <code>0</code> - Worksheet can only be edited from the <code>receivingStore</code>.\n* <code>1</code> - Worksheet can be edited from the HQ.\n\nDefaults to <code>0</code> when PO created at HQ and submitted for another RS location.\nDefaults to unchangeable <code>1</code> when PO created and submitted for HQ."
          },
          {
            "schema": {
              "type": "date"
            },
            "name": "receiveDate",
            "in": "query",
            "description": "Receive date of purchase order in <code>YYYY-MM-DD</code> format.\nConventional purchase orders must be in SUBMITTED state to set this parameter. \nNo special restrictions for edits to this parameter on Receive-Only purchase orders.           "
          },
          {
            "schema": {
              "type": "date"
            },
            "name": "invoiceDate",
            "in": "query",
            "description": "Invoice date of purchase order in <code>YYYY-MM-DD</code> format.\nConventional purchase orders must be in SUBMITTED state to set this parameter. \nNo special restrictions for edits to this parameter on Receive-Only purchase orders.   "
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "name": "terms",
            "in": "query",
            "description": "Name of terms profile to associate with purchase order. Pass value <code>NONE</code> to clear parameter.\nDefaults to term associated with <code>supplier</code>, if available.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1153\">Terms Profiles</a>."
          },
          {
            "schema": {
              "type": "date"
            },
            "name": "neededByDate",
            "in": "query",
            "description": "Conventional purchase orders only.\nAnticipated need-by date of purchase order in <code>YYYY-MM-DD</code> format."
          },
          {
            "schema": {
              "type": "date"
            },
            "name": "cancelByDate",
            "in": "query",
            "description": "Conventional purchase orders only.\nAvailable cancellation date of purchase order in <code>YYYY-MM-DD</code> format."
          },
          {
            "schema": {
              "type": "date"
            },
            "name": "shipAfterDate",
            "in": "query",
            "description": "Conventional purchase orders only.\nAnticipated ship-after date of purchase order in <code>YYYY-MM-DD</code> format."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "name": "shipVia",
            "in": "query",
            "description": "Conventional purchase orders only."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "name": "referenceNumber",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "name": "trackingNumber",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 20
            },
            "name": "freightOnBoard",
            "in": "query",
            "description": "Location at which ordered freight changes hands over from the supplier to the purchaser.",
            "example": "FOB Townsville, NY"
          },
          {
            "schema": {
              "type": "double"
            },
            "name": "freightCharges",
            "in": "query",
            "description": "Freight/shipping amount associated with delivery of purchase order.",
            "example": "52.99"
          },
          {
            "schema": {
              "type": "double"
            },
            "name": "miscellaneousCharges",
            "in": "query",
            "description": "Any additional charge amount associated with purchase order."
          },
          {
            "schema": {
              "type": "double"
            },
            "name": "discountAmount",
            "in": "query",
            "description": "Total discounted amount associated with purchase order. Only accepts negative values."
          },
          {
            "schema": {
              "type": "double"
            },
            "name": "tax",
            "in": "query",
            "description": "Total amount of tax for items on purchase order."
          },
          {
            "schema": {
              "type": "double"
            },
            "name": "exciseTax",
            "in": "query",
            "description": "Total excise tax amount applied on purchase order for margin accuracy, where applicable.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1885#excise-tax-authority\">Excise Tax (Purchase Orders)</a>."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10
            },
            "name": "exciseSupplier",
            "in": "query",
            "description": "Supplier authority associated with excise tax amount. \nRequires a non-zero <code>exciseTax</code> value included in the query or already present on the worksheet.\nSupplier profile must also have a GL Account set in CATAPULT.\nPass value <code>NONE</code> to clear both this parameter and <code>exciseTax</code> parameter."
          },
          {
            "schema": {
              "type": "double"
            },
            "name": "expectedPurchaseTotal",
            "in": "query",
            "description": "Anticipated total amount for purchase order prior shipping and receiving."
          },
          {
            "schema": {
              "type": "decimal"
            },
            "name": "exchangeRate",
            "in": "query",
            "description": "Currency exchange rate for purchase orders received from foreign supplier.",
            "example": ".90"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "name": "remarks",
            "in": "query",
            "description": "Remarks/memo field for purchase order."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "printRemarksOnPo",
            "in": "query",
            "description": "Conventional purchase orders only. Applies to remarks in Purchase Order Information tab.\n* <code>0</code> - Remarks NOT printed on PO.\n* <code>1</code> - Remarks printed on PO. \n\nDefaults to <code>0</code>."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "printRemarksReceive",
            "in": "query",
            "description": "Applies to remarks in Receiving Information tab.\n* <code>0</code> - Remarks NOT printed on received PO.\n* <code>1</code> - Remarks printed on received PO. \n\nDefaults to <code>0</code>."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "distributeFreight",
            "in": "query",
            "description": "If freight charges are to be distrubuted across cost of all received items.\nRequires a non-zero <code>freightCharges</code> value included in the query or already present on the worksheet.\n* <code>0</code> - NOT distrubuted.\n* <code>1</code> - Distributed. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1885#distribute-freight\">Distrubute Freight (Purchase Orders)</a>."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "Web Office User Permissions": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: User not authorized to submit Purchase Orders\\n\"\n}"
                  },
                  "Purchase Order ID not found": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: worksheet 2695-1000 not found as purchase order\\n\"\n}"
                  }
                }
              },
              "application/xml": {
                "examples": {
                  "Web Office User Permissions": {
                    "value": "\n{\"code\":4, \"message\":\"RAISERROR executed: User not authorized to submit Purchase Orders\\n\"}"
                  },
                  "Purchase Order ID not found": {
                    "value": "\n{\"code\": 4, \"message\": \"RAISERROR executed: worksheet 2695-1000 not found as purchase order\\n\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083&Action=E&invoiceNumber=SOME_STRING_VALUE&alias=SOME_STRING_VALUE&DoNotSubmitViaGateway=SOME_BOOLEAN_VALUE&orderingEmployee=SOME_STRING_VALUE&receivingEmployee=SOME_STRING_VALUE&receivingStoreHq=SOME_BOOLEAN_VALUE&receiveDate=SOME_DATE_VALUE&invoiceDate=SOME_DATE_VALUE&terms=SOME_STRING_VALUE&neededByDate=SOME_DATE_VALUE&cancelByDate=SOME_DATE_VALUE&shipAfterDate=SOME_DATE_VALUE&shipVia=SOME_STRING_VALUE&referenceNumber=SOME_STRING_VALUE&trackingNumber=SOME_STRING_VALUE&freightOnBoard=FOB%20Townsville%2C%20NY&freightCharges=52.99&miscellaneousCharges=SOME_DOUBLE_VALUE&discountAmount=SOME_DOUBLE_VALUE&tax=SOME_DOUBLE_VALUE&exciseTax=SOME_DOUBLE_VALUE&exciseSupplier=SOME_STRING_VALUE&expectedPurchaseTotal=SOME_DOUBLE_VALUE&exchangeRate=.90&remarks=SOME_STRING_VALUE&printRemarksOnPo=SOME_BOOLEAN_VALUE&printRemarksReceive=SOME_BOOLEAN_VALUE&distributeFreight=SOME_BOOLEAN_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083&Action=E&invoiceNumber=SOME_STRING_VALUE&alias=SOME_STRING_VALUE&DoNotSubmitViaGateway=SOME_BOOLEAN_VALUE&orderingEmployee=SOME_STRING_VALUE&receivingEmployee=SOME_STRING_VALUE&receivingStoreHq=SOME_BOOLEAN_VALUE&receiveDate=SOME_DATE_VALUE&invoiceDate=SOME_DATE_VALUE&terms=SOME_STRING_VALUE&neededByDate=SOME_DATE_VALUE&cancelByDate=SOME_DATE_VALUE&shipAfterDate=SOME_DATE_VALUE&shipVia=SOME_STRING_VALUE&referenceNumber=SOME_STRING_VALUE&trackingNumber=SOME_STRING_VALUE&freightOnBoard=FOB%20Townsville%2C%20NY&freightCharges=52.99&miscellaneousCharges=SOME_DOUBLE_VALUE&discountAmount=SOME_DOUBLE_VALUE&tax=SOME_DOUBLE_VALUE&exciseTax=SOME_DOUBLE_VALUE&exciseSupplier=SOME_STRING_VALUE&expectedPurchaseTotal=SOME_DOUBLE_VALUE&exchangeRate=.90&remarks=SOME_STRING_VALUE&printRemarksOnPo=SOME_BOOLEAN_VALUE&printRemarksReceive=SOME_BOOLEAN_VALUE&distributeFreight=SOME_BOOLEAN_VALUE\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083&Action=E&invoiceNumber=SOME_STRING_VALUE&alias=SOME_STRING_VALUE&DoNotSubmitViaGateway=SOME_BOOLEAN_VALUE&orderingEmployee=SOME_STRING_VALUE&receivingEmployee=SOME_STRING_VALUE&receivingStoreHq=SOME_BOOLEAN_VALUE&receiveDate=SOME_DATE_VALUE&invoiceDate=SOME_DATE_VALUE&terms=SOME_STRING_VALUE&neededByDate=SOME_DATE_VALUE&cancelByDate=SOME_DATE_VALUE&shipAfterDate=SOME_DATE_VALUE&shipVia=SOME_STRING_VALUE&referenceNumber=SOME_STRING_VALUE&trackingNumber=SOME_STRING_VALUE&freightOnBoard=FOB%20Townsville%2C%20NY&freightCharges=52.99&miscellaneousCharges=SOME_DOUBLE_VALUE&discountAmount=SOME_DOUBLE_VALUE&tax=SOME_DOUBLE_VALUE&exciseTax=SOME_DOUBLE_VALUE&exciseSupplier=SOME_STRING_VALUE&expectedPurchaseTotal=SOME_DOUBLE_VALUE&exchangeRate=.90&remarks=SOME_STRING_VALUE&printRemarksOnPo=SOME_BOOLEAN_VALUE&printRemarksReceive=SOME_BOOLEAN_VALUE&distributeFreight=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/purchaseOrderHeader',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    purchaseOrderId: '31428-5083',\n    Action: 'E',\n    invoiceNumber: 'SOME_STRING_VALUE',\n    alias: 'SOME_STRING_VALUE',\n    DoNotSubmitViaGateway: 'SOME_BOOLEAN_VALUE',\n    orderingEmployee: 'SOME_STRING_VALUE',\n    receivingEmployee: 'SOME_STRING_VALUE',\n    receivingStoreHq: 'SOME_BOOLEAN_VALUE',\n    receiveDate: 'SOME_DATE_VALUE',\n    invoiceDate: 'SOME_DATE_VALUE',\n    terms: 'SOME_STRING_VALUE',\n    neededByDate: 'SOME_DATE_VALUE',\n    cancelByDate: 'SOME_DATE_VALUE',\n    shipAfterDate: 'SOME_DATE_VALUE',\n    shipVia: 'SOME_STRING_VALUE',\n    referenceNumber: 'SOME_STRING_VALUE',\n    trackingNumber: 'SOME_STRING_VALUE',\n    freightOnBoard: 'FOB Townsville, NY',\n    freightCharges: '52.99',\n    miscellaneousCharges: 'SOME_DOUBLE_VALUE',\n    discountAmount: 'SOME_DOUBLE_VALUE',\n    tax: 'SOME_DOUBLE_VALUE',\n    exciseTax: 'SOME_DOUBLE_VALUE',\n    exciseSupplier: 'SOME_STRING_VALUE',\n    expectedPurchaseTotal: 'SOME_DOUBLE_VALUE',\n    exchangeRate: '.90',\n    remarks: 'SOME_STRING_VALUE',\n    printRemarksOnPo: 'SOME_BOOLEAN_VALUE',\n    printRemarksReceive: 'SOME_BOOLEAN_VALUE',\n    distributeFreight: 'SOME_BOOLEAN_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/purchaseOrderHeader?Action=S": {
      "put": {
        "summary": "Submit & Commit",
        "operationId": "submit-or-commit-purchase-order",
        "tags": [
          "Purchase Orders"
        ],
        "description": "<font color=\"#95507C\">Use to submit or commit Conventional or Receive-Only Purchase Orders in Web Office.\nWorksheet must already have an <code>invoiceNumber</code> before it can be committed.\nUse <code>Action=S</code> to submit, per the example, or replace with <code>Action=C</code> to commit.\nSuccess: purchaseOrderId is returned.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 32
            },
            "name": "purchaseOrderId",
            "in": "query",
            "description": "This required parameter is the output of a call to <a href=\"#operation/purchaseOrderHeader\">purchaseOrderHeader</a>.\nIt is a unique identifier for the Purchase Order; a dash-separated worksheet PurchaseOrderID and store CreatorID, formatted in the query as <code>WRK_PK-WRK_CPK</code>. \nIf the output of a call to <code>purchaseOrderHeader</code> is not available, another way to determine this parameter, examine the URL when a Purchase Order worksheet is opened in Web Office.\nHere the worksheet's <code>purchaseOrderId</code> value can be extracted from the final bits of the web address, where \nthe WRK_PK will be a string of digits before <code>%257C</code>, and the WRK_CPK will be the string of digits afterward. For example:\n\n> https://162fi.catapultweboffice.com/weboffice/#purchaseOrder:pk=31428%257C5083\n\nThis Purchase Order has a <code>WRK_PK-WRK_CPK</code> value of <code>31428-5083</code>, as seen by the string at the end of the web address. ",
            "example": "31428-5083",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 2
            },
            "name": "Action",
            "in": "query",
            "required": true,
            "enum": [
              "N",
              "R",
              "E",
              "S",
              "C",
              "CC"
            ],
            "description": "Type of Action to be Performed:\n* <code>S</code> - This action will SUBMIT the Purchase Order worksheet.\n* <code>C</code> - This action will COMMIT the Purchase Order worksheet.\n* <code>CC</code> - Available with CATAPULT 5.7.150 and newer, this action will COMMIT the COST of the Purchase Order worksheet. \n  * The <code>CC</code> action is only available in a \"split commit\" scenario, where someone at a remote store first commits the item quantity on the worksheet.\n  * The <code>CC</code> action should be performed last in the \"split-commit\" process.\n  * If the <code>CC</code> action is performed, CATAPULT will use and insert the cost of each item as entered on the worksheet (at the remote store); item cost cannot be updated when using this action.               ",
            "example": "S"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "DoNotSubmitViaGateway",
            "in": "query",
            "required": false,
            "description": "Conventional purchase orders only. Confirms if the purchase order will or won't be submitted through Gateway:\n* <code>0</code> - PO is submitted via Gateway.\n* <code>1</code> - PO is NOT submitted via Gateway. \n\nDefaults to <code>0</code>."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "name": "AllowCommitWithNoReceivedItems",
            "in": "query",
            "required": false,
            "description": "Confirms if purchase orders with a <code>receivedQuantity=0</code> can or can't be committed:\n* <code>0</code> - PO will NOT allow commits without a positive receive quantity.\n* <code>1</code> - PO will allow commits wthout a positive receive quantity. \n\nDefaults to <code>0</code>."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "Web Office User Permissions": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: User not authorized to submit Purchase Orders\\n\"\n}"
                  },
                  "Purchase Order ID not found": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: worksheet 2695-1000 not found as purchase order\\n\"\n}"
                  }
                }
              },
              "application/xml": {
                "examples": {
                  "Web Office User Permissions": {
                    "value": "\n{\"code\":4, \"message\":\"RAISERROR executed: User not authorized to submit Purchase Orders\\n\"}"
                  },
                  "Purchase Order ID not found": {
                    "value": "\n{\"code\": 4, \"message\": \"RAISERROR executed: worksheet 2695-1000 not found as purchase order\\n\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083&Action=S&DoNotSubmitViaGateway=SOME_BOOLEAN_VALUE&AllowCommitWithNoReceivedItems=SOME_BOOLEAN_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083&Action=S&DoNotSubmitViaGateway=SOME_BOOLEAN_VALUE&AllowCommitWithNoReceivedItems=SOME_BOOLEAN_VALUE\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/purchaseOrderHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083&Action=S&DoNotSubmitViaGateway=SOME_BOOLEAN_VALUE&AllowCommitWithNoReceivedItems=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/purchaseOrderHeader',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    purchaseOrderId: '31428-5083',\n    Action: 'S',\n    DoNotSubmitViaGateway: 'SOME_BOOLEAN_VALUE',\n    AllowCommitWithNoReceivedItems: 'SOME_BOOLEAN_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/purchaseOrderItems": {
      "put": {
        "summary": "Purchase Order Items",
        "operationId": "add-or-update-purchase-order-items",
        "tags": [
          "Purchase Orders"
        ],
        "description": "<font color=\"#95507C\">Adds, Updates, or Removes Items from a Purchase Order Worksheet. \nFields available for modification are conditional on the worksheet type (conventional or receive-only) and status.\nSee the REQUEST BODY SCHEMA for details. \n\nNote that when this endpoint is used, the associated data is temporarily stored in a table within the CATAPULT database at the store (where the endpoint was used). After the data is processed for this endpoint, the table will be automatically cleared/purged to prevent bloat. This self-cleaning behavior cannot be changed or modified, and no action is required for it to occur.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 32
            },
            "name": "purchaseOrderId",
            "in": "query",
            "description": "This required parameter is the output of a call to <a href=\"#operation/purchaseOrderHeader\">purchaseOrderHeader</a>.\nIt is a unique identifier for the Purchase Order; a dash-separated worksheet PurchaseOrderID and store CreatorID, formatted in the query as <code>WRK_PK-WRK_CPK</code>. \nIf the output of a call to <code>purchaseOrderHeader</code> is not available, another way to determine this parameter, examine the URL when a Purchase Order worksheet is opened in Web Office.\nHere the worksheet's <code>purchaseOrderId</code> value can be extracted from the final bits of the web address, where \nthe WRK_PK will be a string of digits before <code>%257C</code>, and the WRK_CPK will be the string of digits afterward. For example:\n\n> https://162fi.catapultweboffice.com/weboffice/#purchaseOrder:pk=31428%257C5083\n\nThis Purchase Order has a <code>WRK_PK-WRK_CPK</code> value of <code>31428-5083</code>, as seen by the string at the end of the web address. ",
            "example": "31428-5083",
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of purchase order line items to modify.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/purchaseOrderItems"
                }
              },
              "examples": {
                "Simple Update": {
                  "value": [
                    {
                      "action": "A",
                      "supplierUnitId": "Supp Catalog #7",
                      "orderQuantity": "55"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "API Key Not Found": {
                    "value": "{\"code\":2,\"message\":\"Invalid API Key.\"}"
                  },
                  "Purchase Order Not Found": {
                    "value": "{\"code\":2,\"message\": \"RAISERROR executed: worksheet ###-## not found as purchase order\\n\"}"
                  },
                  "No receivedQty or totalCost Specified": {
                    "value": "{failureMessage\": \"Supplier units being added with receivedQuantity and/or TotalCost missing or invalid: SUID: ####UI,SUID: ####AT,SUID: ###API\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/purchaseOrderItems?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"A\",\"supplierUnitId\":\"string\",\"itemId\":\"string\",\"orderQuantity\":0,\"shippedQuantity\":0,\"receivedQuantity\":0,\"distributeDiscountsFlag\":0,\"verifiedFlag\":0,\"receivedFlag\":0,\"applyExiseTaxFlag\":0,\"backOrderedFlag\":0,\"totalAllowances\":0,\"totalCharges\":0,\"totalCost\":0,\"itemTagQuantity\":\"str\",\"signQuantity\":\"s\",\"shelfTagQuantity\":\"s\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/purchaseOrderItems?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"PUT\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"A\\\",\\\"supplierUnitId\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\",\\\"orderQuantity\\\":0,\\\"shippedQuantity\\\":0,\\\"receivedQuantity\\\":0,\\\"distributeDiscountsFlag\\\":0,\\\"verifiedFlag\\\":0,\\\"receivedFlag\\\":0,\\\"applyExiseTaxFlag\\\":0,\\\"backOrderedFlag\\\":0,\\\"totalAllowances\\\":0,\\\"totalCharges\\\":0,\\\"totalCost\\\":0,\\\"itemTagQuantity\\\":\\\"str\\\",\\\"signQuantity\\\":\\\"s\\\",\\\"shelfTagQuantity\\\":\\\"s\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/purchaseOrderItems?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&purchaseOrderId=31428-5083\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"A\\\",\\\"supplierUnitId\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\",\\\"orderQuantity\\\":0,\\\"shippedQuantity\\\":0,\\\"receivedQuantity\\\":0,\\\"distributeDiscountsFlag\\\":0,\\\"verifiedFlag\\\":0,\\\"receivedFlag\\\":0,\\\"applyExiseTaxFlag\\\":0,\\\"backOrderedFlag\\\":0,\\\"totalAllowances\\\":0,\\\"totalCharges\\\":0,\\\"totalCost\\\":0,\\\"itemTagQuantity\\\":\\\"str\\\",\\\"signQuantity\\\":\\\"s\\\",\\\"shelfTagQuantity\\\":\\\"s\\\"}]\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/purchaseOrderItems',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', purchaseOrderId: '31428-5083'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'A',\n      supplierUnitId: 'string',\n      itemId: 'string',\n      orderQuantity: 0,\n      shippedQuantity: 0,\n      receivedQuantity: 0,\n      distributeDiscountsFlag: 0,\n      verifiedFlag: 0,\n      receivedFlag: 0,\n      applyExiseTaxFlag: 0,\n      backOrderedFlag: 0,\n      totalAllowances: 0,\n      totalCharges: 0,\n      totalCost: 0,\n      itemTagQuantity: 'str',\n      signQuantity: 's',\n      shelfTagQuantity: 's'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/purchaseOrderDetail": {
      "get": {
        "summary": "View & Search",
        "operationId": "purchaseOrderDetail",
        "tags": [
          "Purchase Orders"
        ],
        "description": "### Purpose of Endpoint\n  Use the <code>purchaseOrderDetail</code> endpoint with GET requests to retrieve information on committed or non-committed Purchase Order worksheets, either in bulk or filtered for a particular date range. \n\n### Filtering Results\n  Limit results by committed <code>startdate</code> and/or <code>enddate</code> if requesting committed (<code>type</code> = 0), or by order date if requesting submitted (<code>type</code> = 1). If no <code>type</code> is specified, it will default to 0 (i.e., committed). \n\n### Notes\n  - Note that Receive Only Purchase Order Worksheets will be returned after they have been committed.\n  - Server responses are provided in XML format by default.",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "startdate",
            "description": "This field contains the start date. Only worksheets which were committed or submitted (depending on the value passed to <code>type</code>) after this date/time will be included in the output. This parameter should be in the following format: 2015-03-25T12:00:00 (ISO 8601).",
            "required": true,
            "example": "2015-03-25T12:00:00"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "enddate",
            "description": "This field contains the end date. Only worksheets which were committed or submitted (depending on the value passed to <code>type</code>) before this date/time will be included in the output. This parameter should be in the following format: 2015-03-25T12:00:00 (ISO 8601). If not provided, the value will default to current date/time.",
            "required": false,
            "example": "2015-03-25T12:00:00"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Type",
            "description": "This parameter allows you to specify what status of Purchase Order worksheets are returned with the query. There are three status Type parameters available:\n- **0** - Returns **Committed** Purchase Order worksheets.\n- **1** - Returns **Ordered** Purchase Order worksheets.\n- **2** - Returns **Pending** Purchase Order worksheets. Note that this parameter is only available with CATAPULT version 5.7.123 and newer, and that it will only return Pending worksheets that have one or more items on them. Pending Purchase Order worksheets with no items will not be returned with this query parameter.",
            "required": false,
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/purchaseOrderDetail"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version=\"1.1\" encoding='UTF-8'?>\n<root>\n    <row worksheetName=\"EXAMPLE-008813-HQ-HQ\",\n    worksheetAlias=\"EXAMPLE\",\n    worksheetVendorCompany=\"EXAMPLE VENDOR\",\n    worksheetVendorCode=\"EVC\",\n    worksheetSubmittedDate=\"2019-01-10 08:45:08.961834\",\n    worksheetPurchaseEmpFirstName=\"Bob\",\n    worksheetPurchaseEmpLastName=\"Smith\",\n    worksheetPurchaseEmpNumber=\"123\",\n    worksheetOrderNumber=\"8813\",\n    worksheetTerms=\"Net 30\",\n    worksheetReceivingStoreName=\"Main Store 123\",\n    worksheetReceivingStoreNumber=\"7504\",\n    worksheetSubmitViaGateway=\"0\",\n    worksheetReceivingEmpFirstName=\"Sam\",\n    worksheetReceivingEmpLastName=\"Smith\",\n    worksheetReceivingEmpNumber=\"456\",\n    worksheetReferenceNumber=\"7714\",\n    worksheetTrackingNumber=\"1234\",\n    worksheetInvoiceNumber=\"4567\",\n    worksheetInvoiceDate=\"2019-01-10 08:45:08.961834\",\n    worksheetFreightOnBoard=\"FOB - Boone NC\",\n    worksheetExciseTax=\"0.0000\",\n    worksheetExciseTaxAuthority=\"EXAMPLE\",\n    worksheetPurchaseTotal=\"0.0000\",\n    worksheetFreightCharges=\"0.0000\",\n    worksheetDistributeFreight=\"0\",\n    worksheetMiscCharges=\"0.0000\",\n    worksheetDiscount=\"-2.0000\",\n    worksheetTax=\"0.0000\",\n    worksheetExpectedPurchaseTotal=\"0.0000\",\n    worksheetInvoiceTotal=\"-2.000000\",\n    worksheetExchangeRate=\"0.000\"\n    worksheetSupplierUnitID=\"2\",\n    worksheetSupplierUnitDescription=\"BALE-3\",\n    worksheetQtyInOrderUnit=\"1.000\",\n    worksheetItemID=\"4011\",\n    worksheetItemName=\"Yellow Bananas\",\n    worksheetItemReceiptAlias=\"BANANAS\",\n    worksheetItemSize=\"8 OZ\"\n    worksheetItemBrandName=\"USDA PRODUCE\",\n    worksheetItemPricingDivider=\"1\",\n    worksheetItemBasePrice=\"0.0000\",\n    worksheetItemDepartmentName=\"Produce\",\n    worksheetItemShelfLocation=\"Produce Display\",\n    worksheetItemSuggestedRetail=\"0.0000\",\n    worksheetItemGlobalPF1=\"EXAMPLE\",\n    worksheetItemGlobalPF2=\"EXAMPLE\",\n    worksheetItemGlobalPF3=\"EXAMPLE\",\n    worksheetItemGlobalPF4=\"EXAMPLE\",\n    worksheetItemGlobalPF5=\"EXAMPLE\",\n    worksheetItemGlobalPF6=\"EXAMPLE\",\n    worksheetItemGlobalPF7=\"EXAMPLE\",\n    worksheetItemGlobalPF8=\"EXAMPLE\",\n    worksheetOrderedQuantity=\"1.000\",\n    worksheetShippedQuantity=\"1.000000\",\n    worksheetReceivedQuantity=\"1.000\",\n    worksheetItemVerified=\"0\",\n    worksheetItemOrderCost=\"0.0000\",\n    worksheetItemInvoiceCost=\"0.000000\",\n    worksheetItemPkgTempDiscount=\"0.0000\",\n    worksheetItemPkgAllowance=\"0.0000\",\n    worksheetItemPkgCharges=\"0.0000\",\n    worksheetItemUnitTempDiscount=\"0.0000\",\n    worksheetItemUnitAllowance=\"0.0000\",\n    worksheetItemUnitCharges=\"0.0000\",\n    worksheetItemTotalTempDiscount=\"0.0000\",\n    worksheetItemTotalAllowance=\"0.0000\",\n    worksheetItemTotalCharges=\"0.0000\",\n    worksheetItemBackordered=\"0\",\n    worksheetItemReceived=\"0\",\n    worksheetItemExciseApplied=\"0\",\n    worksheetItemDiscountApplied=\"0\"\n    existingWorksheetId=\"113416-1000\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchaseOrderDetail"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchaseOrderDetail"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'worksheetName','worksheetAlias','worksheetVendorCompany','worksheetVendorCode','worksheetSubmittedDate','worksheetPurchaseEmpFirstName','worksheetPurchaseEmpLastName','worksheetPurchaseEmpNumber','worksheetOrderNumber','worksheetTerms','worksheetReceivingStoreName','worksheetReceivingStoreNumber','worksheetSubmitViaGateway','worksheetReceivingEmpFirstName','worksheetReceivingEmpLastName','worksheetReceivingEmpNumber','worksheetReferenceNumber','worksheetTrackingNumber','worksheetInvoiceNumber','worksheetInvoiceDate','worksheetFreightOnBoard','worksheetExciseTax','worksheetExciseTaxAuthority','worksheetPurchaseTotal','worksheetFreightCharges','worksheetDistributeFreight','worksheetMiscCharges','worksheetDiscount','worksheetTax','worksheetExpectedPurchaseTotal','worksheetInvoiceTotal','worksheetExchangeRate','worksheetSupplierUnitID','worksheetSupplierUnitDescription','worksheetQtyInOrderUnit','worksheetItemID','worksheetItemName','worksheetItemReceiptAlias','worksheetItemSize','worksheetItemBrandName=','worksheetItemPricingDivider','worksheetItemBasePrice','worksheetItemDepartmentName','worksheetItemShelfLocation','worksheetItemSuggestedRetail','worksheetItemGlobalPF1','worksheetItemGlobalPF2','worksheetItemGlobalPF3','worksheetItemGlobalPF4','worksheetItemGlobalPF5','worksheetItemGlobalPF6','worksheetItemGlobalPF7','worksheetItemGlobalPF8','worksheetOrderedQuantity','worksheetShippedQuantity','worksheetReceivedQuantity','worksheetItemVerified','worksheetItemOrderCost','worksheetItemInvoiceCost','worksheetItemPkgTempDiscount','worksheetItemPkgAllowance','worksheetItemPkgCharges','worksheetItemUnitTempDiscount','worksheetItemUnitAllowance','worksheetItemUnitCharges','worksheetItemTotalTempDiscount','worksheetItemTotalAllowance','worksheetItemTotalCharges','worksheetItemBackordered','worksheetItemReceived','worksheetItemExciseApplied','worksheetItemDiscountApplied','existingWorksheetId'\n'EXAMPLE-008813-HQ-HQ','EXAMPLE','EXAMPLE VENDOR','EVC','2019-01-10 08:45:08.961834','Bob','Smith','123','8813','Net 30','Main Store 123','7504','0','Sam','Smith','456','7714','1234','4567','2019-01-10 08:45:08.961834','FOB - Boone NC','0.0000','EXAMPLE','0.0000','0.0000','0','0.0000','-2.0000','0.000','0.0000','0.0000','-2.000000','2','BALE-3','1.000','4011','Yellow Bananas','BANANAS','8 OZ','USDA PRODUCE','1','0.0000','Produce','Produce Display','0.0000','EXAMPLE','EXAMPLE','EXAMPLE','EXAMPLE','EXAMPLE','EXAMPLE','EXAMPLE','EXAMPLE','1.000','1.000000','1.000','0','0.0000','0.000000','0.0000','0.0000','0.0000','0.0000','0.0000','0.0000','0.0000','0.0000','0.0000'0','0','0','0','113416-1000'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Invalid start date": {
                    "value": "{\"code\":4,\"message\":\"purchaseOrderDetail requires a start date.\"}"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: purchaseOrderDetail requires a start date"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/purchaseOrderDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startdate=2015-03-25T12%3A00%3A00&enddate=2015-03-25T12%3A00%3A00&Type=1'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/purchaseOrderDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startdate=2015-03-25T12%3A00%3A00&enddate=2015-03-25T12%3A00%3A00&Type=1\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/purchaseOrderDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startdate=2015-03-25T12%3A00%3A00&enddate=2015-03-25T12%3A00%3A00&Type=1\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/purchaseOrderDetail',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startdate: '2015-03-25T12:00:00',\n    enddate: '2015-03-25T12:00:00',\n    Type: '1'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/priceChangeDetail": {
      "get": {
        "operationId": "get-priceChangeDetail",
        "summary": "Get Price Change Worksheet Details",
        "description": "<font color=\"#2F8132\">Get data from all Price Change Worksheets in the specified date range. The request must be for a temporary price change worksheet in the committed state. Permanent price changes and/or non-committed worksheets are not included in the responses.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "startDate",
            "description": "The start of the date range to query for Price Change worksheets.",
            "example": "2022-01-31",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "The end of the date range to query for Price Change worksheets. If <code>endDate</code> not supplied then all data after <code>startDate</code> is returned.",
            "example": "2022-10-31"
          }
        ],
        "tags": [
          "Price Changes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/priceChangeDetail"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row worksheetCreated=\"2022-02-03 12:00:00.000\"\n    worksheetPriority=\"1\"\n    worksheetMemo=\"Ven Dor's A-Z Supplies\"\n    itemId=\"3145236\"\n    worksheetStartDate=\"2022-03-14 06:00:00.000\"\n    worksheetEndDate=\"2022-03-18 23:59:59.000\"\n    worksheetIdentifier=\"100021\"\n    worksheetSalePrice=\"100.99\"\n    worksheetSaleDiscount=\"Mid-March Discount\"\n    worksheetItemDescription=\"Gala Apples\"\n    worksheetName=\"Seasonal Price Change\"\n    worksheetItemSize=\"12\"\n    worksheetCreateEmpFirstName=\"Bob\"\n    worksheetCreateEmpLastName=\"Smith\"\n    worksheetCreateEmpNumber=\"7\"\n    worksheetCommitEmpFirstName=\"Terry\"\n    worksheetCommitEmpLastName=\"Smith\"\n    worksheetCommitEmpNumber=\"8\"\n    worksheetItemCost=\"10.99\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/priceChangeDetail"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/priceChangeDetail"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'worksheetCreated','worksheetPriority','worksheetMemo','itemId','worksheetStartDate','worksheetEndDate','worksheetIdentifier','worksheetSalePrice','worksheetSaleDiscount','worksheetItemDescription','worksheetName','worksheetItemSize','worksheetCreateEmpFirstName','worksheetCreateEmpLastName','worksheetCreateEmpNumber','worksheetCommitEmpFirstName','worksheetCommitEmpLastName','worksheetCommitEmpNumber','worksheetItemCost'\n'2022-02-03 12:00:00.000','1','Ven Dors A-Z Supplies','3145236','2022-03-14 06:00:00.000','2022-03-18 23:59:59.000','100021','100.99','Mid-March Discount','Gala Apples','Seasonal Price Change','12','Bob','Smith','7','Terry','Smith','8'.'10.99'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Invalid start date": {
                    "value": "{\"code\":4,\"message\":\"priceChangeDetail requires a start date.\"}"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: priceChangeDetail requires a start date"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/priceChangeDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31&endDate=2022-10-31'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/priceChangeDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31&endDate=2022-10-31\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/priceChangeDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31&endDate=2022-10-31\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/priceChangeDetail',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startDate: '2022-01-31',\n    endDate: '2022-10-31'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/inventoryAdjustmentDetail": {
      "get": {
        "operationID": "get-inventoryAdjustments-detail",
        "summary": "Inventory Adjustments",
        "description": "Get Inventory Adjustment Worksheet Details.\nThrough a query, this endpoint allows you to Get data from all committed Inventory Adjustment worksheets in a specified date range; non-committed worksheets are not included in the responses. \nThe query is comprised of three parameters:\n1. Apikey\n2. StartDate\n3. EndDate",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "startDate",
            "description": "The start of the date range to query for Inventory Adjustment worksheets",
            "example": "2022-01-31 12:30:00:00",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "The end of the date range to query for Inventory Adjustment worksheets. If endDate is not supplied then all data after startDate is returned up to the current date/time of the query.",
            "example": "2022-01-31 12:30:00:00"
          }
        ],
        "tags": [
          "Inventory Adjustments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "row": {
                        "$ref": "#/components/schemas/inventoryAdjustments_get"
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n  <row worksheetName=\"Adjustment worksheet name\"\n  worksheetTimestampCommitted = \"2022-02-03 12:00:00.000\"\n  itemID = \"4011\"\n  worksheetItemDescription = \"Banana\"\n  worksheetItemAdjustment = \"4\"\n  worksheetBaseItemAdjustment = \"4\"\n  worksheetItemAdjustmentReason = \"Spoiled\" \n  worksheetItemAdjustmentMemo = \"Memo Data\"\n  />\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventoryAdjustments_get"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventoryAdjustments_get"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'worksheetName','worksheetTimestampCommitted','itemID','worksheetItemDescription','worksheetItemAdjustment','worksheetBaseItemAdjustment','worksheetItemAdjustmentReason','worksheetItemAdjustmentMemo'\n'Grocery Item Adjustments','2022-12-13 15:18:27.437435','01500007607','2ND FOODS APPLESAUCE 2PK','-6.000','Spoiled - Out of Date','Disposed of correctly'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Invalid start date": {
                    "value": "{\n  \"code\": 4,\n  \"message\": \"inventoryAdjustments requires a start date\"\n}"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: inventoryAdjustments requires a start date"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "examples": {
                  "Customer Not Found": {
                    "value": "{\n   \"code\": 2,\n   \"message\": \"Invalid API Key\"\n}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/inventoryAdjustmentDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2012%3A30%3A00%3A00&endDate=2022-01-31%2012%3A30%3A00%3A00'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/inventoryAdjustmentDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2012%3A30%3A00%3A00&endDate=2022-01-31%2012%3A30%3A00%3A00\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/inventoryAdjustmentDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2012%3A30%3A00%3A00&endDate=2022-01-31%2012%3A30%3A00%3A00\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/inventoryAdjustmentDetail',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startDate: '2022-01-31 12:30:00:00',\n    endDate: '2022-01-31 12:30:00:00'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/inventoryAdjustmentHeader": {
      "put": {
        "summary": "Create / Edit / Commit",
        "operationId": "inventoryAdjustmentHeader",
        "tags": [
          "Inventory Adjustments"
        ],
        "description": "<font color=\"#95507C\">Used to create, edit, and commit Inventory Adjustment worksheets in CATAPULT Web Office.  This action fills the \"header\" portion of the worksheet,\nthat is, the portion of the worksheet except for the actual items.  It does not allow for adding items to the worksheet.\nNote that an Inventory Adjustment worksheet must be created at the store where the adjustment needs to be made.  Thus, calls to the API must be submitted to the store \nwhere the Inventory Adjustment needs to take place.  The <code>worksheetName</code> is **required** for new worksheets. Upon success, you will be provided with an <code>existingWorksheetId</code></font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "Action",
            "in": "query",
            "required": true,
            "enum": [
              "N",
              "E",
              "C"
            ],
            "description": "Type of Action to be Performed:\n* <code>N</code> - CREATE a NEW Inventory Adjustment worksheet.\n* <code>E</code> - EDIT an Inventory Adjustment worksheet.\n* <code>C</code> - COMMIT an Inventory Adjustment worksheet.",
            "example": "N"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "name": "worksheetName",
            "in": "query",
            "description": "Required when <code>Action</code> is N; optional when <code>Action</code> is E.\nThe name that identifies the Inventory Adjustment worksheet (e.g., Misplaced Items).\nThe name can be adjusted once the worksheet has been created. It cannot be adjusted after the worksheet has been committed.",
            "example": "Misplaced Items"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 40
            },
            "name": "existingWorksheetId",
            "in": "query",
            "description": "Required when <code>Action</code> is E or C.\nThis is the unique ID for the worksheet. This ID is provided upon successful creation of an Inventory Adjustment worksheet when calling this endpoint for the first time (passing <code>N</code> for <code>Action</code>).",
            "example": "3302-1000"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 254
            },
            "name": "memo",
            "in": "query",
            "required": false,
            "description": "Text field that allows you to enter any notes or memos about the worksheet as a whole. "
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "examples": {
                  "this_shows_nowhere": {
                    "value": "<?xml version=\"1.1\" encoding=\"UTF-8\"?><root><row existingWorksheetId=\"1234-1000\"/></root>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "Worksheet Name Missing": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: worksheetName is required\"\n}"
                  }
                }
              },
              "application/xml": {
                "examples": {
                  "Worksheet Name Missing": {
                    "value": "\n{\"code\":4, \"message\":\"RAISERROR executed: worksheetName is required\"}"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/inventoryAdjustmentHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&Action=N&worksheetName=Misplaced%20Items&existingWorksheetId=3302-1000&memo=SOME_STRING_VALUE'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/inventoryAdjustmentHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&Action=N&worksheetName=Misplaced%20Items&existingWorksheetId=3302-1000&memo=SOME_STRING_VALUE\"))\n    .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/inventoryAdjustmentHeader?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&Action=N&worksheetName=Misplaced%20Items&existingWorksheetId=3302-1000&memo=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/inventoryAdjustmentHeader',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    Action: 'N',\n    worksheetName: 'Misplaced Items',\n    existingWorksheetId: '3302-1000',\n    memo: 'SOME_STRING_VALUE'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/inventoryAdjustmentItems": {
      "put": {
        "summary": "Add Item Records",
        "operationId": "inventoryAdjustmentItems",
        "tags": [
          "Inventory Adjustments"
        ],
        "description": "<font color=\"#95507C\">\nAvailable in CATAPULT 5.6.118+, the Add Item Records action adds item records to an existing Inventory Adjustment worksheet in CATAPULT Web Office. \nThis action allows you to **PUT** data to the Inventory Adjustment Details endpoint. The item data includes:\n<ul>\n  <li>Adjustment reasons\n  <li>Adjustment value (positive or negative)\n  <li>Memo / Comment\n</ul>\nNote that when this endpoint is used, the associated data is temporarily stored in a table within the CATAPULT database at the store (where the endpoint was used). After the data is processed for this endpoint, the table will be automatically cleared/purged to prevent bloat. This self-cleaning behavior cannot be changed or modified, and no action is required for it to occur.</font>",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "existingWorksheetId",
            "in": "query",
            "description": "This required parameter is the output of a call to <a href=\"#operation/inventoryAdjustmentHeader\"></a>.  It consists of the key identifying the worksheet.\nAnother way to determine this parameter, if required, would be to examine the URL when an Inventory Adjustment worksheet is opened in Web Office..\nHere the worksheet's <code>existingWorksheetId</code> value can be extracted from the final bits of the web address, where\nthe first number will be a string of digits before <code>%257C</code>, and the second number will be the string of digits afterward.  For example:\n\n> https://162FI.catapultweboffice.com/weboffice/#invAdjustment:pk=31428%257C5083\n\nThis Inventory Adjustment has an <code>existingWorksheetId</code> value of <code>31428-5083</code>, as seen by the string at the end of the web address.",
            "example": "31428-5083"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "Worksheet Name Missing": {
                    "value": "{\n    \"code\": 4,\n    \"message\":\"RAISERROR executed: Reasons provided must match existing values from a reason profile.  Invalid reasons: Dmaged,Loost\"\n}"
                  }
                }
              },
              "application/xml": {
                "examples": {
                  "Worksheet Name Missing": {
                    "value": "{\"code\":4, \"message\":\"RAISERROR executed: Reasons provided must match existing values from a reason profile.  Invalid reasons: Dmaged,Loost\"}"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "List of Adjustments",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/inventoryAdjustmentItems"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/inventoryAdjustmentItems"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/inventoryAdjustmentItems"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url 'https://accountid.catapultweboffice.com/api/inventoryAdjustmentItems?existingWorksheetId=31428-5083&apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"ItemID\":\"CCK-001\",\"Adjustment\":12.5,\"Reason\":\"Damaged\",\"Comments\":\"Box arrived this way\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/inventoryAdjustmentItems?existingWorksheetId=31428-5083&apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"PUT\", HttpRequest.BodyPublishers.ofString(\"[{\\\"ItemID\\\":\\\"CCK-001\\\",\\\"Adjustment\\\":12.5,\\\"Reason\\\":\\\"Damaged\\\",\\\"Comments\\\":\\\"Box arrived this way\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/inventoryAdjustmentItems?existingWorksheetId=31428-5083&apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0\"\n\n\tpayload := strings.NewReader(\"[{\\\"ItemID\\\":\\\"CCK-001\\\",\\\"Adjustment\\\":12.5,\\\"Reason\\\":\\\"Damaged\\\",\\\"Comments\\\":\\\"Box arrived this way\\\"}]\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'PUT',\n  url: 'https://accountid.catapultweboffice.com/api/inventoryAdjustmentItems',\n  params: {existingWorksheetId: '31428-5083', apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      ItemID: 'CCK-001',\n      Adjustment: 12.5,\n      Reason: 'Damaged',\n      Comments: 'Box arrived this way'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/physicalInventoryDetail": {
      "get": {
        "operationId": "get-physicalInventoryDetail",
        "summary": "Get Physical Inventory Details",
        "description": "Through a query, this endpoint allows you to <font color=\"#2F8132\">Get</font> data from all committed Physical Inventory worksheets in a specified date range; non-committed worksheets are not included in the responses. The query is comprised of three parameters:\n1. apikey\n2. startDate\n3. endDate",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "startDate",
            "description": "The start of the date range to query for Physical Inventory worksheets.",
            "example": "2022-01-31 11:58:18.541085",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "The end of the date range to query for Physical Inventory worksheets. If <code>endDate</code> not supplied then all data after <code>startDate</code> is returned.",
            "example": "2022-10-31 11:58:18.541085"
          }
        ],
        "tags": [
          "Physical Inventory"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/physicalInventoryDetails"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row worksheetName=\"End of Year Physical Inventory\"\n    worksheetTimestampCommitted=\"2022-12-31 12:00:00.000\"\n    itemId=\"4011\"\n    worksheetItemDescription=\"Bananas\"\n    worksheetPriorOnHand=\"76\"\n    worksheetCountedOnHand=\"75\"\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/physicalInventoryDetails"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/physicalInventoryDetails"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'worksheetName','worksheetTimestampCommitted','itemId','worksheetItemDescription','worksheetPriorOnHand','worksheetCountedOnHand'\n'End of Year Physical Inventory','2022-12-31 12:00:00.000','009300006514','Kosher Dill STFR','76','75'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Invalid start date": {
                    "value": "{\"code\":4,\"message\":\"physicalInventoryDetail requires a start date.\"}"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: physicalInventoryDetail requires a start date"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/physicalInventoryDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/physicalInventoryDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/physicalInventoryDetail?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/physicalInventoryDetail',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startDate: '2022-01-31 11:58:18.541085',\n    endDate: '2022-10-31 11:58:18.541085'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/summaryFinancialData": {
      "get": {
        "summary": "Get Summary Financial Data",
        "operationId": "get-summaryFinancialData",
        "tags": [
          "Summary Financials"
        ],
        "description": "Through a query, this endpoint allows you to <font color=\"#2F8132\">Get</font> summarized financial data for a store - or list of stores - in a specified date range. The query is comprised of three parameters:\n1. startDate\n2. endDate\n3. stores",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "startDate",
            "description": "The start of the date range to query for Summary Financial Data. If no <code>startDate</code> is specified, default will return data for yesterday and display 24 hour's worth of data. Note that if a <code>startDate</code> is specified, an <code>endDate</code> must also be specified.",
            "example": "2022-01-31 11:58:18.541085"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "The end of the date range to query for Summary Financial Data. If no <code>endDate</code> is specified, default will return data for yesterday and display 24 hour's worth of data. Note that if an <code>endDate</code> is specified, a <code>startDate</code> must also be specified.",
            "example": "2022-10-31 11:58:18.541085"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "stores",
            "description": "The Store ID to query for Summary Financial Data. The Store ID as it is entered in CATAPULT Web Office must be used. If no <code>stores</code> are specified, then all data for all stores  - within the specified reporting range - will be returned. If multiple stores, must be specified, they must be separated with a colon ( : ).",
            "example": "HQ:RS1:RS2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/summaryFinancialDataDetails"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row groupDate=\"2023-09-05\"\n    storeID=\"RS1\"\n    storeName=\"Main Store 123\"\n    dataType=\"Totals\"\n    description=\"Gross Sales\"\n    amount=\"746.4700\"\n    quantity=\"9.0000\"\n    omitFromSales=\"0\"\n    foreignCurrencyExchangeRate=\"0.000\"\n    foreignCurrencyAmount=\"0.0000\"\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/summaryFinancialDataDetails"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/summaryFinancialDataDetails"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'groupDate','storeID','storeName','dataType','description','amount', 'quantity','omitFromSales','foreignCurrencyExchangeRate','foreignCurrencyAmount'\n'2023-09-05','RS1','Main Store 123','Totals','Gross Sales','746.4700','9.0000','0','0.000','0.0000'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "value": "{\"code\":4,\"message\":\"Invalid Date Range: 2022-01-01 to \\n.\"}"
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: Invalid Date Range: 2022-01-01 to \n"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/summaryFinancialData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085&stores=HQ%3ARS1%3ARS2'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/summaryFinancialData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085&stores=HQ%3ARS1%3ARS2\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/summaryFinancialData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085&stores=HQ%3ARS1%3ARS2\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/summaryFinancialData',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startDate: '2022-01-31 11:58:18.541085',\n    endDate: '2022-10-31 11:58:18.541085',\n    stores: 'HQ:RS1:RS2'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/summaryItemData": {
      "get": {
        "operationId": "get-summaryItemData",
        "summary": "Get Summary Item Data",
        "description": "Through a query, this endpoint allows you to <font color=\"#2F8132\">Get</font> summarized transaction data from Departments OR Items in a specified date range. The query is comprised of five parameters:\n1. apikey\n2. startDate\n3. endDate\n4. stores\n5. type",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "startDate",
            "description": "The start of the date range to query for summary item data.",
            "example": "2022-01-31 11:58:18.541085",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "endDate",
            "description": "The end of the date range to query for summary item data. If <code>endDate</code> not supplied then all data after <code>startDate</code> is returned.",
            "example": "2022-10-31 11:58:18.541085"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "stores",
            "description": "The Store ID of the store where the desired summary item data is located. This parameter can be a single Store ID or multiple Store IDs separated by a colon. If no Store ID is established as the parameter, the ID of the store where the API is being executed will be used.",
            "example": "682 (Single Store ID) OR 682:683:684 (Multiple Store IDs)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Type",
            "description": "This parameter - which is 0 or 1 - allows you to specify what type of summarized item data is returned. Entering a parameter of 0 will return summarized Department sales data. Entering a parameter of 1 will return summarized Item net sales data.",
            "example": "0 or 1"
          }
        ],
        "tags": [
          "Summary Item Data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/summaryItemData"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    summaryDepartmentNumber=\"140\"\n    summaryDepartmentName=\"ALCOHOL\"\n    summaryQtySold=\"13.000000\"\n    summaryExtCost=\"76.509900\"\n    summaryNetSales=\"105.290000\"\n    summaryStoreNumber=\"CA\"\n    summaryStoreName=\"California Ave Store\"\n</root>\n\nOR\n\n<root>\n    summaryItemID=\"000000000000\"\n    summaryItemDescription=\"STAN BREAD COUNTRY WHITE 28oz\"\n    summaryQtySold=\"6.000000\"\n    summaryExtCost=\"21.900000\"\n    summaryNetSales=\"31.080000\"\n    summaryStoreNumber=\"CA\"\n    summaryStoreName=\"California Ave Store\"\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/summaryItemData"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/summaryItemData"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'summaryDepartmentNumber','summaryDepartmentName','summaryQtySold','summaryExtCost','summaryNetSales','summaryStoreNumber','summaryStoreName'\n'140','ALCOHOL',13.000000,76.509900,105.290000,'CA','California Ave Store'\n\nOR\n\n'summaryItemID','summaryItemDescription','summaryQtySold','summaryExtCost','summaryNetSales','summaryStoreNumber','summaryStoreName'\n'000000000000','STAN BREAD COUNTRY WHITE 28oz',6.000000,21.900000,31.080000,'CA','California Ave Store'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Invalid start date": {
                    "value": "{\"code\":4,\"message\":\"summaryItemData requires a start date.\"}"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: summaryItemData requires a start date"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/summaryItemData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085&stores=682%20(Single%20Store%20ID)%20OR%20682%3A683%3A684%20(Multiple%20Store%20IDs)&Type=0%20or%201'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/summaryItemData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085&stores=682%20(Single%20Store%20ID)%20OR%20682%3A683%3A684%20(Multiple%20Store%20IDs)&Type=0%20or%201\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/summaryItemData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&startDate=2022-01-31%2011%3A58%3A18.541085&endDate=2022-10-31%2011%3A58%3A18.541085&stores=682%20(Single%20Store%20ID)%20OR%20682%3A683%3A684%20(Multiple%20Store%20IDs)&Type=0%20or%201\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/summaryItemData',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    startDate: '2022-01-31 11:58:18.541085',\n    endDate: '2022-10-31 11:58:18.541085',\n    stores: '682 (Single Store ID) OR 682:683:684 (Multiple Store IDs)',\n    Type: '0 or 1'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/filecache": {
      "post": {
        "summary": "File Cache",
        "operationId": "filecache",
        "tags": [
          "File Cache"
        ],
        "description": "<font color=\"#2774B8\">**Available with CATAPULT 5.6.120+**\nUse this endpoint to **POST** a text file into the File Cache table within the CATAPULT database. The request body for this endpoint will contain the contents of the text file, and it must not contain any type of formatting (JSON, XML, etc.). The request will be sent as plain text. The specific CATAPULT Database where the file will be placed will be determined by the location where this endpoint is used. For example, if the **POST** request is made from the Headquarters location, the file will be present in the Headquarters CATAPULT Database.</font>",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": {
              "type": "string",
              "example": "Example Text File Name",
              "maxLength": "No Limit"
            },
            "in": "query",
            "name": "FileName",
            "description": "This parameter allows you to specify the name of the text file that you are inserting into the File Cache table of the CATAPULT Database.",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": 4,
                      "message": "File not provided"
                    }
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "File name not provided"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/filecache?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&FileName=Example%20Text%20File%20Name'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/filecache?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&FileName=Example%20Text%20File%20Name\"))\n    .method(\"POST\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/filecache?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&FileName=Example%20Text%20File%20Name\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/filecache',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', FileName: 'Example Text File Name'}\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/giftCardBulk": {
      "post": {
        "summary": "Create E-Gift Cards in Bulk",
        "operationId": "giftCardBulk",
        "tags": [
          "Gift Cards"
        ],
        "description": "### CATAPULT Version Requirements\nOnly Available with CATAPULT 5.7.135+\n### Overview\nThe <code>giftCardBulk</code> method allows for you to perform a **<font color=\"#2774B8\">POST</font>** request to the CATAPULT Database to create and automatically activate a bulk set of Electronic Gift Cards (i.e., E-Gift Cards). This method is useful if your business needs to fulfill a large order of gift cards for a customer (i.e., corporate Christmas gifts). \n\nWhen using this method to generate the E-Gift Cards, you must specify the quantity of the E-Gift Cards that need to be generated, in addition to the pre-loaded dollar amount that needs to be on each E-Gift Card. You can optionally choose the numerical prefix of the E-Gift Card's code, while the option to choose if the E-Gift Cards require a Personal Identification Number (PIN) to complete payment is also available. \n\nWhen the E-Gift Cards are successfully generated, the response to the request will contain the following information about each E-Gift Card:\n  - E-Gift Card Number\n  \n  - Beginning Balance (i.e., the pre-loaded amount)\n  \n  - E-Gift Card PIN (if present)\n  \n  - The Employee ID, First Name, and Last Name of the employee who performed the request to generate the E-Gift Cards (as entered on their Employee Record in CATAPULT Web Office)\n  \n  - The date and time at which the E-Gift Card was generated\n  \nWith this E-Gift Card information, you can use it as needed (e.g., take the data and print it on physical cards, send out emails with the E-Gift Cards to the desired recipients, etc.). \n\nAll information about each E-Gift Card will be stored in the CATAPULT database, which will in turn allow shoppers to use their E-Gift Card at any store location in the enterprise. In addition, because each E-Gift Card is activated upon creation, the E-Gift Card recipients can immediately use their card as a purchasing tender. \n\n### Authentication Requirements\nA store employee with an Employee Record in CATAPULT Web Office must perform the <code>giftCardBulk</code> request and must properly authenticate to do so. Specifically, this employee must meet the following authentication requirements:\n  - Have a valid API Key (generated on the Employee Record in CATAPULT Web Office)\n  \n  - Must be \"Active\" (i.e., the *Inactive* checkbox must not be selected on their Employee Record in CATAPULT Web Office)\n  \n  Should the employee performing the request not meet any of the authentication requirements, a <code>403</code> \"Error\" response will be returned. \n  \n### Authorization Requirements\n  - A store employee with an Employee Record in CATAPULT Web Office must perform the <code>giftCardBulk</code> request and must have the **Gift Card Bulk Load** checkpoint enabled in their assigned Authorization Security profile. \n  \n  - Should the employee performing the request not meet this authorization requirement, a <code>403</code> \"Error\" response will be returned. \n    - In these scenarios, if the unauthorized employee has the *Gift Card Bulk Load* checkpoint enabled at a later time, note that it may take up to five (5) minutes from the time the checkpoint is enabled for the employee for the changes to take effect. \n      - **EXAMPLE:** If the *Gift Card Bulk Load* checkpoint is enabled for an employee at 1:30 P.M., they will not be able to perform the <code>giftCardBulk</code> request until 1:35 P.M.\n\n### Reporting\nWhen a store employee (with an Employee Record in CATAPULT Web Office) performs the <code>giftCardBulk</code> request, and E-Gift Cards are successfully generated, the Employee ID, First Name, and Last Name of the employee - as entered on their Employee Record - will be permanently associated with that E-Gift Card creation record in the CATAPULT database. \n\nYou can report on and verify the \"creating employee\" information in CATAPULT Web Office 5.7.136+ using the <a href=\"https://olm.ecrs.com/5-7/?page_id=423557\">Gift Card Balances</a> report. This report allows you to view the \"creating employee\" information for each E-Gift Card, in addition to viewing the current balance of each card. \n\n### Limitations\n  - The <code>giftCardBulk</code> method can only be used to **create** CATAPULT (i.e., \"self hosted\") E-Gift Cards. It cannot be used to update anything about pre-existing CATAPULT Gift Cards. Likewise, it cannot be used to create or update any Third-Party Gift Cards. \n  \n  - **General Ledger (GL) Accounts**\n    - If your business uses the <a href=\"https://olm.ecrs.com/5-7/?page_id=252913\">General Ledger (GL) Accounts</a> module with CATAPULT, you can opt to select a GL Profile as the \"Gift Card Liability Account\" for Gift Cards. This is done on the *Gift Card* plugin of the <a href=\"https://olm.ecrs.com/5-7/?page_id=252635\">Transaction Security profile</a>. \n    \n    - **<font color=\"#e33e17\">IMPORTANT:</font>** If a GL profile is chosen for the Gift Card Liability Account, using the <code>giftCardBulk</code> method does NOT Debit or Credit the account.Instead, the General Ledger entries must be imported into CATAPULT from the third party accounting system in these scenarios. ",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0",
            "required": true
          },
          {
            "schema": {
              "type": "currency",
              "example": 50,
              "minLength": 0.01,
              "maxLength": 999.99
            },
            "in": "query",
            "name": "amount",
            "description": "This parameter requires that you to specify the dollar amount that will be pre-loaded onto each E-Gift Card created. In a <code>200</code> \"Success\" response, each E-Gift Card's amount can be verified and viewed in the <code>BeginningBalance</code> field. ",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "example": 300,
              "minLength": 1,
              "maxLength": 99999
            },
            "in": "query",
            "name": "count",
            "description": "This parameter requires that you specify the quantity/number of E-Gift Cards that should be created - and pre-loaded with the specificed <code>amount</code> - with each request.",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "example": 780,
              "minLength": 3,
              "maxLength": 3,
              "required": false
            },
            "in": "query",
            "name": "prefix",
            "description": "This optional parameter allows you to establish the first three numeric characters of each E-Gift Card's code created with the request. \n\n  - If a prefix is established, you can verify it was applied by viewing the <code>GiftCardNumber</code> for each E-Gift Card in the response. \n  \n  - If no prefix is established, a default prefix of **780** will be used. \n  \n  - If more than three numeric characters are submitted with this parameter, only the first three characters will be accepted; the remaining characters will be removed. \n  \n  - If less than three numeric characters are submitted with this parameter, or alphanumeric characters are used, then the request will fail and return a <code>422</code> \"Error\" response code (i.e., \"Invalid Range\"). "
          },
          {
            "schema": {
              "type": "BIT",
              "example": 1,
              "required": false
            },
            "in": "query",
            "name": "pin_required",
            "description": "This optional parameter allows you to choose if each generated E-Gift Card has an associated Personal Identification Number (PIN) that must be entered when the card is used for payment. The following options can be submitted with this parameter:\n  - <code>0</code> - Passing **0** for this parameter - or not including the <code>pin_required</code> parameter in the request at all - will cause all generated E-Gift Cards to NOT have an associated PIN. Meaning, when these cards are used at the Point of Sale for payment, your customers will not be required to enter a PIN to complete payment. \n  \n  - <code>1</code> - Passing **1** for this parameter will cause all generated E-Gift Cards to have an associated PIN. As such, shoppers who use the E-Gift Cards must enter this PIN at Point of Sale to complete payment. \n    - For security, each E-Gift Card's PIN will be a randomly generated four-digit numeric code, and this randomization will occur for each E-Gift Card generated. \n    - Each E-Gift Card's PIN will only be visible in the <code>SecurityCode</code> field within the response. Otherwise, it will be securely hashed and stored in your CATAPULT database (i.e., it will not be visible/accessible). "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/giftCardBulk"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row GiftCardNumber=\"999X4KE25KU9MPGJ3E5\" BeginningBalance=\"25.000\" SecurityCode=\"547\" IssuingEmployeeID=\"789\" IssuingEmployeeFirst=\"Sally\" IssuingEmployeeLast=\"Jones\" IssueDate=\"2024-05-31 09:20.57.731\"/>\n    <row GiftCardNumber=\"999D9JH6LA89ABCJ5KF\" BeginningBalance=\"25.000\" SecurityCode=\"928\" IssuingEmployeeID=\"789\" IssuingEmployeeFirst=\"Sally\" IssuingEmployeeLast=\"Jones\" IssueDate=\"2024-05-31 09:20.57.731\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/giftCardBulk"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/giftCardBulk"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'GiftCardNumber','BeginningBalance','SecurityCode','IssuingEmployeeID','IssuingEmployeeFirst','IssuingEmployeeLast',IssueDate'\n'999X4KE25KU9MPGJ3E5','25.000','547','789','Sally','Jones','2024-05-31 09:20.57.731'"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Bad Request - Unauthorized",
            "content": {
              "application/xml": {
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": 1,
                      "message": "Not Authorized."
                    }
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 2,
                      "message": "Invalid API Key."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Bad Request - Invalid Range",
            "content": {
              "application/xml": {
                "examples": {
                  "Bad Request": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: Invalid Input - Dollar amount provided (100000.0000) is out of bounds [.01, 999.99]\n"
                    }
                  }
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 4,
                      "message": "RAISERROR executed: Invalid Input - Amount of gift cards to generate (1200000) is out of bounds [1, 99999]\n"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/giftCardBulk?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&amount=50&count=300&prefix=780&pin_required=1'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/giftCardBulk?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&amount=50&count=300&prefix=780&pin_required=1\"))\n    .method(\"POST\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/giftCardBulk?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&amount=50&count=300&prefix=780&pin_required=1\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/giftCardBulk',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    amount: '50',\n    count: '300',\n    prefix: '780',\n    pin_required: '1'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/labelDataExport": {
      "get": {
        "summary": "Deli Item Data",
        "operationId": "labelDataExport",
        "tags": [
          "Items"
        ],
        "description": "### CATAPULT Version Requirements\n  - Only Available with CATAPULT 5.7.141+\n  \n### Overview\n  - **Endpoint** = <code>/labelDataExport</code>\n  - Calling this endpoint performs a **<font color=\"#2F8132\">GET</font>** request to the CATAPULT Database to obtain the Deli Scale Attributes - and other related information - for inventory items at a specified store. \n  - The intent of this endpoint is to allow you to take the obtained data and use it with a third-party label software, deli scale management software, or with Electronic Shelf Labels. \n  \n### Snapshots\n  - When a request to the <code>labelDataExport</code> endpoint is performed, a \"snapshot\" of data is created, and this snapshot will be for the all of the available - and specified - inventory data. This snapshot is created so that you can make as many requests as needed to get all of your (paged) data without the system having to obtain and build the data repeatedly. \n  - Each snapshot is maintained over a 3-minute sliding expiration period. Meaning, it will only expire 2-3 minutes after the last request for the data takes place. \n  - Each snapshot is maintained per API Key + Store + Value of <code>since</code> Parameter; any subsequent requests for a specific Key/Store/Since combination will pull from the snapshot that was created.\n\n### Requirements\n  In order to use the <code>/labelDataExport</code> endpoint, the three requirements detailed below must be met:\n  \n#### 1) Authentication\nAny user who calls the <code>/labelDataExport</code> endpoint must meet the following authentication requirements:\n  - Have a valid API Key (generated on a designated Employee Record in CATAPULT Web Office)\n  \n  - The designated Employee Record must be \"Active\" (i.e., the *Inactive* checkbox must not be selected on their Employee Record in CATAPULT Web Office)\n  \n  Should the user calling the endpoint not meet any of the authentication requirements, a <code>400</code> \"Error\" response will be returned.\n  \n#### 2) Application of Advanced Settings\nTwo Advanced Settings must be applied in CATAPULT Web Office to allow a user to call the <code>/labelDataExport</code> endpoint:\n  - **Advanced Setting #1**\n    - **KEY**\n      - unified.label.enabled\n    - **VALUE**\n      - true \n    - **LEVEL**\n      - Store Level - Headquarters\n    - **REQUIRED**\n      - Yes\n      \n  - **Advanced Setting #2**\n    - **KEY**\n      - LabelDataExportFilterName\n    - **VALUE**\n      - *Name of Global Inventory Filter*\n    - **LEVEL**\n      - Store Level - Headquarters\n    - **CONTEXT**\n      - By default, when the <code>/labelDataExport</code> request is performed, all items in the store's CATAPULT database will be returned. To limit the returned results to only applicable \"deli items\", a <a href=\"https://olm.ecrs.com/5-7/?page_id=251883\"> Global Inventory Filter</a> must be created and saved. \n      - The created Global Inventory Filter must contain criteria that will only allow the desired items to be returned in the result set. This filter criteria will vary depending on your item set, but examples might include items within a certain Department, items with a specific Nutrition Fact Label Format, or any eligible combination of the available Inventory Filter points.\n      - The created Global Inventory Filter should contain filter criteria that will EXCLUDE items marked as \"Discontinued\" from the result set, as these items will be included by default.\n      - Once created and saved, the entered **Name** of the Global Inventory Filter filter will be used as the VALUE of the Advanced Setting.\n        - When a Global Inventory Filter is created and saved, CATAPULT Web Office appends \"(Global)\" to the end of the filter name to indicate to all users the scope of the filter. This appended text should NOT be included in the Advanced Setting VALUE. \n        - **EXAMPLE** - If a Global Inventory Filter is created, saved, and named \"Label Data Export Filter\", it will appear as **Label Data Export Filter (Global)** in CATAPULT Web Office. With this, only the filter's name (e.g., \"Label Data Export Filter\") would be entered as the Advanced Setting's VALUE. \n    - **REQUIRED**\n      - Yes\n\nFor more information on applying Advanced Settings in CATAPULT Web Office, <a href=\"https://olm.ecrs.com/5-7/?page_id=287221\"> click here</a> to view the *HOW TO: Add, Edit, and Delete an Advanced Setting* article in the ECRS Online Manual. \n\n#### 3) API Endpoint Call Must Use Headquarters Web Office URL\n  - When the <code>/labelDataExport</code> endpoint is called a URL will be used. This URL must use the Account ID of the **Headquarters** store in the enterprise. \n  - Even though the Headquarters Web Office URL must be used, data for a specific store in the enterprise can be returned by using the <code>storeNumber</code> query parameter.  ",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "example": 1,
              "minLength": 1
            },
            "in": "query",
            "name": "page",
            "description": "- When the <code>/labelDataExport</code> request is performed, the results will be all of the inventory data - that meet the filter criteria - for the store that is specified with the **storeNumber** parameter; this will be a large set of data. \n- To avoid extended wait times to process the returned results, the returned data must be viewed in \"pages\", and this parameter requires that you specify the page number of the result set that is returned. \n- To view the result set in its entirety, increment/increase this parameter by one and perform the <code>/labelDataExport</code> request until no results are returned (i.e., no further pages).",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "RS26",
              "maxLength": 4
            },
            "in": "query",
            "name": "storeNumber",
            "description": "This parameter requires that you specify the Store ID - as entered on the Store Record in CATAPULT Web Office - of the store that you want to view results for. When a Store ID is specified, all of the applicable inventory data will be exported from the CATAPULT database at a chosen store.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-05-31T12:00:00"
            },
            "in": "query",
            "name": "since",
            "description": "This parameter allows you to specify a date and time, and the returned results will be items modified *since* the specified date and time. \n  - **When Performing the Request for the First Time**: To ensure that all applicable results are returned, it is recommended NOT to enter a date and time for the **since** parameter when performing the <code>/labelDataExport</code> request for the first time, as the default date and time of *01-01-1970T12:00:00* will be used. This date and time is far enough in the past to guarantee that all applicable results will be returned with the first request.\n  \n  - **When Performing the Request Subsequent Times**: Once the <code>/labelDataExport</code> request is performed intially,  the date and time of the last request should be entered with this parameter. If no date and time are entered, *01-01-1970T12:00:00* will be used by default, which will return all applicable data. \n    - **EXAMPLE**: If the initial <code>/labelDataExport</code> request was performed on 05-31-2024 at 11:00:00 A.M., the second time the request is performed, that would be the date and time that would be entered for this parameter. ",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "example": 750,
              "minLength": 1,
              "maxLength": 25000
            },
            "in": "query",
            "name": "pageSize",
            "description": "This parameter allows you to optionally set the number of returned items per page of results. If this parameter is not specificed, 500 items will be returned on a single result set page by default. Note that higher **pageSize** values (e.g., 15000) will result in extended response times. In some cases, if there is too much data, and the specified **pageSize** is too large, then the request might time out and not complete.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "root": {
                      "type": "object",
                      "properties": {
                        "row": {
                          "$ref": "#/components/schemas/labelDataExport"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Simple XML Response": {
                    "value": "<?xml version='1.1' encoding='UTF-8'?>\n<root>\n    <row Dept=\"23\" PLU=\"99515\" Price=\"2.9900\" NetWt=\"16 OZ\" ShelfLife=\"5\" Ingredients=\"Red Potatoes, Dill, Sour Cream, Mayonnaise, Salt, Pepper, Sugar\" Description1=\"string\" Description2=\"string\" Description3=\"string\" Description4=\"string\" UserAssigned1=\"string\" UserAssigned2=\"string\" UserAssigned3=\"string\" UserAssigned4=\"string\" UserAssigned5=\"5\" UserAssigned6=\"6\" UserAssigned7=\"7\" Scaleable=\"yes\" Tare=\"0.250\" CategoryNum=\"12\" Logo1=\"1\" Logo2=\"2\" Logo3=\"3\" Logo4=\"4\" Logo5=\"5\" CountryOfOrigin=\"USA\" Brand=\"Urban Market Deli\" SubDepartment=\"Prepared Foods\" Category=\"Cold Items\" SubCategory=\"Weighted Cold Items\" Variety=\"House-Made\"/>\n</root>"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/labelDataExport"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/labelDataExport"
                  }
                },
                "examples": {
                  "Simple CSV Response": {
                    "value": "'Dept','PLU','Price','NetWt','ShelfLife','Ingredients','Description1','Description2','Description3','Description4','UserAssigned1','UserAssigned2','UserAssigned3','UserAssigned4','UserAssigned5','UserAssigned6','UserAssigned7','Scaleable','Tare','CategoryNum','Logo1','Logo2','Logo3','Logo4','Logo5','CountryOfOrigin','Brand','SubDepartment','Category','SubCategory','Variety'\n'23','99515','2.00','16 OZ','5','Red Potatoes, Dill, Sour Cream, Mayonnaise, Salt, Pepper, Sugar','string','string','string','string','string','string','string','string','5','6','7','yes','0.250','12','1','2','3','4','5','USA','Urban Market Deli','Prepared Foods','Cold Items','Weighted Cold Items','House-Made'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "examples": {
                  "value": "{\"code\":2,\"message\":\"Invalid API Key\"}"
                }
              },
              "application/json": {
                "examples": {
                  "jsonObject": {
                    "value": {
                      "code": 2,
                      "message": "Invalid API Key"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/labelDataExport?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&page=1&storeNumber=RS26&since=2024-05-31T12%3A00%3A00&pageSize=750'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/labelDataExport?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&page=1&storeNumber=RS26&since=2024-05-31T12%3A00%3A00&pageSize=750\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/labelDataExport?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&page=1&storeNumber=RS26&since=2024-05-31T12%3A00%3A00&pageSize=750\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/labelDataExport',\n  params: {\n    apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0',\n    page: '1',\n    storeNumber: 'RS26',\n    since: '2024-05-31T12:00:00',\n    pageSize: '750'\n  }\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemMaintenance": {
      "post": {
        "summary": "Batch Item Maintenance",
        "description": "## Overview\nThe Item Maintenance endpoint is used to post bulk, multi-store additions or changes to your inventory records.\nThe operation can create Departments (when a Department Number does not exist and a Department Name is entered), Brands, and Power Fields. New entries\nare added to their respective tables when not found in the database.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=380#IG-general\">Inventory Maintenance</a>.\n\n## New Item Behavior\n  - New items created by this batch process will inherit all applicable department default values associated with the Department Number \nentered in the batch record. Additional item hierarchy defaults are pulled from the Sub-Department Number, Category Number, \nSub-Category Number, and Variety Number field values, if subsequently entered in the batch record. The full item hierarchy (numbers) \nmust be included to update or insert item records.\n\n  - New items will have pricing records created for all zones. Specifically, the item's <code>promptForPrice</code> setting will be set to enabled (i.e.,  <code>1</code>) on Price Level 1 and \ndisabled (i.e., <code>0</code>) with a dollar value of $0.00 on Price Levels 2-4. \n    - To override this default behavior and have new items be added with <code>promptForPrice</code> disabled and a $0.00 Base Price on Price Level 1, apply the following (global) Advanced Setting:\n      > KEY = stagingTables.NewItemsAddWithZeroPrice \\\n      > VALUE = true\n\n## Batch Process Updates and Message Log\n  - Batch processing status and log can be viewed by calling the <code>/batch/importMessages</code> endpoint.\n  - Beginning with CATAPULT 5.7.143 and newer, if one or more items within a batch fails or encounters an error, the items that failed - and why - will be included in the <code>detail</code> line of the *importMessages* response. ",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Items To Be Updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-item"
                }
              },
              "examples": {
                "Simple Update": {
                  "value": [
                    {
                      "action": "U",
                      "itemId": "6",
                      "name": "New Item Name",
                      "receiptAlias": "New Receipt Alias",
                      "deptNo": 1,
                      "nonReturnable": true
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-item"
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "<root> <row action=\"U\" itemId=\"6\" name=\"New Item Name XML\" receiptAlias=\"New Receipt Alias XML\" deptNo=\"1\" nonReturnable=\"false\"/> </root>"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-item"
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "'action','itemId','name','receiptAlias','deptNo','nonReturnable'\n'U','6','New CSV Name with \\'!','CSV Receipt Alias','1','true'"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemMaintenance",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemMaintenance?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"itemId\":\"string\",\"deptNo\":0,\"deptName\":\"string\",\"name\":\"string\",\"receiptAlias\":\"string\",\"brand\":\"string\",\"size\":\"string\",\"promptList\":\"string\",\"discountList\":\"string\",\"suggestedRetail\":\"string\",\"pf1\":\"string\",\"pf2\":\"string\",\"pf3\":\"string\",\"pf4\":\"string\",\"pf5\":\"string\",\"pf6\":\"string\",\"pf7\":\"string\",\"pf8\":\"string\",\"memo\":\"string\",\"linkGroup\":\"string\",\"nonReturnable\":true,\"embeddedPriceAsUnit\":true,\"countryOfOrigin\":\"string\",\"subDeptNumber\":0,\"categoryNumber\":0,\"subCategoryNumber\":0,\"varietyNumber\":0}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemMaintenance?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"itemId\\\":\\\"string\\\",\\\"deptNo\\\":0,\\\"deptName\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"receiptAlias\\\":\\\"string\\\",\\\"brand\\\":\\\"string\\\",\\\"size\\\":\\\"string\\\",\\\"promptList\\\":\\\"string\\\",\\\"discountList\\\":\\\"string\\\",\\\"suggestedRetail\\\":\\\"string\\\",\\\"pf1\\\":\\\"string\\\",\\\"pf2\\\":\\\"string\\\",\\\"pf3\\\":\\\"string\\\",\\\"pf4\\\":\\\"string\\\",\\\"pf5\\\":\\\"string\\\",\\\"pf6\\\":\\\"string\\\",\\\"pf7\\\":\\\"string\\\",\\\"pf8\\\":\\\"string\\\",\\\"memo\\\":\\\"string\\\",\\\"linkGroup\\\":\\\"string\\\",\\\"nonReturnable\\\":true,\\\"embeddedPriceAsUnit\\\":true,\\\"countryOfOrigin\\\":\\\"string\\\",\\\"subDeptNumber\\\":0,\\\"categoryNumber\\\":0,\\\"subCategoryNumber\\\":0,\\\"varietyNumber\\\":0}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemMaintenance?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"itemId\\\":\\\"string\\\",\\\"deptNo\\\":0,\\\"deptName\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"receiptAlias\\\":\\\"string\\\",\\\"brand\\\":\\\"string\\\",\\\"size\\\":\\\"string\\\",\\\"promptList\\\":\\\"string\\\",\\\"discountList\\\":\\\"string\\\",\\\"suggestedRetail\\\":\\\"string\\\",\\\"pf1\\\":\\\"string\\\",\\\"pf2\\\":\\\"string\\\",\\\"pf3\\\":\\\"string\\\",\\\"pf4\\\":\\\"string\\\",\\\"pf5\\\":\\\"string\\\",\\\"pf6\\\":\\\"string\\\",\\\"pf7\\\":\\\"string\\\",\\\"pf8\\\":\\\"string\\\",\\\"memo\\\":\\\"string\\\",\\\"linkGroup\\\":\\\"string\\\",\\\"nonReturnable\\\":true,\\\"embeddedPriceAsUnit\\\":true,\\\"countryOfOrigin\\\":\\\"string\\\",\\\"subDeptNumber\\\":0,\\\"categoryNumber\\\":0,\\\"subCategoryNumber\\\":0,\\\"varietyNumber\\\":0}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemMaintenance',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      itemId: 'string',\n      deptNo: 0,\n      deptName: 'string',\n      name: 'string',\n      receiptAlias: 'string',\n      brand: 'string',\n      size: 'string',\n      promptList: 'string',\n      discountList: 'string',\n      suggestedRetail: 'string',\n      pf1: 'string',\n      pf2: 'string',\n      pf3: 'string',\n      pf4: 'string',\n      pf5: 'string',\n      pf6: 'string',\n      pf7: 'string',\n      pf8: 'string',\n      memo: 'string',\n      linkGroup: 'string',\n      nonReturnable: true,\n      embeddedPriceAsUnit: true,\n      countryOfOrigin: 'string',\n      subDeptNumber: 0,\n      categoryNumber: 0,\n      subCategoryNumber: 0,\n      varietyNumber: 0\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemPricing": {
      "post": {
        "summary": "Batch Item Pricing",
        "description": "<font color=\"#2774B8\">The Item Pricing endpoint is used to post bulk, multi-store additions or changes to the Price Levels\non your inventory maintenance records. Discounts are not created by this operation and must be created separately in WebOffice before\nbeing used in the request parameters. The operation will, however, create new Family Lines if one is entered in the parameters \nand does not already exist. \n\nNote promptForPrice defaults to disabled <code>0</code> when not specified in the request. To adjust this behaviour and have promptForPrice\ndefault to enabled <code>1</code> when A) not defined in the request and B) the price of the respective inventory item is $0.00, add the\nfollowing Global-level Advanced Setting in WebOffice:\n\n> KEY = stagingTables.automaticPromptForPrice \\\n> VALUE = true\n    \nIf the inventory price is any other dollar amount then it will default to disabled.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402\">Inventory Pricing & Costs</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Item Prices to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPrice"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPrice"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPrice"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemPricing",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemPricing?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"itemId\":\"string\",\"zoneId\":\"string\",\"retail1\":\"string\",\"promptForPrice1\":true,\"discount1\":\"string\",\"quantityOnly1\":true,\"idealMargin1\":\"string\",\"divider1\":1,\"retail2\":\"string\",\"promptForPrice2\":true,\"discount2\":\"string\",\"quantityOnly2\":true,\"idealMargin2\":\"string\",\"divider2\":1,\"retail3\":\"string\",\"promptForPrice3\":true,\"discount3\":\"string\",\"quantityOnly3\":true,\"idealMargin3\":\"string\",\"divider3\":1,\"retail4\":\"string\",\"promptForPrice4\":true,\"discount4\":\"string\",\"quantityOnly4\":true,\"idealMargin4\":\"string\",\"divider4\":1,\"familyLine\":\"string\",\"retailAccountingPrice\":\"string\",\"retailAccountingReportCode\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemPricing?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"itemId\\\":\\\"string\\\",\\\"zoneId\\\":\\\"string\\\",\\\"retail1\\\":\\\"string\\\",\\\"promptForPrice1\\\":true,\\\"discount1\\\":\\\"string\\\",\\\"quantityOnly1\\\":true,\\\"idealMargin1\\\":\\\"string\\\",\\\"divider1\\\":1,\\\"retail2\\\":\\\"string\\\",\\\"promptForPrice2\\\":true,\\\"discount2\\\":\\\"string\\\",\\\"quantityOnly2\\\":true,\\\"idealMargin2\\\":\\\"string\\\",\\\"divider2\\\":1,\\\"retail3\\\":\\\"string\\\",\\\"promptForPrice3\\\":true,\\\"discount3\\\":\\\"string\\\",\\\"quantityOnly3\\\":true,\\\"idealMargin3\\\":\\\"string\\\",\\\"divider3\\\":1,\\\"retail4\\\":\\\"string\\\",\\\"promptForPrice4\\\":true,\\\"discount4\\\":\\\"string\\\",\\\"quantityOnly4\\\":true,\\\"idealMargin4\\\":\\\"string\\\",\\\"divider4\\\":1,\\\"familyLine\\\":\\\"string\\\",\\\"retailAccountingPrice\\\":\\\"string\\\",\\\"retailAccountingReportCode\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemPricing?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"itemId\\\":\\\"string\\\",\\\"zoneId\\\":\\\"string\\\",\\\"retail1\\\":\\\"string\\\",\\\"promptForPrice1\\\":true,\\\"discount1\\\":\\\"string\\\",\\\"quantityOnly1\\\":true,\\\"idealMargin1\\\":\\\"string\\\",\\\"divider1\\\":1,\\\"retail2\\\":\\\"string\\\",\\\"promptForPrice2\\\":true,\\\"discount2\\\":\\\"string\\\",\\\"quantityOnly2\\\":true,\\\"idealMargin2\\\":\\\"string\\\",\\\"divider2\\\":1,\\\"retail3\\\":\\\"string\\\",\\\"promptForPrice3\\\":true,\\\"discount3\\\":\\\"string\\\",\\\"quantityOnly3\\\":true,\\\"idealMargin3\\\":\\\"string\\\",\\\"divider3\\\":1,\\\"retail4\\\":\\\"string\\\",\\\"promptForPrice4\\\":true,\\\"discount4\\\":\\\"string\\\",\\\"quantityOnly4\\\":true,\\\"idealMargin4\\\":\\\"string\\\",\\\"divider4\\\":1,\\\"familyLine\\\":\\\"string\\\",\\\"retailAccountingPrice\\\":\\\"string\\\",\\\"retailAccountingReportCode\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemPricing',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      itemId: 'string',\n      zoneId: 'string',\n      retail1: 'string',\n      promptForPrice1: true,\n      discount1: 'string',\n      quantityOnly1: true,\n      idealMargin1: 'string',\n      divider1: 1,\n      retail2: 'string',\n      promptForPrice2: true,\n      discount2: 'string',\n      quantityOnly2: true,\n      idealMargin2: 'string',\n      divider2: 1,\n      retail3: 'string',\n      promptForPrice3: true,\n      discount3: 'string',\n      quantityOnly3: true,\n      idealMargin3: 'string',\n      divider3: 1,\n      retail4: 'string',\n      promptForPrice4: true,\n      discount4: 'string',\n      quantityOnly4: true,\n      idealMargin4: 'string',\n      divider4: 1,\n      familyLine: 'string',\n      retailAccountingPrice: 'string',\n      retailAccountingReportCode: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemStoreData": {
      "post": {
        "summary": "Batch Item Store Data",
        "description": "<font color=\"#2774B8\">The Item Store Data endpoint is used to post per-store bulk updates to your inventory Pricing & Costs and related fields. \nIt allows a more nuanced, targeted alternative when the larger scope of its sister function, Batch Item Pricing, isn't necessary.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402\">Inventory Pricing & Costs</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=400\">Inventory Options</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Item Store Data to be Updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemStoreData"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemStoreData"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemStoreData"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemStoreData",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemStoreData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"itemId\":\"string\",\"storeId\":\"string\",\"taxList\":\"string\",\"specialTendersList\":\"string\",\"itemRestriction\":\"string\",\"lastCost\":\"string\",\"defaultSupplierId\":\"string\",\"loyaltyMultiplier\":\"string\",\"weightProfile\":\"string\",\"qtyEntry\":true,\"discontinued\":true,\"promptForPriceMin\":\"string\",\"promptForPriceMax\":\"string\",\"retailAccountingPrice\":\"string\",\"retailAccountingReportCode\":\"string\",\"linkGroup\":\"string\",\"pf1\":\"string\",\"pf2\":\"string\",\"pf3\":\"string\",\"pf4\":\"string\",\"pf5\":\"string\",\"pf6\":\"string\",\"pf7\":\"string\",\"pf8\":\"string\",\"location\":\"string\",\"shelfSequence\":0}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemStoreData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"itemId\\\":\\\"string\\\",\\\"storeId\\\":\\\"string\\\",\\\"taxList\\\":\\\"string\\\",\\\"specialTendersList\\\":\\\"string\\\",\\\"itemRestriction\\\":\\\"string\\\",\\\"lastCost\\\":\\\"string\\\",\\\"defaultSupplierId\\\":\\\"string\\\",\\\"loyaltyMultiplier\\\":\\\"string\\\",\\\"weightProfile\\\":\\\"string\\\",\\\"qtyEntry\\\":true,\\\"discontinued\\\":true,\\\"promptForPriceMin\\\":\\\"string\\\",\\\"promptForPriceMax\\\":\\\"string\\\",\\\"retailAccountingPrice\\\":\\\"string\\\",\\\"retailAccountingReportCode\\\":\\\"string\\\",\\\"linkGroup\\\":\\\"string\\\",\\\"pf1\\\":\\\"string\\\",\\\"pf2\\\":\\\"string\\\",\\\"pf3\\\":\\\"string\\\",\\\"pf4\\\":\\\"string\\\",\\\"pf5\\\":\\\"string\\\",\\\"pf6\\\":\\\"string\\\",\\\"pf7\\\":\\\"string\\\",\\\"pf8\\\":\\\"string\\\",\\\"location\\\":\\\"string\\\",\\\"shelfSequence\\\":0}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemStoreData?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"itemId\\\":\\\"string\\\",\\\"storeId\\\":\\\"string\\\",\\\"taxList\\\":\\\"string\\\",\\\"specialTendersList\\\":\\\"string\\\",\\\"itemRestriction\\\":\\\"string\\\",\\\"lastCost\\\":\\\"string\\\",\\\"defaultSupplierId\\\":\\\"string\\\",\\\"loyaltyMultiplier\\\":\\\"string\\\",\\\"weightProfile\\\":\\\"string\\\",\\\"qtyEntry\\\":true,\\\"discontinued\\\":true,\\\"promptForPriceMin\\\":\\\"string\\\",\\\"promptForPriceMax\\\":\\\"string\\\",\\\"retailAccountingPrice\\\":\\\"string\\\",\\\"retailAccountingReportCode\\\":\\\"string\\\",\\\"linkGroup\\\":\\\"string\\\",\\\"pf1\\\":\\\"string\\\",\\\"pf2\\\":\\\"string\\\",\\\"pf3\\\":\\\"string\\\",\\\"pf4\\\":\\\"string\\\",\\\"pf5\\\":\\\"string\\\",\\\"pf6\\\":\\\"string\\\",\\\"pf7\\\":\\\"string\\\",\\\"pf8\\\":\\\"string\\\",\\\"location\\\":\\\"string\\\",\\\"shelfSequence\\\":0}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemStoreData',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      itemId: 'string',\n      storeId: 'string',\n      taxList: 'string',\n      specialTendersList: 'string',\n      itemRestriction: 'string',\n      lastCost: 'string',\n      defaultSupplierId: 'string',\n      loyaltyMultiplier: 'string',\n      weightProfile: 'string',\n      qtyEntry: true,\n      discontinued: true,\n      promptForPriceMin: 'string',\n      promptForPriceMax: 'string',\n      retailAccountingPrice: 'string',\n      retailAccountingReportCode: 'string',\n      linkGroup: 'string',\n      pf1: 'string',\n      pf2: 'string',\n      pf3: 'string',\n      pf4: 'string',\n      pf5: 'string',\n      pf6: 'string',\n      pf7: 'string',\n      pf8: 'string',\n      location: 'string',\n      shelfSequence: 0\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemAlternateIds": {
      "post": {
        "summary": "Batch Item Alternate Ids",
        "description": "<font color=\"#2774B8\">The Item Alternate ID endpoint provides you with a means to post bulk updates for managing the Alternate IDs associated with targeted inventory records.\nAs a single inventory record can have multiple Alternate IDs, the base Item ID is required for each line item of the request body (one line item, or row, for each Alternate ID). \nThe same base Item ID can be used as many times as needed to affect all necessary Alternate IDs on its respective maintenance record.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=408\">Inventory Alternate IDs</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Item Alternate Ids",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemAlternateId"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemAlternateId"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemAlternateId"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemAlternateIds",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemAlternateIds?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"itemId\":\"string\",\"alternateId\":\"string\",\"alternateIdReceiptAlias\":\"string\",\"alternateIdQty\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemAlternateIds?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"itemId\\\":\\\"string\\\",\\\"alternateId\\\":\\\"string\\\",\\\"alternateIdReceiptAlias\\\":\\\"string\\\",\\\"alternateIdQty\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemAlternateIds?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"itemId\\\":\\\"string\\\",\\\"alternateId\\\":\\\"string\\\",\\\"alternateIdReceiptAlias\\\":\\\"string\\\",\\\"alternateIdQty\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemAlternateIds',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      itemId: 'string',\n      alternateId: 'string',\n      alternateIdReceiptAlias: 'string',\n      alternateIdQty: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemOrderingInformation": {
      "post": {
        "summary": "Batch Item Ordering Information",
        "description": "## Overview\n  - The **Batch Item Ordering Information** endpoint allows you to post bulk updates to manage the Suppliers (and related ordering information) associated with specific inventory records.\n  - Because a single inventory record can have multiple suppliers, the base Item ID is required for each line item of the request body. \n  - The same base Item ID can be used as many times as needed to affect all necessary supplier-related ordering information on its respective maintenance record.\n  - If this endpoint is used to add supplier ordering information to an item that previously did not have any such information, the **Batch Item Store Data** endpoint must also be used to specify the item's Default Supplier. If the item's Default Supplier is not set, when the item is edited in CATAPULT Web Office, it will require that a Default Supplier be specified before any other changes can be saved. \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410\">Suppliers Section (Inventory)</a> | <a href=\"https://olm.ecrs.com/5-6/?page_id=677\">Supplier Profiles</a>.\n\n## Batch Process Updates and Message Log\n  - Batch processing status and log can be viewed by calling the <code>/batch/importMessages</code> endpoint.\n  ",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Item Ordering Information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemOrderingInformation"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemOrderingInformation"
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "<root> <row action=\"U\" itemId=\"string\" supplierId=\"string\" orderId=\"string\" orderQty=\"string\" orderUnitName=\"string\" orderPrimary=\"true\" vendorDistributionCenterID=\"string\" vendorDistributionCenterName=\"string\" minimumOrder=\"12.000\" suggestedMultiple=\"2\"/> </root>"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemOrderingInformation"
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "'action','itemId','supplierId','orderId','orderQty','orderUnitName','orderPrimary','vendorDistributionCenterID','vendorDistributionCenterName','minimumOrder','suggestedMultiple'\n'U','string','string','string','string','string','true','string','string','12.000','2'"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemOrderingInformation",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemOrderingInformation?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"itemId\":\"string\",\"supplierId\":\"string\",\"orderId\":\"string\",\"orderQty\":\"string\",\"orderUnitName\":\"string\",\"orderPrimary\":true,\"vendorDistributionCenterID\":\"string\",\"vendorDistributionCenterName\":\"string\",\"minimumOrder\":\"12.000\",\"suggestedMultiple\":\"2\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemOrderingInformation?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"itemId\\\":\\\"string\\\",\\\"supplierId\\\":\\\"string\\\",\\\"orderId\\\":\\\"string\\\",\\\"orderQty\\\":\\\"string\\\",\\\"orderUnitName\\\":\\\"string\\\",\\\"orderPrimary\\\":true,\\\"vendorDistributionCenterID\\\":\\\"string\\\",\\\"vendorDistributionCenterName\\\":\\\"string\\\",\\\"minimumOrder\\\":\\\"12.000\\\",\\\"suggestedMultiple\\\":\\\"2\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemOrderingInformation?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"itemId\\\":\\\"string\\\",\\\"supplierId\\\":\\\"string\\\",\\\"orderId\\\":\\\"string\\\",\\\"orderQty\\\":\\\"string\\\",\\\"orderUnitName\\\":\\\"string\\\",\\\"orderPrimary\\\":true,\\\"vendorDistributionCenterID\\\":\\\"string\\\",\\\"vendorDistributionCenterName\\\":\\\"string\\\",\\\"minimumOrder\\\":\\\"12.000\\\",\\\"suggestedMultiple\\\":\\\"2\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemOrderingInformation',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      itemId: 'string',\n      supplierId: 'string',\n      orderId: 'string',\n      orderQty: 'string',\n      orderUnitName: 'string',\n      orderPrimary: true,\n      vendorDistributionCenterID: 'string',\n      vendorDistributionCenterName: 'string',\n      minimumOrder: '12.000',\n      suggestedMultiple: '2'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/PermanentPriceCost": {
      "post": {
        "summary": "Batch Permanent Price and Cost",
        "description": "<font color=\"#2774B8\">This endpoint allows you to create and commit **permanent** Price & Cost Change Worksheets.\nWorksheets created here do not include an end date (thus the \"permanent\" context), but changes can be overridden by future worksheets.\nThese worksheet are applied at the Zone level, so committed price changes will be reflected in every store included in the selected pricing zone.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1841\">Price & Cost Change (P&CC) Worksheets</a>.\n\nPlease note the following about the *Batch Permanent Price and Cost* endpoint:\n   - Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.\n   * When the *Batch Permanent Price and Cost* endpoint is used, each batch is comprised of different rows of data, and each row represents one item on the worksheet. Each row contains specific fields of data that help CATAPULT identify what worksheet(s) to create and what items to place on those worksheets. With this in mind, if any of the following fields within a batch are different, an entirely new worksheet will be created for the row that is different. Therefore, if you want to ensure that all rows within a batch populate the same worksheet, it's important to ensure that the following fields in all rows match.  \n      * name\n      * zoneName\n      * startDate\n      * commitAtStore\n      * worksheetTypeProfileName (available with CATAPULT 5.6.121 and newer)\n   - Beginning with CATAPULT version 5.6.107, should the *Batch Permanent Price and Cost* endpoint initially fail to commit a worksheet, it will reattempt the commit until successful (up to 10 times). After 10 failed attempts, the importMessages for that worksheet will display an 'E' (for error), at which point you will need to commit the worksheet through CATAPULT Web Office. ",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Permanent Prices and Costs to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPermanentPriceCost"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPermanentPriceCost"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPermanentPriceCost"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-permanentPriceAndCost",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/PermanentPriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"name\":\"string\",\"zoneName\":\"string\",\"startDate\":\"2019-08-24T14:15:22Z\",\"memo\":\"string\",\"commitAtStore\":true,\"itemType\":\"I\",\"itemId\":\"string\",\"cost\":\"string\",\"price1\":\"string\",\"promptForPrice1\":true,\"discount1\":\"string\",\"qtyOnly1\":true,\"idealMargin1\":\"string\",\"noManualDiscount1\":true,\"divider1\":1,\"priceLabel1\":\"Base Price Adjustment\",\"price2\":\"string\",\"promptForPrice2\":true,\"discount2\":\"string\",\"qtyOnly2\":true,\"idealMargin2\":\"string\",\"noManualDiscount2\":true,\"divider2\":1,\"priceLabel2\":\"Every Day Low Price\",\"price3\":\"string\",\"promptForPrice3\":true,\"discount3\":\"string\",\"qtyOnly3\":true,\"idealMargin3\":\"string\",\"noManualDiscount3\":true,\"divider3\":1,\"priceLabel3\":\"Employee Price Adjustment\",\"price4\":\"string\",\"promptForPrice4\":true,\"discount4\":\"string\",\"qtyOnly4\":true,\"idealMargin4\":\"string\",\"noManualDiscount4\":true,\"divider4\":1,\"priceLabel4\":\"Members Special\",\"worksheetTypeProfileName\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/PermanentPriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"memo\\\":\\\"string\\\",\\\"commitAtStore\\\":true,\\\"itemType\\\":\\\"I\\\",\\\"itemId\\\":\\\"string\\\",\\\"cost\\\":\\\"string\\\",\\\"price1\\\":\\\"string\\\",\\\"promptForPrice1\\\":true,\\\"discount1\\\":\\\"string\\\",\\\"qtyOnly1\\\":true,\\\"idealMargin1\\\":\\\"string\\\",\\\"noManualDiscount1\\\":true,\\\"divider1\\\":1,\\\"priceLabel1\\\":\\\"Base Price Adjustment\\\",\\\"price2\\\":\\\"string\\\",\\\"promptForPrice2\\\":true,\\\"discount2\\\":\\\"string\\\",\\\"qtyOnly2\\\":true,\\\"idealMargin2\\\":\\\"string\\\",\\\"noManualDiscount2\\\":true,\\\"divider2\\\":1,\\\"priceLabel2\\\":\\\"Every Day Low Price\\\",\\\"price3\\\":\\\"string\\\",\\\"promptForPrice3\\\":true,\\\"discount3\\\":\\\"string\\\",\\\"qtyOnly3\\\":true,\\\"idealMargin3\\\":\\\"string\\\",\\\"noManualDiscount3\\\":true,\\\"divider3\\\":1,\\\"priceLabel3\\\":\\\"Employee Price Adjustment\\\",\\\"price4\\\":\\\"string\\\",\\\"promptForPrice4\\\":true,\\\"discount4\\\":\\\"string\\\",\\\"qtyOnly4\\\":true,\\\"idealMargin4\\\":\\\"string\\\",\\\"noManualDiscount4\\\":true,\\\"divider4\\\":1,\\\"priceLabel4\\\":\\\"Members Special\\\",\\\"worksheetTypeProfileName\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/PermanentPriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"memo\\\":\\\"string\\\",\\\"commitAtStore\\\":true,\\\"itemType\\\":\\\"I\\\",\\\"itemId\\\":\\\"string\\\",\\\"cost\\\":\\\"string\\\",\\\"price1\\\":\\\"string\\\",\\\"promptForPrice1\\\":true,\\\"discount1\\\":\\\"string\\\",\\\"qtyOnly1\\\":true,\\\"idealMargin1\\\":\\\"string\\\",\\\"noManualDiscount1\\\":true,\\\"divider1\\\":1,\\\"priceLabel1\\\":\\\"Base Price Adjustment\\\",\\\"price2\\\":\\\"string\\\",\\\"promptForPrice2\\\":true,\\\"discount2\\\":\\\"string\\\",\\\"qtyOnly2\\\":true,\\\"idealMargin2\\\":\\\"string\\\",\\\"noManualDiscount2\\\":true,\\\"divider2\\\":1,\\\"priceLabel2\\\":\\\"Every Day Low Price\\\",\\\"price3\\\":\\\"string\\\",\\\"promptForPrice3\\\":true,\\\"discount3\\\":\\\"string\\\",\\\"qtyOnly3\\\":true,\\\"idealMargin3\\\":\\\"string\\\",\\\"noManualDiscount3\\\":true,\\\"divider3\\\":1,\\\"priceLabel3\\\":\\\"Employee Price Adjustment\\\",\\\"price4\\\":\\\"string\\\",\\\"promptForPrice4\\\":true,\\\"discount4\\\":\\\"string\\\",\\\"qtyOnly4\\\":true,\\\"idealMargin4\\\":\\\"string\\\",\\\"noManualDiscount4\\\":true,\\\"divider4\\\":1,\\\"priceLabel4\\\":\\\"Members Special\\\",\\\"worksheetTypeProfileName\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/PermanentPriceCost',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      name: 'string',\n      zoneName: 'string',\n      startDate: '2019-08-24T14:15:22Z',\n      memo: 'string',\n      commitAtStore: true,\n      itemType: 'I',\n      itemId: 'string',\n      cost: 'string',\n      price1: 'string',\n      promptForPrice1: true,\n      discount1: 'string',\n      qtyOnly1: true,\n      idealMargin1: 'string',\n      noManualDiscount1: true,\n      divider1: 1,\n      priceLabel1: 'Base Price Adjustment',\n      price2: 'string',\n      promptForPrice2: true,\n      discount2: 'string',\n      qtyOnly2: true,\n      idealMargin2: 'string',\n      noManualDiscount2: true,\n      divider2: 1,\n      priceLabel2: 'Every Day Low Price',\n      price3: 'string',\n      promptForPrice3: true,\n      discount3: 'string',\n      qtyOnly3: true,\n      idealMargin3: 'string',\n      noManualDiscount3: true,\n      divider3: 1,\n      priceLabel3: 'Employee Price Adjustment',\n      price4: 'string',\n      promptForPrice4: true,\n      discount4: 'string',\n      qtyOnly4: true,\n      idealMargin4: 'string',\n      noManualDiscount4: true,\n      divider4: 1,\n      priceLabel4: 'Members Special',\n      worksheetTypeProfileName: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/PriceCost": {
      "post": {
        "summary": "Batch Price and Cost",
        "description": "<font color=\"#2774B8\">This endpoint allows you to create and commit Price & Cost Change Worksheets.\nThese worksheets are applied at the Zone level through the required <code>zoneName</code> parameter, but particular stores within a zone can be specified to narrow the recipients of committed changes.\nNote that the <code>startDate</code> and <code>endDate</code> parameters are required to specify when the changes made by the worksheet will take effect and end.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1841\">Price & Cost Change (P&CC) Worksheets</a>.\n\nPlease note the following about the *Batch Price and Cost* endpoint:\n   * Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.\n   * When the *Batch Price and Cost* endpoint is used, each batch is comprised of different rows of data, and each row represents one item on the worksheet. Each row contains specific fields of data that help CATAPULT identify what worksheet(s) to create and what items to place on those worksheets. With this in mind, if any of the following fields within a batch are different, an entirely new worksheet will be created for the row that is different. Therefore, if you want to ensure that all rows within a batch populate the same worksheet, it's important to ensure that the following fields in all rows match.  \n      * name\n      * zoneName\n      * startDate\n      * endDate\n      * commitAtStore\n      * worksheetTypeProfileName (available with CATAPULT 5.6.121 and newer)\n   * Beginning with CATAPULT version 5.6.107, should the *Batch Price and Cost* endpoint initially fail to commit a worksheet, it will reattempt the commit until successful (up to 10 times). After 10 failed attempts, the importMessages for that worksheet will display an 'E' (for error), at which point you will need to commit the worksheet through CATAPULT Web Office.",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Prices and Costs to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPriceCost"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPriceCost"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPriceCost"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemPriceAndCost",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/PriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"name\":\"string\",\"zoneName\":\"string\",\"stores\":\"string\",\"startDate\":\"2019-08-24T14:15:22Z\",\"endDate\":\"2019-08-24T14:15:22Z\",\"priority\":0,\"commitAtStore\":true,\"itemType\":\"I\",\"itemId\":\"string\",\"cost\":\"string\",\"price1\":\"string\",\"promptForPrice1\":true,\"discount1\":\"string\",\"qtyOnly1\":true,\"idealMargin1\":\"string\",\"noManualDiscount1\":true,\"divider1\":1,\"priceLabel1\":\"3-Day Deals\",\"price2\":\"string\",\"promptForPrice2\":true,\"discount2\":\"string\",\"qtyOnly2\":true,\"idealMargin2\":\"string\",\"noManualDiscount2\":true,\"divider2\":1,\"priceLabel2\":\"Every Day Low Price\",\"price3\":\"string\",\"promptForPrice3\":true,\"discount3\":\"string\",\"qtyOnly3\":true,\"idealMargin3\":\"string\",\"noManualDiscount3\":true,\"divider3\":1,\"priceLabel3\":\"Weekend Deals\",\"price4\":\"string\",\"promptForPrice4\":true,\"discount4\":\"string\",\"qtyOnly4\":true,\"idealMargin4\":\"string\",\"noManualDiscount4\":true,\"divider4\":1,\"priceLabel4\":\"Members Special\",\"worksheetTypeProfileName\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/PriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"stores\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"endDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"priority\\\":0,\\\"commitAtStore\\\":true,\\\"itemType\\\":\\\"I\\\",\\\"itemId\\\":\\\"string\\\",\\\"cost\\\":\\\"string\\\",\\\"price1\\\":\\\"string\\\",\\\"promptForPrice1\\\":true,\\\"discount1\\\":\\\"string\\\",\\\"qtyOnly1\\\":true,\\\"idealMargin1\\\":\\\"string\\\",\\\"noManualDiscount1\\\":true,\\\"divider1\\\":1,\\\"priceLabel1\\\":\\\"3-Day Deals\\\",\\\"price2\\\":\\\"string\\\",\\\"promptForPrice2\\\":true,\\\"discount2\\\":\\\"string\\\",\\\"qtyOnly2\\\":true,\\\"idealMargin2\\\":\\\"string\\\",\\\"noManualDiscount2\\\":true,\\\"divider2\\\":1,\\\"priceLabel2\\\":\\\"Every Day Low Price\\\",\\\"price3\\\":\\\"string\\\",\\\"promptForPrice3\\\":true,\\\"discount3\\\":\\\"string\\\",\\\"qtyOnly3\\\":true,\\\"idealMargin3\\\":\\\"string\\\",\\\"noManualDiscount3\\\":true,\\\"divider3\\\":1,\\\"priceLabel3\\\":\\\"Weekend Deals\\\",\\\"price4\\\":\\\"string\\\",\\\"promptForPrice4\\\":true,\\\"discount4\\\":\\\"string\\\",\\\"qtyOnly4\\\":true,\\\"idealMargin4\\\":\\\"string\\\",\\\"noManualDiscount4\\\":true,\\\"divider4\\\":1,\\\"priceLabel4\\\":\\\"Members Special\\\",\\\"worksheetTypeProfileName\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/PriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"stores\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"endDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"priority\\\":0,\\\"commitAtStore\\\":true,\\\"itemType\\\":\\\"I\\\",\\\"itemId\\\":\\\"string\\\",\\\"cost\\\":\\\"string\\\",\\\"price1\\\":\\\"string\\\",\\\"promptForPrice1\\\":true,\\\"discount1\\\":\\\"string\\\",\\\"qtyOnly1\\\":true,\\\"idealMargin1\\\":\\\"string\\\",\\\"noManualDiscount1\\\":true,\\\"divider1\\\":1,\\\"priceLabel1\\\":\\\"3-Day Deals\\\",\\\"price2\\\":\\\"string\\\",\\\"promptForPrice2\\\":true,\\\"discount2\\\":\\\"string\\\",\\\"qtyOnly2\\\":true,\\\"idealMargin2\\\":\\\"string\\\",\\\"noManualDiscount2\\\":true,\\\"divider2\\\":1,\\\"priceLabel2\\\":\\\"Every Day Low Price\\\",\\\"price3\\\":\\\"string\\\",\\\"promptForPrice3\\\":true,\\\"discount3\\\":\\\"string\\\",\\\"qtyOnly3\\\":true,\\\"idealMargin3\\\":\\\"string\\\",\\\"noManualDiscount3\\\":true,\\\"divider3\\\":1,\\\"priceLabel3\\\":\\\"Weekend Deals\\\",\\\"price4\\\":\\\"string\\\",\\\"promptForPrice4\\\":true,\\\"discount4\\\":\\\"string\\\",\\\"qtyOnly4\\\":true,\\\"idealMargin4\\\":\\\"string\\\",\\\"noManualDiscount4\\\":true,\\\"divider4\\\":1,\\\"priceLabel4\\\":\\\"Members Special\\\",\\\"worksheetTypeProfileName\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/PriceCost',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      name: 'string',\n      zoneName: 'string',\n      stores: 'string',\n      startDate: '2019-08-24T14:15:22Z',\n      endDate: '2019-08-24T14:15:22Z',\n      priority: 0,\n      commitAtStore: true,\n      itemType: 'I',\n      itemId: 'string',\n      cost: 'string',\n      price1: 'string',\n      promptForPrice1: true,\n      discount1: 'string',\n      qtyOnly1: true,\n      idealMargin1: 'string',\n      noManualDiscount1: true,\n      divider1: 1,\n      priceLabel1: '3-Day Deals',\n      price2: 'string',\n      promptForPrice2: true,\n      discount2: 'string',\n      qtyOnly2: true,\n      idealMargin2: 'string',\n      noManualDiscount2: true,\n      divider2: 1,\n      priceLabel2: 'Every Day Low Price',\n      price3: 'string',\n      promptForPrice3: true,\n      discount3: 'string',\n      qtyOnly3: true,\n      idealMargin3: 'string',\n      noManualDiscount3: true,\n      divider3: 1,\n      priceLabel3: 'Weekend Deals',\n      price4: 'string',\n      promptForPrice4: true,\n      discount4: 'string',\n      qtyOnly4: true,\n      idealMargin4: 'string',\n      noManualDiscount4: true,\n      divider4: 1,\n      priceLabel4: 'Members Special',\n      worksheetTypeProfileName: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/inventoryLabel": {
      "post": {
        "summary": "Batch Inventory Labels",
        "description": "- The <code>inventoryLabel</code> endpoint allows for the creation and posting of Inventory Label Worksheets.\n- Inventory Label worksheets can be used to trigger the bulk output of label types associated with the provided Item IDs: particularly Shelf Tabs, Labels, and/or Signs. \n- Labels can be printed from both uncommitted and committed worksheets.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1749\">Inventory Label (IL) Worksheet</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=1945\">Label Catalog</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Inventory Labels to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-inventoryLabel"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-inventoryLabel"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-inventoryLabel"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-inventoryLabels",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/inventoryLabel?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"name\":\"string\",\"storeNumber\":\"string\",\"itemId\":\"string\",\"itemTagQuantity\":\"str\",\"shelfLabelQuantity\":\"s\",\"signsQuantity\":\"s\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/inventoryLabel?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"name\\\":\\\"string\\\",\\\"storeNumber\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\",\\\"itemTagQuantity\\\":\\\"str\\\",\\\"shelfLabelQuantity\\\":\\\"s\\\",\\\"signsQuantity\\\":\\\"s\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/inventoryLabel?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"name\\\":\\\"string\\\",\\\"storeNumber\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\",\\\"itemTagQuantity\\\":\\\"str\\\",\\\"shelfLabelQuantity\\\":\\\"s\\\",\\\"signsQuantity\\\":\\\"s\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/inventoryLabel',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      name: 'string',\n      storeNumber: 'string',\n      itemId: 'string',\n      itemTagQuantity: 'str',\n      shelfLabelQuantity: 's',\n      signsQuantity: 's'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/storePromotions": {
      "post": {
        "summary": "Batch Store Promotions",
        "description": "<font color=\"#2774B8\">The Store Promotions endpoint allows you to post updates to existing, and create new, Dynamic Promotions.\nSpecifically, in this case, Store Promotions (as opposed to Item Promotions). Note that Store Coupons, Exclude\nGroups, and Customers are not created by this function and therefore must already be present in your database\nbefore they can be successfully included as part of a request. Use the DISCONTINUE action rather than the\nREMOVE action whenever possible.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2685\">Dynamic Promotion Sections</a>, <a href=\"hhttps://olm.ecrs.com/5-5/?page_id=2597#Store\">Creating a Store Promotion</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Store Promotions to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-storePromotion"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-storePromotion"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-storePromotion"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-storePromotions",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/storePromotions?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"name\":\"string\",\"zoneName\":\"string\",\"receiptAlias\":\"string\",\"minPurchase\":\"string\",\"requireMin\":true,\"maxPerTrans\":0,\"maxTransactionDiscount\":\"string\",\"maxDiscountPerPromo\":true,\"itemGroups\":\"string\",\"scheduleName\":\"string\",\"startDate\":\"2019-08-24\",\"endDate\":\"2019-08-24\",\"startTime\":\"14:15:22Z\",\"endTime\":\"14:15:22Z\",\"type\":0,\"value\":\"string\",\"excludeGroup\":\"string\",\"storeCoupon\":\"string\",\"customers\":\"string\",\"oneTimeUse\":true,\"couponEntryType\":0,\"stackLevel\":0,\"applyToPl1\":true,\"applyToPl2\":true,\"applyToPl3\":true,\"applyToPl4\":true}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/storePromotions?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"receiptAlias\\\":\\\"string\\\",\\\"minPurchase\\\":\\\"string\\\",\\\"requireMin\\\":true,\\\"maxPerTrans\\\":0,\\\"maxTransactionDiscount\\\":\\\"string\\\",\\\"maxDiscountPerPromo\\\":true,\\\"itemGroups\\\":\\\"string\\\",\\\"scheduleName\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24\\\",\\\"endDate\\\":\\\"2019-08-24\\\",\\\"startTime\\\":\\\"14:15:22Z\\\",\\\"endTime\\\":\\\"14:15:22Z\\\",\\\"type\\\":0,\\\"value\\\":\\\"string\\\",\\\"excludeGroup\\\":\\\"string\\\",\\\"storeCoupon\\\":\\\"string\\\",\\\"customers\\\":\\\"string\\\",\\\"oneTimeUse\\\":true,\\\"couponEntryType\\\":0,\\\"stackLevel\\\":0,\\\"applyToPl1\\\":true,\\\"applyToPl2\\\":true,\\\"applyToPl3\\\":true,\\\"applyToPl4\\\":true}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/storePromotions?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"receiptAlias\\\":\\\"string\\\",\\\"minPurchase\\\":\\\"string\\\",\\\"requireMin\\\":true,\\\"maxPerTrans\\\":0,\\\"maxTransactionDiscount\\\":\\\"string\\\",\\\"maxDiscountPerPromo\\\":true,\\\"itemGroups\\\":\\\"string\\\",\\\"scheduleName\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24\\\",\\\"endDate\\\":\\\"2019-08-24\\\",\\\"startTime\\\":\\\"14:15:22Z\\\",\\\"endTime\\\":\\\"14:15:22Z\\\",\\\"type\\\":0,\\\"value\\\":\\\"string\\\",\\\"excludeGroup\\\":\\\"string\\\",\\\"storeCoupon\\\":\\\"string\\\",\\\"customers\\\":\\\"string\\\",\\\"oneTimeUse\\\":true,\\\"couponEntryType\\\":0,\\\"stackLevel\\\":0,\\\"applyToPl1\\\":true,\\\"applyToPl2\\\":true,\\\"applyToPl3\\\":true,\\\"applyToPl4\\\":true}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/storePromotions',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      name: 'string',\n      zoneName: 'string',\n      receiptAlias: 'string',\n      minPurchase: 'string',\n      requireMin: true,\n      maxPerTrans: 0,\n      maxTransactionDiscount: 'string',\n      maxDiscountPerPromo: true,\n      itemGroups: 'string',\n      scheduleName: 'string',\n      startDate: '2019-08-24',\n      endDate: '2019-08-24',\n      startTime: '14:15:22Z',\n      endTime: '14:15:22Z',\n      type: 0,\n      value: 'string',\n      excludeGroup: 'string',\n      storeCoupon: 'string',\n      customers: 'string',\n      oneTimeUse: true,\n      couponEntryType: 0,\n      stackLevel: 0,\n      applyToPl1: true,\n      applyToPl2: true,\n      applyToPl3: true,\n      applyToPl4: true\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemPromotions": {
      "post": {
        "summary": "Batch Item Promotions",
        "description": "<font color=\"#2774B8\">The Item Promotions endpoint allows you to post updates to existing, and create new, Dynamic Promotions\nof the Item Promotion variety. Note that Store Coupons, Exclude Groups, and Customers are not created \nby this function and therefore must be created in WebOffice before they can be used in the request parameters. \nLikewise the Distribution Percentage (%), if supplied, must calculate to a sum total of **100%**\nor the process will fail. Use the DISCONTINUE action rather than the REMOVE action whenever possible.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2685\">Dynamic Promotion Sections</a>, <a href=\"https://olm.ecrs.com/5-5/?page_id=2597#Item\">Creating an Item Promotion</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Item Promotions to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPromotion"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPromotion"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemPromotion"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemPromotions",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemPromotions?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"name\":\"string\",\"zoneName\":\"string\",\"receiptAlias\":\"string\",\"minPurchase\":\"string\",\"requireMin\":true,\"maxPerTrans\":0,\"maxTransactionDiscount\":\"string\",\"maxDiscountPerPromo\":true,\"scheduleName\":\"string\",\"startDate\":\"2019-08-24\",\"endDate\":\"2019-08-24\",\"startTime\":\"14:15:22Z\",\"endTime\":\"14:15:22Z\",\"type\":0,\"value\":\"string\",\"excludeGroup\":\"string\",\"storeCoupon\":\"string\",\"customers\":\"string\",\"deferrable\":true,\"usesPerPeriod\":0,\"resetPeriod\":0,\"periodDow\":0,\"periodDays\":0,\"applyToPl1\":true,\"applyToPl2\":true,\"applyToPl3\":true,\"applyToPl4\":true}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemPromotions?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"receiptAlias\\\":\\\"string\\\",\\\"minPurchase\\\":\\\"string\\\",\\\"requireMin\\\":true,\\\"maxPerTrans\\\":0,\\\"maxTransactionDiscount\\\":\\\"string\\\",\\\"maxDiscountPerPromo\\\":true,\\\"scheduleName\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24\\\",\\\"endDate\\\":\\\"2019-08-24\\\",\\\"startTime\\\":\\\"14:15:22Z\\\",\\\"endTime\\\":\\\"14:15:22Z\\\",\\\"type\\\":0,\\\"value\\\":\\\"string\\\",\\\"excludeGroup\\\":\\\"string\\\",\\\"storeCoupon\\\":\\\"string\\\",\\\"customers\\\":\\\"string\\\",\\\"deferrable\\\":true,\\\"usesPerPeriod\\\":0,\\\"resetPeriod\\\":0,\\\"periodDow\\\":0,\\\"periodDays\\\":0,\\\"applyToPl1\\\":true,\\\"applyToPl2\\\":true,\\\"applyToPl3\\\":true,\\\"applyToPl4\\\":true}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemPromotions?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"name\\\":\\\"string\\\",\\\"zoneName\\\":\\\"string\\\",\\\"receiptAlias\\\":\\\"string\\\",\\\"minPurchase\\\":\\\"string\\\",\\\"requireMin\\\":true,\\\"maxPerTrans\\\":0,\\\"maxTransactionDiscount\\\":\\\"string\\\",\\\"maxDiscountPerPromo\\\":true,\\\"scheduleName\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24\\\",\\\"endDate\\\":\\\"2019-08-24\\\",\\\"startTime\\\":\\\"14:15:22Z\\\",\\\"endTime\\\":\\\"14:15:22Z\\\",\\\"type\\\":0,\\\"value\\\":\\\"string\\\",\\\"excludeGroup\\\":\\\"string\\\",\\\"storeCoupon\\\":\\\"string\\\",\\\"customers\\\":\\\"string\\\",\\\"deferrable\\\":true,\\\"usesPerPeriod\\\":0,\\\"resetPeriod\\\":0,\\\"periodDow\\\":0,\\\"periodDays\\\":0,\\\"applyToPl1\\\":true,\\\"applyToPl2\\\":true,\\\"applyToPl3\\\":true,\\\"applyToPl4\\\":true}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemPromotions',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      name: 'string',\n      zoneName: 'string',\n      receiptAlias: 'string',\n      minPurchase: 'string',\n      requireMin: true,\n      maxPerTrans: 0,\n      maxTransactionDiscount: 'string',\n      maxDiscountPerPromo: true,\n      scheduleName: 'string',\n      startDate: '2019-08-24',\n      endDate: '2019-08-24',\n      startTime: '14:15:22Z',\n      endTime: '14:15:22Z',\n      type: 0,\n      value: 'string',\n      excludeGroup: 'string',\n      storeCoupon: 'string',\n      customers: 'string',\n      deferrable: true,\n      usesPerPeriod: 0,\n      resetPeriod: 0,\n      periodDow: 0,\n      periodDays: 0,\n      applyToPl1: true,\n      applyToPl2: true,\n      applyToPl3: true,\n      applyToPl4: true\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemGroupsConventional": {
      "post": {
        "summary": "Batch Conventional Item Groups",
        "description": "<font color=\"#2774B8\">The Conventional Item Groups endpoint enables you to post changes to existing Item Groups\nand/or to create new ones. An Item Group includes all inventory records that contain\nthe same itemGroupName. Note this process will replace rather than update, so if an\nexisting itemGroupName is presently defined in the database it, along with any itemIds \nwhich are listed in that group, will be replaced by the value(s) supplied in the request.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-5/?page_id=1379\">Item Group Profiles</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Conventional Item Groups to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemGroupConventional"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemGroupConventional"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemGroupConventional"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-conventionalItemGroups",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemGroupsConventional?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"itemGroupName\":\"string\",\"itemId\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemGroupsConventional?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"itemGroupName\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemGroupsConventional?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"itemGroupName\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemGroupsConventional',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [{itemGroupName: 'string', itemId: 'string'}]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/itemGroupsStoreLevel": {
      "post": {
        "summary": "Batch Item Groups Store Level",
        "description": "<font color=\"#2774B8\">The Item Groups Store Level endpoint functions similarly to the Conventional Item Group\nendpoint, but with the added Store Group filter. This allows you to post more refined\nchanges to Item Groups so as to include or exclude certain stores. Note while it can \ncreate new Item Groups, it **does not** create new Store Groups: requests must therefore \nreference Store Groups that already exist in your database. Additionally, it will replace \nrather than update existing records, so if an itemGroupName is already defined in the database \nit will be replaced by the value(s) supplied in the request.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-5/?page_id=1175\">Store Group Profiles</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Store Level Item Groups to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemGroupStore"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemGroupStore"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-itemGroupStore"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemGroupsStoreLevel",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/itemGroupsStoreLevel?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"itemGroupName\":\"string\",\"itemId\":\"string\",\"storeGroupName\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/itemGroupsStoreLevel?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"itemGroupName\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\",\\\"storeGroupName\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/itemGroupsStoreLevel?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"itemGroupName\\\":\\\"string\\\",\\\"itemId\\\":\\\"string\\\",\\\"storeGroupName\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/itemGroupsStoreLevel',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [{itemGroupName: 'string', itemId: 'string', storeGroupName: 'string'}]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/customerMaintenance": {
      "post": {
        "summary": "Batch Customer Maintenance",
        "description": "<font color=\"#2774B8\">The Customer Maintenance endpoint enables you to create and post changes to the customer records in your database.\nIn general, this endpoint avails itself for updates related to general, demographic fields of a customer maintenance record. \nMore precise updates, which are associated with individual sections of the customer maintenance record, can be found in the batch_addresses, \nbatch_emailAddress, batch_phoneNumbers, and (to a lesser degree) batch_itemPromotions endpoints.\nNote that any Store Coupons included in the request must already exist in the database, as this procedure will not create new ones. \nIt will, however, create/insert newly defined Prefixes and PowerField values into their respective tables, where present in the request.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-5/?page_id=243\">Customer Maintenance</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Customers to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-customer"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-customer"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-customer"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-customerMaintenance",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/customerMaintenance?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"customerId\":\"string\",\"prefix\":\"string\",\"firstName\":\"string\",\"middleName\":\"string\",\"lastName\":\"string\",\"suffix\":\"string\",\"alias\":\"string\",\"pf1\":\"string\",\"pf2\":\"string\",\"pf3\":\"string\",\"pf4\":\"string\",\"pf5\":\"string\",\"pf6\":\"string\",\"pf7\":\"string\",\"pf8\":\"string\",\"title\":\"string\",\"company\":\"string\",\"memo\":\"string\",\"birthDate\":\"2019-08-24\",\"priceLevel\":1,\"optOutReceipt\":true,\"blockSuspendedSales\":true,\"hideInLookup\":true,\"inactive\":true,\"loyalty\":true,\"loyaltyAccrualMultiplier\":0,\"taxExempt\":true,\"storeCouponList\":\"string\",\"householdMainCustomerId\":\"string\",\"householdRelation\":\"string\",\"householdCanRedeem\":true,\"dependentList\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/customerMaintenance?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"customerId\\\":\\\"string\\\",\\\"prefix\\\":\\\"string\\\",\\\"firstName\\\":\\\"string\\\",\\\"middleName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\",\\\"suffix\\\":\\\"string\\\",\\\"alias\\\":\\\"string\\\",\\\"pf1\\\":\\\"string\\\",\\\"pf2\\\":\\\"string\\\",\\\"pf3\\\":\\\"string\\\",\\\"pf4\\\":\\\"string\\\",\\\"pf5\\\":\\\"string\\\",\\\"pf6\\\":\\\"string\\\",\\\"pf7\\\":\\\"string\\\",\\\"pf8\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\",\\\"company\\\":\\\"string\\\",\\\"memo\\\":\\\"string\\\",\\\"birthDate\\\":\\\"2019-08-24\\\",\\\"priceLevel\\\":1,\\\"optOutReceipt\\\":true,\\\"blockSuspendedSales\\\":true,\\\"hideInLookup\\\":true,\\\"inactive\\\":true,\\\"loyalty\\\":true,\\\"loyaltyAccrualMultiplier\\\":0,\\\"taxExempt\\\":true,\\\"storeCouponList\\\":\\\"string\\\",\\\"householdMainCustomerId\\\":\\\"string\\\",\\\"householdRelation\\\":\\\"string\\\",\\\"householdCanRedeem\\\":true,\\\"dependentList\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/customerMaintenance?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"customerId\\\":\\\"string\\\",\\\"prefix\\\":\\\"string\\\",\\\"firstName\\\":\\\"string\\\",\\\"middleName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\",\\\"suffix\\\":\\\"string\\\",\\\"alias\\\":\\\"string\\\",\\\"pf1\\\":\\\"string\\\",\\\"pf2\\\":\\\"string\\\",\\\"pf3\\\":\\\"string\\\",\\\"pf4\\\":\\\"string\\\",\\\"pf5\\\":\\\"string\\\",\\\"pf6\\\":\\\"string\\\",\\\"pf7\\\":\\\"string\\\",\\\"pf8\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\",\\\"company\\\":\\\"string\\\",\\\"memo\\\":\\\"string\\\",\\\"birthDate\\\":\\\"2019-08-24\\\",\\\"priceLevel\\\":1,\\\"optOutReceipt\\\":true,\\\"blockSuspendedSales\\\":true,\\\"hideInLookup\\\":true,\\\"inactive\\\":true,\\\"loyalty\\\":true,\\\"loyaltyAccrualMultiplier\\\":0,\\\"taxExempt\\\":true,\\\"storeCouponList\\\":\\\"string\\\",\\\"householdMainCustomerId\\\":\\\"string\\\",\\\"householdRelation\\\":\\\"string\\\",\\\"householdCanRedeem\\\":true,\\\"dependentList\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/customerMaintenance',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      customerId: 'string',\n      prefix: 'string',\n      firstName: 'string',\n      middleName: 'string',\n      lastName: 'string',\n      suffix: 'string',\n      alias: 'string',\n      pf1: 'string',\n      pf2: 'string',\n      pf3: 'string',\n      pf4: 'string',\n      pf5: 'string',\n      pf6: 'string',\n      pf7: 'string',\n      pf8: 'string',\n      title: 'string',\n      company: 'string',\n      memo: 'string',\n      birthDate: '2019-08-24',\n      priceLevel: 1,\n      optOutReceipt: true,\n      blockSuspendedSales: true,\n      hideInLookup: true,\n      inactive: true,\n      loyalty: true,\n      loyaltyAccrualMultiplier: 0,\n      taxExempt: true,\n      storeCouponList: 'string',\n      householdMainCustomerId: 'string',\n      householdRelation: 'string',\n      householdCanRedeem: true,\n      dependentList: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/addresses": {
      "post": {
        "summary": "Batch Addresses",
        "description": "<font color=\"#2774B8\"> The Addresses endpoint allows you to post mailing addresses updates for select records in the CATAPULT system. Specifically:\n   - Customers \n   - Employees\n   - Stores\n   - Suppliers\n   \nThis endpoint creates new Address Descriptions on a supported record and will create new Address Descriptions ('labels', i.e. Business, Home, Warehouse, etc.) where they do not already exist. When entered in a row of the request body,the category corresponds to the type of maintenance record ultimately called by the <code>entityId</code> in the same row.\n\n**EXAMPLE** - A request is posted to update <code>entityId</code> '40000001234' in Category 'C' with a new email. This instructs the Address procedure that a **Customer** record (i.e., Category 'C') where <code>customerId</code> = <code>entityId</code> is to receive the new Address Description. \n\n**Beginning with CATAPULT 5.6.112+**, this endpoint will only update addresses for records where the system detects there is a change (or a new address is being added). This prevents records from being unnecessarily updated with the same data each time the endpoint is used.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=41471\">Address Descriptions (Profiles)</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Addresses to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-address"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-address"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-address"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-addresses",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/addresses?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"category\":\"C\",\"entityId\":\"string\",\"description\":\"string\",\"streetaddressline1\":\"string\",\"streetaddressline2\":\"string\",\"city\":\"string\",\"stateProvince\":\"st\",\"country\":\"st\",\"postalCode\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/addresses?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"category\\\":\\\"C\\\",\\\"entityId\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"streetaddressline1\\\":\\\"string\\\",\\\"streetaddressline2\\\":\\\"string\\\",\\\"city\\\":\\\"string\\\",\\\"stateProvince\\\":\\\"st\\\",\\\"country\\\":\\\"st\\\",\\\"postalCode\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/addresses?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"category\\\":\\\"C\\\",\\\"entityId\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"streetaddressline1\\\":\\\"string\\\",\\\"streetaddressline2\\\":\\\"string\\\",\\\"city\\\":\\\"string\\\",\\\"stateProvince\\\":\\\"st\\\",\\\"country\\\":\\\"st\\\",\\\"postalCode\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/addresses',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      category: 'C',\n      entityId: 'string',\n      description: 'string',\n      streetaddressline1: 'string',\n      streetaddressline2: 'string',\n      city: 'string',\n      stateProvince: 'st',\n      country: 'st',\n      postalCode: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/phoneNumbers": {
      "post": {
        "summary": "Batch Phone Numbers",
        "description": "<font color=\"#2774B8\">The Phone Numbers endpoint allows you to manage the phone numbers associated with select records in the CATAPULT system. Specifically:\n   - Customers\n   - Employees\n   - Suppliers\n   - Stores\n\nWhen entered in a row of the request body,the category corresponds to the type of maintenance record ultimately called by the <code>entityId</code> in the same row. \n\n**EXAMPLE:** - A value of '1234567' is in the respective ID field for two unrelated customer and employee records in CATAPULT.\nWe only want to post a new phone number on the customer record, so in the request body we would enter 'C' and '1234567' for the \n<code>Category</code> and <code>entityId</code> parameters, respectively. This directs the procedure to identify and update the customer (Category 'C') maintenance record \nwhose customerId matches the provided entityId ('1234567').\n\n**Beginning with CATAPULT 5.6.111+**, this endpoint will only update phone numbers for records where the system detects there is a change (or a new phone number is being added). This prevents records from being unnecessarily updated with the same data each time the endpoint is used.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1339\">Phone Descriptions (Profiles)</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Phone Numbers to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-phoneNumber"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-phoneNumber"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-phoneNumber"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-itemPhoneNumbers",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/phoneNumbers?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"category\":\"C\",\"entityId\":\"string\",\"description\":\"string\",\"phoneNumber\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/phoneNumbers?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"category\\\":\\\"C\\\",\\\"entityId\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"phoneNumber\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/phoneNumbers?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"category\\\":\\\"C\\\",\\\"entityId\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"phoneNumber\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/phoneNumbers',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      category: 'C',\n      entityId: 'string',\n      description: 'string',\n      phoneNumber: 'string'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/emailAddresses": {
      "post": {
        "summary": "Batch Email Addresses",
        "description": "<font color=\"#2774B8\">The Email Addresses endpoint allows you to manage the email addresses associated with select records in the CATAPULT system. Specifically:\n   - Customers\n   - Employees\n   - Stores\n   - Suppliers\n\nThis endpoint creates new email addresses on a supported record and will create new Email Descriptions ('labels', i.e. Home Email, Work Email, Vendor Support Email, etc.) where they do not already exist. When entered in a row of the request body,the category corresponds to the type of maintenance record ultimately called by the <code>entityId</code> in the same row.\n\n**EXAMPLE** - A request is posted to update <code>entityId</code> '7101' in Category 'S' with a new email. This instructs the Email Address procedure that a **Store** record (i.e., Category 'S') where <code>storeId</code> = <code>entityId</code> is to receive the new email.\n\n**Beginning with CATAPULT 5.6.112+**, this endpoint will only update email addresses for records where the system detects there is a change (or a new email address is being added). This prevents records from being unnecessarily updated with the same data each time the endpoint is used.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=6191\">Email Descriptions (Profiles)</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Phone Numbers to Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-emailAddress"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-emailAddress"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-emailAddress"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-emailAddresses",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/emailAddresses?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"action\":\"U\",\"category\":\"C\",\"entityId\":\"string\",\"description\":\"string\",\"address\":\"string\",\"marketingOptIn\":true}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/emailAddresses?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"action\\\":\\\"U\\\",\\\"category\\\":\\\"C\\\",\\\"entityId\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"address\\\":\\\"string\\\",\\\"marketingOptIn\\\":true}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/emailAddresses?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"action\\\":\\\"U\\\",\\\"category\\\":\\\"C\\\",\\\"entityId\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"address\\\":\\\"string\\\",\\\"marketingOptIn\\\":true}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/emailAddresses',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      action: 'U',\n      category: 'C',\n      entityId: 'string',\n      description: 'string',\n      address: 'string',\n      marketingOptIn: true\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/binLookupOverrides": {
      "post": {
        "summary": "Batch BIN Lookup Overrides",
        "description": "<font color=\"#2774B8\">The BIN Lookup Overrides endpoint is one of two endpoints built to assist with offline transactions, in this case offline transactions tendered by card \n(credit or debit). BIN records are imported via request content then distributed to applicable POS terminals to enable automatic acceptance/rejection \nof tendered cards if transaction server (TS) goes offline and the the tendered card is referenced in the BIN Lookup. \nThe process is enabled at the terminal-level and above by Advanced Setting in WebOffice:\n\n> KEY = com.ecrsoft.tserver.control.useImportedBinOverride \\\n> VALUE = true\n\nThis has been effectively replaced by the **Secure Store & Forward (SaF)** process, however the endpoint is still maintained as a secure\nand viable option. Note the BIN Lookup table is rebuilt in the database with every post of the endpoint procedure (data submitted in a request \nwill overwrite/replace any existing list of BIN Lookup records), so individual entries can't be inserted or sequentally added to an existing list.</font> \n \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=283\">Secure Store & Forward</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of BIN Lookup Overrides to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-binLookupOverride"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-binLookupOverride"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-binLookupOverride"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-binLookupOverrides",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/binLookupOverrides?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"min\":\"string\",\"max\":\"string\",\"type\":0}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/binLookupOverrides?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"min\\\":\\\"string\\\",\\\"max\\\":\\\"string\\\",\\\"type\\\":0}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/binLookupOverrides?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"min\\\":\\\"string\\\",\\\"max\\\":\\\"string\\\",\\\"type\\\":0}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/binLookupOverrides',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [{min: 'string', max: 'string', type: 0}]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/checkFile": {
      "post": {
        "summary": "Batch Check File",
        "description": "<font color=\"#2774B8\">The Check File endpoint is the second of two endpoints provided to assist with offline transactions, in this case transactions tendered by check.\nCheck information is imported, encrypted, then distributed to applicable POS terminals to enable automatic acceptance/rejection of tendered checks \nif the terminal goes offline and the tendered check information is listed in the Check File table. \nThe process is enabled at the terminal-level and above by Advanced Setting in WebOffice (the same Advanced Setting as BIN Lookup Override):\n\n> KEY = com.ecrsoft.tserver.control.useImportedBinOverride \\\n> VALUE = true\n\nThis has been effectively replaced by the **Secure Store & Forward (SaF)** process, however the endpoint is still maintained as a secure\nand viable option. Note the Check File table is rebuilt in the database with every post of the endpoint procedure (data submitted in a request \nwill overwrite/replace any existing list of Check File records), so individual entries can't be inserted or sequentally added to an existing list.</font>\n \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=283\">Secure Store & Forward</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Check File records to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-checkFile"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-checkFile"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-checkFile"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-checkFile",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/checkFile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"routingNumber\":\"string\",\"accountNumber\":\"string\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/checkFile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"routingNumber\\\":\\\"string\\\",\\\"accountNumber\\\":\\\"string\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/checkFile?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"routingNumber\\\":\\\"string\\\",\\\"accountNumber\\\":\\\"string\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/checkFile',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [{routingNumber: 'string', accountNumber: 'string'}]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/removePriceCost": {
      "post": {
        "summary": "Batch Remove Temporary Price Change",
        "description": "<font color=\"#2774B8\">The Remove Temporary Price Change endpoint allows you to delete any non-permanent Price & Cost Change Worksheets,\nincluding those temporary worksheets created by the Batch Item Price Cost endpoint. Only entering the name will remove\nall applicable temporary worksheets with a matching name, regardless of dates. Specify the startDate and endDate \nparameters as needed to narrow the scope of the removal.</font>\n \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1841\">Price & Cost Change (P&CC) Worksheets</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of Temporary Price Changes to Remove",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-removePriceCost"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-removePriceCost"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/batch-removePriceCost"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-removePriceCost",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/removePriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"name\":\"string\",\"startDate\":\"2019-08-24T14:15:22Z\",\"endDate\":\"2019-08-24T14:15:22Z\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/removePriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"name\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"endDate\\\":\\\"2019-08-24T14:15:22Z\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/removePriceCost?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"name\\\":\\\"string\\\",\\\"startDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"endDate\\\":\\\"2019-08-24T14:15:22Z\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/removePriceCost',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      name: 'string',\n      startDate: '2019-08-24T14:15:22Z',\n      endDate: '2019-08-24T14:15:22Z'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/CatalogCostItem": {
      "post": {
        "summary": "Batch Item Catalog Cost (Item)",
        "description": "<font color=\"#2774B8\">The Catalog Cost (Item) endpoint is used to post supplier catalog cost updates to your inventory.\nIt is one of two endpoints available for this task: here the **Item ID (UPC scancode)** is used to refine the operational scope and direct which inventory maintenance records receive the cost modifications.\nEach row in this batch operation represents one such inventory record to update. \n    \nIt's recommended to use a unique batch number for each store and/or supplier:\nin this way you more easily reference importMessages for those store- or supplier-specific changes using the unique batch number.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=679\">Importing Supplier Catalogs</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=20828\">View & Modify Catalog Cost</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of item catalog costs to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "itemId",
                    "storeId",
                    "supplierId",
                    "catalogCost"
                  ],
                  "properties": {
                    "itemId": {
                      "type": "string",
                      "maxLength": 14,
                      "description": "The Item ID (UPC scancode) of the recipient inventory record. \nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>.",
                      "example": "774200055"
                    },
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Store Number where the item is located and where the cost will update.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "HQ"
                    },
                    "supplierId": {
                      "type": "string",
                      "maxlength": 10,
                      "description": "The unique supplier identification code to verify recipient catalog.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>.",
                      "example": "59913"
                    },
                    "catalogCost": {
                      "type": "string",
                      "format": "decimal(16,4)",
                      "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=catalog-cost\">Catalog Cost</a>.",
                      "example": "4.77"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "itemId",
                    "storeId",
                    "supplierId",
                    "catalogCost"
                  ],
                  "properties": {
                    "itemId": {
                      "type": "string",
                      "maxLength": 14,
                      "description": "The Item ID (UPC scancode) of the recipient inventory record. \nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>.",
                      "example": "774200055"
                    },
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Store Number where the item is located and where the cost will update.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "HQ"
                    },
                    "supplierId": {
                      "type": "string",
                      "maxlength": 10,
                      "description": "The unique supplier identification code to verify recipient catalog.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>.",
                      "example": "59913"
                    },
                    "catalogCost": {
                      "type": "string",
                      "format": "decimal(16,4)",
                      "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=catalog-cost\">Catalog Cost</a>.",
                      "example": "4.77"
                    }
                  }
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "<root> <row itemId=\"774200055\" storeId=\"HQ\" supplierId=\"59913\" catalogCost=\"4.77\" /> </root>"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "itemId",
                    "storeId",
                    "supplierId",
                    "catalogCost"
                  ],
                  "properties": {
                    "itemId": {
                      "type": "string",
                      "maxLength": 14,
                      "description": "The Item ID (UPC scancode) of the recipient inventory record. \nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>.",
                      "example": "774200055"
                    },
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Store Number where the item is located and where the cost will update.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "HQ"
                    },
                    "supplierId": {
                      "type": "string",
                      "maxlength": 10,
                      "description": "The unique supplier identification code to verify recipient catalog.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>.",
                      "example": "59913"
                    },
                    "catalogCost": {
                      "type": "string",
                      "format": "decimal(16,4)",
                      "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=catalog-cost\">Catalog Cost</a>.",
                      "example": "4.77"
                    }
                  }
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "'itemId','storeId','supplierId','catalogCost' \n'774200055','HQ','59913','4.77'"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-catalogCost-item",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/CatalogCostItem?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"itemId\":\"774200055\",\"storeId\":\"HQ\",\"supplierId\":\"59913\",\"catalogCost\":\"4.77\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/CatalogCostItem?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"itemId\\\":\\\"774200055\\\",\\\"storeId\\\":\\\"HQ\\\",\\\"supplierId\\\":\\\"59913\\\",\\\"catalogCost\\\":\\\"4.77\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/CatalogCostItem?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"itemId\\\":\\\"774200055\\\",\\\"storeId\\\":\\\"HQ\\\",\\\"supplierId\\\":\\\"59913\\\",\\\"catalogCost\\\":\\\"4.77\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/CatalogCostItem',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [{itemId: '774200055', storeId: 'HQ', supplierId: '59913', catalogCost: '4.77'}]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/CatalogCostSUID": {
      "post": {
        "summary": "Batch Item Catalog Cost (SUID)",
        "description": "<font color=\"#2774B8\">The Catalog Cost (SUID) endpoint is used to post supplier catalog cost updates to your inventory.\nIt is one of two endpoints available for this task: here the **Supplier Unit ID (SUID)** is used to refine the operational scope and direct which inventory maintenance records receive the cost modifications.\nEach row in this batch operation represents one such inventory record to update. \n    \nIt's recommended to use a unique batch number for each store and/or supplier:\nin this way you can more reasily reference importMessages for those store- or supplier-specific changes with the unique batch number.</font>\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=679\">Importing Supplier Catalogs</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=20828\">View & Modify Catalog Cost</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of item catalog costs to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "importType",
                    "storeId",
                    "supplierId",
                    "supplierUnitId"
                  ],
                  "properties": {
                    "importType": {
                      "type": "string",
                      "maxLength": 1,
                      "enum": [
                        "P",
                        "T"
                      ],
                      "description": "**P** - Permanent \\\n**T** - Temporary \\\nDefines the type of cost change. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=679#CostChangeType\">Supplier Import Formats</a>.",
                      "example": "P"
                    },
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Specify the store where the catalog cost change will take effect.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "HQ"
                    },
                    "supplierId": {
                      "type": "string",
                      "maxlength": 10,
                      "description": "The unique supplier identification code to verify recipient SUID and catalog.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>.",
                      "example": "59913"
                    },
                    "supplierUnitId": {
                      "type": "string",
                      "maxlength": 16,
                      "description": "Supplier-specific item code to verify which inventory record receives the cost change.\nSee also: <a href=\"https://olm.ecrs.com/gateway/?page_id=21\">Supplier Unit ID</a>.",
                      "example": "5991377055"
                    },
                    "catalogCost": {
                      "type": "string",
                      "format": "decimal(16,4)",
                      "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=catalog-cost\">Catalog Cost</a>.",
                      "example": "4.77"
                    },
                    "allowance": {
                      "type": "string",
                      "format": "decimal(16,4)"
                    },
                    "stacked": {
                      "type": "string",
                      "maxLength": 1,
                      "enum": [
                        "A",
                        "R"
                      ],
                      "description": "**A** - Additive \\\n**R** - Replacement \\\nRequired when <code>importType = T</code>. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#stacked\">Stacked</a>. "
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Format yyyy-mm-dd. \\\nRequired when <code>importType = T</code>.  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#startdate\">Start Date (Supplier)</a>.  "
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Format yyyy-mm-dd. \\\nRequired when <code>importType = T</code>.  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#enddate\">End Date (Supplier)</a>.  "
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "importType",
                    "storeId",
                    "supplierId",
                    "supplierUnitId"
                  ],
                  "properties": {
                    "importType": {
                      "type": "string",
                      "maxLength": 1,
                      "enum": [
                        "P",
                        "T"
                      ],
                      "description": "**P** - Permanent \\\n**T** - Temporary \\\nDefines the type of cost change. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=679#CostChangeType\">Supplier Import Formats</a>.",
                      "example": "P"
                    },
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Specify the store where the catalog cost change will take effect.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "HQ"
                    },
                    "supplierId": {
                      "type": "string",
                      "maxlength": 10,
                      "description": "The unique supplier identification code to verify recipient SUID and catalog.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>.",
                      "example": "59913"
                    },
                    "supplierUnitId": {
                      "type": "string",
                      "maxlength": 16,
                      "description": "Supplier-specific item code to verify which inventory record receives the cost change.\nSee also: <a href=\"https://olm.ecrs.com/gateway/?page_id=21\">Supplier Unit ID</a>.",
                      "example": "5991377055"
                    },
                    "catalogCost": {
                      "type": "string",
                      "format": "decimal(16,4)",
                      "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=catalog-cost\">Catalog Cost</a>.",
                      "example": "4.77"
                    },
                    "allowance": {
                      "type": "string",
                      "format": "decimal(16,4)"
                    },
                    "stacked": {
                      "type": "string",
                      "maxLength": 1,
                      "enum": [
                        "A",
                        "R"
                      ],
                      "description": "**A** - Additive \\\n**R** - Replacement \\\nRequired when <code>importType = T</code>. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#stacked\">Stacked</a>. "
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Format yyyy-mm-dd. \\\nRequired when <code>importType = T</code>.  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#startdate\">Start Date (Supplier)</a>.  "
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Format yyyy-mm-dd. \\\nRequired when <code>importType = T</code>.  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#enddate\">End Date (Supplier)</a>.  "
                    }
                  }
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "<root> <row importType=\"P\" storeId=\"HQ\" supplierId=\"59913\" supplierUnitId=\"5991377055\" catalogCost=\"4.77\" allowance=\"\" stacked=\"\" startDate=\"\" endDate=\"\" /> </root>"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "importType",
                    "storeId",
                    "supplierId",
                    "supplierUnitId"
                  ],
                  "properties": {
                    "importType": {
                      "type": "string",
                      "maxLength": 1,
                      "enum": [
                        "P",
                        "T"
                      ],
                      "description": "**P** - Permanent \\\n**T** - Temporary \\\nDefines the type of cost change. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=679#CostChangeType\">Supplier Import Formats</a>.",
                      "example": "P"
                    },
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "Specify the store where the catalog cost change will take effect.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "HQ"
                    },
                    "supplierId": {
                      "type": "string",
                      "maxlength": 10,
                      "description": "The unique supplier identification code to verify recipient SUID and catalog.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>.",
                      "example": 59913
                    },
                    "supplierUnitId": {
                      "type": "string",
                      "maxlength": 16,
                      "description": "Supplier-specific item code to verify which inventory record receives the cost change.\nSee also: <a href=\"https://olm.ecrs.com/gateway/?page_id=21\">Supplier Unit ID</a>.",
                      "example": 5991377055
                    },
                    "catalogCost": {
                      "type": "string",
                      "format": "decimal(16,4)",
                      "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=catalog-cost\">Catalog Cost</a>.",
                      "example": 4.77
                    },
                    "allowance": {
                      "type": "string",
                      "format": "decimal(16,4)"
                    },
                    "stacked": {
                      "type": "string",
                      "maxLength": 1,
                      "enum": [
                        "A",
                        "R"
                      ],
                      "description": "**A** - Additive \\\n**R** - Replacement \\\nRequired when <code>importType = T</code>. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#stacked\">Stacked</a>. "
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Format yyyy-mm-dd. \\\nRequired when <code>importType = T</code>.  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#startdate\">Start Date (Supplier)</a>.  "
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Format yyyy-mm-dd. \\\nRequired when <code>importType = T</code>.  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#enddate\">End Date (Supplier)</a>.  "
                    }
                  }
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "'importType','storeId','supplierId','supplierUnitId','catalogCost','allowance','stacked','startDate','endDate'\n'P','774200055','HQ','59913','5991377055','4.77','','','',''"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-catalogCost-suid",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/CatalogCostSUID?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"importType\":\"P\",\"storeId\":\"HQ\",\"supplierId\":\"59913\",\"supplierUnitId\":\"5991377055\",\"catalogCost\":\"4.77\",\"allowance\":\"string\",\"stacked\":\"A\",\"startDate\":\"2019-08-24\",\"endDate\":\"2019-08-24\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/CatalogCostSUID?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"importType\\\":\\\"P\\\",\\\"storeId\\\":\\\"HQ\\\",\\\"supplierId\\\":\\\"59913\\\",\\\"supplierUnitId\\\":\\\"5991377055\\\",\\\"catalogCost\\\":\\\"4.77\\\",\\\"allowance\\\":\\\"string\\\",\\\"stacked\\\":\\\"A\\\",\\\"startDate\\\":\\\"2019-08-24\\\",\\\"endDate\\\":\\\"2019-08-24\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/CatalogCostSUID?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"importType\\\":\\\"P\\\",\\\"storeId\\\":\\\"HQ\\\",\\\"supplierId\\\":\\\"59913\\\",\\\"supplierUnitId\\\":\\\"5991377055\\\",\\\"catalogCost\\\":\\\"4.77\\\",\\\"allowance\\\":\\\"string\\\",\\\"stacked\\\":\\\"A\\\",\\\"startDate\\\":\\\"2019-08-24\\\",\\\"endDate\\\":\\\"2019-08-24\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/CatalogCostSUID',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      importType: 'P',\n      storeId: 'HQ',\n      supplierId: '59913',\n      supplierUnitId: '5991377055',\n      catalogCost: '4.77',\n      allowance: 'string',\n      stacked: 'A',\n      startDate: '2019-08-24',\n      endDate: '2019-08-24'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/shelfInformation": {
      "post": {
        "summary": "Batch Item Shelf Information",
        "description": "<font color=\"#2774B8\">The Item Shelf Information endpoint is used to post inventory-record-per-store updates to your inventory shelf information. Up to nine (9) digits, spread across three (3) parameters, can be used to define the exact shelf sequnce for a given record. \nEach row in this batch defines the sequence for one such record: it's recommended to use a unique batch number for each store.\nThis way you can easily adjust multiple inventory records for a single store location, then call importMessages for those store-specific changes using the unique batch number.\nNote the full sequence number of an inventory record's shelf location sequence will be the combined three sequence parts from the query parameters:\nleading zeroes will be automatically included, where necessary, to ensure each sequence is nine (9) digits.</font>\n\n> For example, a complete shelf sequence of <code>001002003</code> would be entered in the parameters as: \\\n> sequencePart1 = <code>001</code> \\\n> sequencePart2 = <code>002</code> \\\n> sequencePart3 = <code>003</code> \n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#shelf-information-tab\">Inventory Maintenance Shelf Information</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=16668\">Item Shelf Sequence in HHT</a>.\n\n*Batch processing status and log can be viewed by calling the /batch/importMessages endpoint.*",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "requestBody": {
          "description": "List of item shelf information, sequence data to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "storeId",
                    "itemId",
                    "sequencePart1",
                    "sequencePart2",
                    "sequencePart3"
                  ],
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "This field accepts the Store Number where the item whose sequence will be updated is located.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "RS07"
                    },
                    "itemId": {
                      "type": "string",
                      "maxLength": 14,
                      "description": "This field accepts a the Item ID (UPC scancode) of the item record which will be updated. \nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>.",
                      "example": 774200035
                    },
                    "sequencePart1": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "First three digits of the shelf location sequence. Numbers only.",
                      "example": "001"
                    },
                    "sequencePart2": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "Second three digits of the shelf location sequence. Numbers only.",
                      "example": "002"
                    },
                    "sequencePart3": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "Final three digits of the shelf location sequence. Numbers only.",
                      "example": "003"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "storeId",
                    "itemId",
                    "sequencePart1",
                    "sequencePart2",
                    "sequencePart3"
                  ],
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "This field accepts the Store Number where the item whose sequence will be updated is located.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "RS07"
                    },
                    "itemId": {
                      "type": "string",
                      "maxLength": 14,
                      "description": "This field accepts a the Item ID (UPC scancode) of the item record which will be updated. \nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>.",
                      "example": 774200035
                    },
                    "sequencePart1": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "First three digits of the shelf location sequence. Numbers only.",
                      "example": "001"
                    },
                    "sequencePart2": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "Second three digits of the shelf location sequence. Numbers only.",
                      "example": "002"
                    },
                    "sequencePart3": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "Final three digits of the shelf location sequence. Numbers only.",
                      "example": "003"
                    }
                  }
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "<root> <row storeId=\"RS07\" itemId=\"774200035\" sequencePart1=\"001\" sequencePart2=\"002\" sequencePart3=\"003\" /> </root>"
                }
              }
            },
            "text/csv": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "storeId",
                    "itemId",
                    "sequencePart1",
                    "sequencePart2",
                    "sequencePart3"
                  ],
                  "properties": {
                    "storeId": {
                      "type": "string",
                      "maxLength": 10,
                      "description": "This field accepts the Store Number where the item whose sequence will be updated is located.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>.",
                      "example": "RS07"
                    },
                    "itemId": {
                      "type": "string",
                      "maxLength": 14,
                      "description": "This field accepts a the Item ID (UPC scancode) of the item record which will be updated. \nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>.",
                      "example": 774200035
                    },
                    "sequencePart1": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "First three digits of the shelf location sequence. Numbers only.",
                      "example": "001"
                    },
                    "sequencePart2": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "Second three digits of the shelf location sequence. Numbers only.",
                      "example": "002"
                    },
                    "sequencePart3": {
                      "type": "string",
                      "maxlength": 3,
                      "description": "Final three digits of the shelf location sequence. Numbers only.",
                      "example": "003"
                    }
                  }
                }
              },
              "examples": {
                "Simple Update": {
                  "value": "'storeId','itemId','sequencePart1','sequencePart2','sequencePart3' \n'RS07','774200035','001,'002','003'"
                }
              }
            }
          }
        },
        "responses": {},
        "operationId": "post-batch-shelfInformation",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/shelfInformation?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"storeId\":\"RS07\",\"itemId\":774200035,\"sequencePart1\":\"001\",\"sequencePart2\":\"002\",\"sequencePart3\":\"003\"}]'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/shelfInformation?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .header(\"content-type\", \"application/json\")\n    .method(\"POST\", HttpRequest.BodyPublishers.ofString(\"[{\\\"storeId\\\":\\\"RS07\\\",\\\"itemId\\\":774200035,\\\"sequencePart1\\\":\\\"001\\\",\\\"sequencePart2\\\":\\\"002\\\",\\\"sequencePart3\\\":\\\"003\\\"}]\"))\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/shelfInformation?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\tpayload := strings.NewReader(\"[{\\\"storeId\\\":\\\"RS07\\\",\\\"itemId\\\":774200035,\\\"sequencePart1\\\":\\\"001\\\",\\\"sequencePart2\\\":\\\"002\\\",\\\"sequencePart3\\\":\\\"003\\\"}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'POST',\n  url: 'https://accountid.catapultweboffice.com/api/batch/shelfInformation',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'},\n  headers: {'content-type': 'application/json'},\n  data: [\n    {\n      storeId: 'RS07',\n      itemId: 774200035,\n      sequencePart1: '001',\n      sequencePart2: '002',\n      sequencePart3: '003'\n    }\n  ]\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    },
    "/batch/importMessages": {
      "get": {
        "summary": "Batch Import Messages",
        "description": "The Import Messages endpoint is provided to for logging purposes. Every individual action taken by a batch loading operation, down to the \nparticular line item event, is recorded here (one action/event per row). Use it to retrieve the message log for any previously executed 'batch' operation.\nResponse metrics include, but are not limited to, the date (message_time), type (information or error), and message content (message_text). \nBatch number (batchId) is required for the request parameters.",
        "parameters": [
          {
            "schema": null,
            "$ref": "#/components/parameters/0"
          },
          {
            "schema": null,
            "$ref": "#/components/parameters/1"
          }
        ],
        "tags": [
          "Batch Updates"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batch-importMessage"
                  }
                },
                "examples": {
                  "basic": {
                    "value": [
                      {
                        "messageTime": "2022-02-04 19:50:36.852",
                        "batchType": "batch_ItemMaintenance",
                        "messageType": "I",
                        "messageText": "Processing ItemMaintenance with 1 records"
                      },
                      {
                        "messageTime": "2022-02-04 19:50:36.955",
                        "batchType": "batch_ItemMaintenance",
                        "messageType": "I",
                        "messageText": "Processed ItemMaintenance 1 records | FAILED 0 records"
                      },
                      {
                        "messageTime": "2022-02-04 19:50:37.012",
                        "batchType": "batch_ItemMaintenance",
                        "messageType": "I",
                        "messageText": "Processed ItemMaintenance 1 records"
                      },
                      {
                        "messageTime": "2022-02-04 19:50:37.014",
                        "batchType": "batch_ItemMaintenance",
                        "messageType": "E",
                        "messageText": "RAISERROR executed: Invalid Item Hierarchy\n",
                        "detail": "Action:U Item Id: 8303 Dept Number: 400 Dept Name: NULL Name: NULL Receipt Alias: NULL Brand: NULL Size: NULL Prompt List:NULL Discount List:NULL Suggested Retail: NULL Link Item Group:NULL Pf1: NULL Pf2: NULL Pf3: NULL Pf4: NULL Pf5: NULL Pf6: NULL Pf7: NULL Pf8: NULL Memo: NULL Non-Returnable: NULL Embedded Price As Unit: NULL Country of Origin: NULL SubDepartment Number: 526 Category Number: NULL SubCategory Number: NULL Variety Number: NULL"
                      },
                      {
                        "messageTime": "2022-02-04 19:50:37.018",
                        "batchType": "batch_ItemMaintenance",
                        "messageType": "I",
                        "messageText": "Processed ItemMaintenance 1 records | FAILED 1 records"
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batch-importMessage"
                  }
                },
                "examples": {
                  "basic": {
                    "value": "<root> <row messageTime=\"2022-02-04 19:50:36.852\" batchType=\"batch_ItemMaintenance\" messageType=\"I\" messageText=\"Processing ItemMaintenance with 1 records\"/> <row messageTime=\"2022-02-04 19:50:36.955\" batchType=\"batch_ItemMaintenance\" messageType=\"I\" messageText=\"Processed ItemMaintenance 1 records | FAILED 0 records\"/> <row messageTime=\"2022-02-04 19:50:37.012\" batchType=\"batch_ItemMaintenance\" messageType=\"I\" messageText=\"Processing ItemMaintenance with 1 records\"/> <row messageTime=\"2022-02-04 19:50:37.014\" batchType=\"batch_ItemMaintenance\" messageType=\"E\" messageText=\"RAISERROR executed Invalid Item Hierarchy\\n\" detail=\"Action:U Item Id:8303 Dept Number:400 Dept Name:NULL Name:NULL Receipt Alias:NULL Brand:NULL Size:NULL Prompt List:NULL Discount List:NULL Suggested Retail:NULL Link Item Group:NULL Pf1:NULL Pf2:NULL Pf3:NULL Pf4:NULL Pf5:NULL Pf6:NULL Pf7:NULL Pf8:NULL Memo:NULL Non-Returnable:NULL Embedded Price As Unit:NULL Country of Origin:NULL SubDepartment Number:526 Category Number:NULL SubCategory Number:NULL Variety Number:NULL\"/> <row messageTime=\"2022-02-04 19:50:37.018\" batchType=\"batch_ItemMaintenance\" messageType=\"I\" messageText=\"Processed ItemMaintenance 1 records | FAILED 1 records\"/> <row </root>"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batch-importMessage"
                  }
                },
                "examples": {
                  "basic": {
                    "value": "'messageTime','batchType','messageType','messageText','detail'\n'2022-02-04 19:50:36.852','batch_ItemMaintenance','I','Processing ItemMaintenance with 1 records'\n'2022-02-04 19:50:36.955','batch_ItemMaintenance','I','Processed ItemMaintenance 1 records | FAILED 0 records'\n'2022-02-04 19:50:37.012','batch_ItemMaintenance','I','Processed ItemMaintenance with 1 records'\n'2022-02-04 19:50:37.014','batch_ItemMaintenance','E','RAISERROR executed: Invalid Item Hierarchy\\n','Action:U Item Id:8303 Dept Number:400 Dept Name:NULL Name:NULL Receipt Alias:NULL Brand:NULL Size:NULL Prompt List:NULL Discount List:NULL Suggested Retail:NULL Link Item Group:NULL Pf1:NULL Pf2:NULL Pf3:NULL Pf4:NULL Pf5:NULL Pf6:NULL Pf7:NULL Pf8:NULL Memo:NULL Non-Returnable:NULL Embedded Price As Unit:NULL Country of Origin:NULL SubDepartment Number:526 Category Number:NULL SubCategory Number:NULL Variety Number:NULL'\n'2022-02-04 19:50:37.018','batch_ItemMaintenance','I','Processed ItemMaintenance 1 records | FAILED 1 records'"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-batch-importMessages",
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://accountid.catapultweboffice.com/api/batch/importMessages?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123'"
          },
          {
            "lang": "Java + Nethttp",
            "source": "HttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://accountid.catapultweboffice.com/api/batch/importMessages?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"))\n    .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n    .build();\nHttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\nSystem.out.println(response.body());"
          },
          {
            "lang": "Go + Native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://accountid.catapultweboffice.com/api/batch/importMessages?apikey=BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0&batch=123\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Javascript + Axios",
            "source": "import axios from \"axios\";\n\nconst options = {\n  method: 'GET',\n  url: 'https://accountid.catapultweboffice.com/api/batch/importMessages',\n  params: {apikey: 'BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0', batch: '123'}\n};\n\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Employee API Key in Header": {
        "type": "apiKey",
        "in": "header",
        "name": "X-ECRS-APIKEY",
        "description": "In order to utilize any passport API methods, an API Key needs to be assigned to an Employee\nthrough Web Office. API Keys provide access to CATAPULT API programs, and allow employees to move\ndata in and out of CATAPULT. Select **+Create New** and Web Office will automatically create a new API\nKey for this Employee Record.\n\n**Warning:** Because API Keys do not replicate between stores, additional API Keys must be manually added on Employee maintenance records at Remote Stores. \nDoing so is optional, but necessary if you wish to enable authentication for select endpoints to be called from the Remote Store Web Office URI."
      },
      "Employee API Key in Query": {
        "type": "apiKey",
        "in": "query",
        "name": "apiKey",
        "description": "For backwards compatibility many Passport API methods continue to allow the API key to be included within the query string as \"?apiKey=ABCDE\". \nHowever, using this method of providing the API key is discouraged.  While query parameters are secured during transport, it is not uncommon for \nclients, servers, or some routers to log query parameters. This can result in unintentional disclosure of the API key.\n\nAs an alternative, include the API key in the X-ECRS-APIKEY request header whenever possible."
      }
    },
    "parameters": {
      "0": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "apikey",
        "description": "This field requires a valid API Key for an active Employee in CATAPULT Web Office. Required unless using the <a href=\"#section/Authentication\">X-ECRS-APIKEY header</a>.",
        "example": "BP82MIFJTSJ5EP4MQCBDW7WYYVV0RPQ0"
      },
      "1": {
        "schema": {
          "type": "integer"
        },
        "in": "query",
        "name": "batch",
        "required": true,
        "description": "A unique identifier used to define related objects in a batch operation.",
        "example": 123
      }
    },
    "schemas": {
      "customers": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "example": "Play",
            "description": "Customer last name."
          },
          "firstName": {
            "type": "string",
            "example": "Kidd",
            "description": "Customer first name."
          },
          "middleName": {
            "type": "string",
            "example": "N",
            "description": "Customer middle name, if availabe."
          },
          "nickName": {
            "type": "string",
            "example": "",
            "description": "Customer nick-name, if availabe."
          },
          "memo": {
            "type": "string",
            "example": "",
            "description": "The memo recorded for the customer record."
          },
          "powerField1": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 1 for the customer."
          },
          "powerField2": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 2 for the customer."
          },
          "powerField3": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 3 for the customer."
          },
          "powerField4": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 4 for the customer."
          },
          "powerField5": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 5 for the customer."
          },
          "powerField6": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 6 for the customer."
          },
          "powerField7": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 7 for the customer."
          },
          "powerField8": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 8 for the customer."
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "example": "",
            "description": "The customer birthdate in <code>YYYY-MM-DD</code> format."
          },
          "lastModified": {
            "type": "string",
            "format": "date",
            "example": "",
            "description": "The last modified date of the customer record, in <code>YYYY-MM-DD HH:MM:SS.sss</code> format."
          },
          "membershipAccount": {
            "type": "string",
            "description": "The customer membership account ID, if applicable."
          },
          "checkAcceptanceProfile": {
            "type": "string",
            "description": "The name of the check acceptance profile assigned to this customer."
          },
          "priceLevel": {
            "type": "string",
            "description": "The name of any custom price level assigned to this customer."
          },
          "automaticDiscount": {
            "type": "string",
            "description": "The name of the automatic discount assigned to this customer."
          },
          "suppressReceipt": {
            "type": "boolean",
            "description": "If <code>true</code> then receipts are not automatically printed."
          },
          "loyaltyEnabled": {
            "type": "boolean",
            "description": "If <code>true</code> then the default loyalty program is enabled for this customer."
          },
          "loyaltyAccrualMultiplier": {
            "type": "number",
            "format": "double",
            "description": "The loyalty multiplier for customer's default loyalty program, if set."
          },
          "suffix": {
            "type": "string",
            "description": "The suffix for this customer.",
            "example": "Jr."
          },
          "prefix": {
            "type": "string",
            "description": "The prefix for this customer.",
            "example": "The"
          },
          "title": {
            "type": "string",
            "description": "The title of this customer.",
            "example": "Major General, Modern"
          },
          "company": {
            "type": "string",
            "description": "The company for this customer."
          },
          "checkFileMemo": {
            "type": "string",
            "description": "Any check file memo associated with this customer."
          },
          "billToPhoneNumber": {
            "type": "string",
            "description": "The bill-to phone number for this customer."
          },
          "billToPhoneDescription": {
            "type": "string",
            "description": "The description for the bill-to phone number for this customer.",
            "example": "Home"
          },
          "billToEmailAddress": {
            "type": "string",
            "description": "The bill-to email address for this customer."
          },
          "billToEmailDescription": {
            "type": "string",
            "description": "The description of the bill-to email address for this customer."
          },
          "billToEmailMarketing": {
            "type": "boolean",
            "description": "If <code>true</code> then the bill-to email address is allowed to receive marketing materials."
          },
          "billToEmailReceipt": {
            "type": "boolean",
            "description": "If <code>true</code> then the bill-to email address is set to receive eReceipts for this customers purchases."
          },
          "billToAddressLine1": {
            "type": "string",
            "description": "The first line of the bill-to address for this customer."
          },
          "billToAddressLine2": {
            "type": "string",
            "description": "The second line of the bill-to address for this customer."
          },
          "billToAddressCity": {
            "type": "string",
            "description": "The city of this customers bill-to address."
          },
          "billToAddressStateProv": {
            "type": "string",
            "description": "The state or province of this customer's bill-to address."
          },
          "billToAddressPostalCode": {
            "type": "string",
            "description": "The postal code of this customer's bill-to address."
          },
          "billToAddressDescription": {
            "type": "string",
            "description": "The description of this customer's bill-to address."
          },
          "membershipAccountJoined": {
            "type": "string"
          },
          "hideInLookup": {
            "type": "boolean",
            "description": "If <code>true</code> then this customer will not show up in lookup dialogs."
          },
          "customerInactive": {
            "type": "boolean",
            "description": "If <code>true</code> then this customer is marked as inactive."
          },
          "loyaltyBalances": {
            "type": "string",
            "description": "The dollar value of this customer's current loyalty points balance. If the customer is a member of a Household, this will be the combined sum of all associated household members' loyalty balances, regardless of the customer's \"Redeem Household Loyalty\" eligiblity setting. Multiple loyalty program balances will be separated with the pipe | character.",
            "example": "Default Program=.0200|Program A=0.0000|Program B=0.0000"
          },
          "HeadOfHousehold": {
            "type": "string",
            "description": "The ID of this customer's head of household, if it is a member of another household."
          },
          "HouseholdAccounts": {
            "type": "string",
            "example": "9636646\\2630300",
            "description": "If this customer is the head of household for multiple accounts, then this field contains\na group-seperated hex <code>0x1D</code> delimited list of all the household member accounts."
          },
          "Dependents": {
            "type": "string",
            "example": "Friend\\John\\2022-01-05\\Pet\\William\\",
            "description": "If this customer has any dependents, then this field contains a group-seperated hex <code>0x1D</code>, \ndelimited list of all dependents.\n  \nEach dependent record is made of three fields partitioned by a Record Seperator <code>0x1E</code>: \n* Relation \n* Name \n* Date in <code>YYYY-MM-DD</code> format\n\nRepeat the three-field pattern as-needed to include multiple dependents for the customer."
          },
          "lastPurchaseStore": {
            "type": "string",
            "description": "The name of the last store from which this customer made a purchase. Read-only."
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "The name of the last date at which this customer made a purchase. Read-only."
          },
          "membershipProfileName": {
            "type": "string",
            "description": "The name of this customers membership profile. Read-only."
          },
          "taxExemption": {
            "type": "string",
            "description": "The name of the <code>Tax</code> that the customer is exempt from. The records for each <code>Tax</code> are managed in CATAPULT Web Office."
          },
          "DateCreated": {
            "type": "string",
            "description": "Available with CATAPULT 5.6.101 or newer, displays the date and time - in <code>YYY-MM-DD 00:00:00.000</code> format - at which the customer record was created. Note that this creation could occur from CATAPULT Web Office or through API action, and any customer record added *before* this column was added to the CATAPULT database will return a <code>DateCreated</code> value of 1900-01-01."
          },
          "HomeStore": {
            "type": "string",
            "description": "The Home Store currently associated with this Customer."
          }
        }
      },
      "itemDetail": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "example": "123",
            "description": "Item Id / scan code"
          },
          "receiptAlias": {
            "type": "string",
            "example": "Gala Apple",
            "description": "Item receipt alias"
          },
          "itemName": {
            "type": "string",
            "example": "Gala Apple",
            "description": "Item name"
          },
          "department": {
            "type": "string",
            "example": "Produce",
            "description": "Department the item is assigned to"
          },
          "subDepartment": {
            "type": "string",
            "example": "Fresh Fruit",
            "description": "SubDepartment the item is assigned to"
          },
          "category": {
            "type": "string",
            "example": "Domestic",
            "description": "Category the item is assigned to"
          },
          "subCategory": {
            "type": "string",
            "example": "Bagged",
            "description": "SubCategory the item is assigned to"
          },
          "variety": {
            "type": "string",
            "example": "Gala",
            "description": "Variety the item is assigned to"
          },
          "size": {
            "type": "string",
            "example": "1 lb.",
            "description": "Size of the item"
          },
          "brand": {
            "type": "string",
            "example": "Biomac",
            "description": "Brand of the item"
          },
          "loyaltyMultiplier": {
            "type": "number",
            "example": "1.5",
            "format": "double",
            "description": "The loyalty multiplier for the default loyalty program for this customer"
          },
          "shelfLocation": {
            "type": "string",
            "example": "11",
            "description": "Shelf Location of the item"
          },
          "shelfSequence": {
            "type": "string",
            "example": "2",
            "description": "Shelf Sequence of the item"
          },
          "pricePL1": {
            "type": "number",
            "example": "1.11",
            "format": "double",
            "description": "Base Price of the item at Price Level 1"
          },
          "priceDividerPL1": {
            "type": "number",
            "format": "double",
            "description": "Price Divider for Price Level 1"
          },
          "pricePL2": {
            "type": "number",
            "example": "1.12",
            "format": "double",
            "description": "Base Price of the item at Price Level 2"
          },
          "priceDividerPL2": {
            "type": "number",
            "format": "double",
            "description": "Price Divider for Price Level 2"
          },
          "pricePL3": {
            "type": "number",
            "example": "1.13",
            "format": "double",
            "description": "Base Price of the item at Price Level 3"
          },
          "priceDividerPL3": {
            "type": "number",
            "format": "double",
            "description": "Price Divider for Price Level 3"
          },
          "pricePL4": {
            "type": "number",
            "example": "1.14",
            "format": "double",
            "description": "Base Price of the item at Price Level 4"
          },
          "priceDividerPL4": {
            "type": "number",
            "format": "double",
            "description": "Price Divider for Price Level 4"
          },
          "promoPricePL1": {
            "type": "number",
            "example": "1.01",
            "format": "double",
            "description": "Promotional Price of the item at Price Level 1, only returned if item is listed in active promotion worksheet"
          },
          "promoPriceDividerPL1": {
            "type": "number",
            "format": "double",
            "description": "Promotional Price Divider for Price Level 1, only returned if item is listed in active promotion worksheet"
          },
          "promoPricePL2": {
            "type": "number",
            "example": "1.02",
            "format": "double",
            "description": "Promotional Price of the item at Price Level 2, only returned if item is listed in active promotion worksheet"
          },
          "promoPriceDividerPL2": {
            "type": "number",
            "format": "double",
            "description": "Promotional Price Divider for Price Level 2, only returned if item is listed in active promotion worksheet"
          },
          "promoPricePL3": {
            "type": "number",
            "example": "1.03",
            "format": "double",
            "description": "Promotional Price of the item at Price Level 3, only returned if item is listed in active promotion worksheet"
          },
          "promoPriceDividerPL3": {
            "type": "number",
            "format": "double",
            "description": "Promotional Price Divider for Price Level 3, only returned if item is listed in active promotion worksheet"
          },
          "promoPricePL4": {
            "type": "number",
            "example": "1.04",
            "format": "double",
            "description": "Promotional Price of the item at Price Level 4, only returned if item is listed in active promotion worksheet"
          },
          "promoPriceDividerPL4": {
            "type": "number",
            "format": "double",
            "description": "Promotional Price Divider for Price Level 4, only returned if item is listed in active promotion worksheet"
          },
          "lastCost": {
            "type": "number",
            "format": "double",
            "description": "Last Cost of the item"
          },
          "averageCost": {
            "type": "number",
            "format": "double",
            "description": "Average Cost of the item"
          },
          "onHand": {
            "type": "number",
            "format": "double",
            "description": "Item quantity on hand"
          },
          "onOrder": {
            "type": "number",
            "format": "double",
            "description": "Item quantity on order"
          },
          "defaultSupplier": {
            "type": "string",
            "example": "Helmsman Produce",
            "description": "Default Supplier for the item"
          },
          "defaultSupplierUnitId": {
            "type": "string",
            "example": "HE-1",
            "description": "Default Supplier Unit Id for the item"
          },
          "defaultSupplierUnitQty": {
            "type": "number",
            "format": "double",
            "description": "Quantity in order unit for default supplier"
          },
          "powerField1": {
            "type": "string",
            "description": "Power Field 1 associated with the item"
          },
          "storePowerField1": {
            "type": "string",
            "description": "Store Power Field 1 associated with the item"
          },
          "type": {
            "type": "string",
            "example": "Stock Inventory",
            "description": "Available with CATAPULT version 5.7.123 and newer, this field displays the 'Type' of each item, as assigned on the item's inventory record in CATAPULT Web Office. An item's Type determines if it's treated as an item that you sell and order regularly, or if it's only used to assist in transaction-specific scenarios (and is not sold as a \"regular\" item). There are two item Types:\n* **Stock Inventory** - Stock Inventory items are tangible products that you sell in store or online. On-Hand quantities are tracked for Stock Inventory items.\n* **Service** - Service items are non-tangible products. On-Hand quantities are not tracked for Service items, and they cannot be received on worksheets, transferred to another store, or sold by weight."
          },
          "discontinued": {
            "type": "boolean",
            "example": "1",
            "description": "Available with CATAPULT version 5.7.126 and newer, this field displays the Discontinued status (Discontinued or Not Discontinued) of an item at the store where the API query is performed for this endpoint. One of two responses can be given for this field:\n* <code>0</code> - Signifies that the item in question is NOT set as *Discontinued* for the store.\n* <code>1</code> - Signifies that the item in question IS set as *Discontinued* for the store."
          }
        }
      },
      "allItems": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "example": "123",
            "description": "The unique item identifier (scancode)."
          },
          "name": {
            "type": "string",
            "example": "Gala Apple",
            "description": "The item name."
          },
          "receiptAlias": {
            "type": "string",
            "example": "GALA APPLE",
            "description": "The item receipt alias."
          },
          "unitOfMeasure": {
            "type": "string",
            "example": "12 oz / 5 ea",
            "description": "The size/unit descriptor, where applicable."
          },
          "departmentNumber": {
            "type": "string",
            "description": "The item department number, where applicable."
          },
          "brand": {
            "type": "string",
            "description": "The item brand."
          },
          "powerField1": {
            "type": "string",
            "description": "The PowerField 1 value on this item record (only returns global PowerField values)."
          },
          "subDepartmentNumber": {
            "type": "string",
            "description": "The item hierarchy sub-department number, if any.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=31321\">Item Hierarchies</a>."
          },
          "categoryNumber": {
            "type": "string",
            "description": "The item hierarchy category number, if any."
          },
          "subCategoryNumber": {
            "type": "string",
            "description": "The item hierarchy sub-category number, if any."
          },
          "variety": {
            "type": "string",
            "description": "The item hierarchy variety, if any."
          },
          "familyLine": {
            "type": "string",
            "description": "The item family line, if any."
          }
        }
      },
      "transactionjournal": {
        "type": "object",
        "properties": {
          "TRN_PK": {
            "type": "integer",
            "example": "18048",
            "description": "The unique identifier for a transaction."
          },
          "TRN_CPK": {
            "type": "integer",
            "example": "1002",
            "description": "The creator identifier for a transaction."
          },
          "TRN_STO_FK": {
            "type": "integer",
            "example": "3",
            "description": "The unique identifier for the store where the transaction was completed."
          },
          "TRN_STO_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier for the store where the transaction was completed."
          },
          "TRN_StartTime": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/",
            "example": "2016-01-06 10:37:20.870",
            "description": "The data and time a transaction was started. \n\n**Note:** For accuracy, use <code>TRN_EndTime</code> if the specific transaction time is needed."
          },
          "TRN_EndTime": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/",
            "example": "2016-01-06 10:37:20.870",
            "description": "The date and time a transaction was finalized. This is used as the transaction time in all reporting processes."
          },
          "TRN_ReceiptNumber": {
            "type": "integer",
            "example": "16029",
            "description": "The numeric Receipt Number value generated by the terminal that processed the transction. This number is unique only to that specific terminal. Receipt Numbers will over to 1 after reaching 999,999."
          },
          "TRN_Type": {
            "type": "integer",
            "example": "0",
            "description": "Not currently used."
          },
          "TRN_EMP_FK": {
            "type": "integer",
            "example": "4",
            "description": "The unique identifier for the Employee who finalized the transaction."
          },
          "TRN_EMP_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier for the Employee who finalized the transaction."
          },
          "TRN_SequenceNumber": {
            "type": "integer",
            "example": "16029",
            "description": "The numeric value of the transaction Sequence Number, per the terminal where it was processed."
          },
          "TRN_TCF_FK": {
            "type": "integer",
            "example": "2",
            "description": "The unique identifier for the terminal record of the completed transaction."
          },
          "TRN_TCF_CFK": {
            "type": "integer",
            "example": "1002",
            "description": "The unique creator identifier for the terminal record of the completed transaction."
          },
          "TRN_CUS_FK": {
            "type": "integer",
            "example": "2",
            "description": "The unique identifier for the customer associated with this transaction.\nOnly valid if a customer record was actually associated with the transaction."
          },
          "TRN_CUS_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier for the customer associated with this transaction.\nOnly valid if a customer record was actually associated with the transaction."
          },
          "TRN_AllVoid": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the transaction has been voided by an All Void action.\n* <code>0</code> = Normal Transaction \n* <code>1</code> = Voided Transaction"
          },
          "TRN_UploadTime": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/",
            "example": "2016-01-06 10:37:20.870",
            "description": "The date and time this transaction record is sent from the POS Terminal where it was processed and uploaded into the store database. Based on time received by database server."
          },
          "TRN_Status": {
            "type": "integer",
            "example": "0",
            "description": "Returns the transaction status/state.\n\nCompleted Transactions:\n* <code>0</code> = Normal Sales Transaction\n* <code>1</code> = Training Mode Transaction\n\nPending Transactions:\n* <code>2</code> = Checkpoint\n* <code>3</code> = Suspended Sale\n* <code>4</code> = Parked\n* <code>5</code> = Resumed\n* <code>6</code> = Web Order Paid\n* <code>7</code> = Web Order\n* <code>8</code> = Recalled\n* <code>9</code> = Delete Pending\n* <code>10</code> = Order Pick Picking\n* <code>11</code> = Order Pick Ready\n* <code>12</code> = Picking in Progress"
          },
          "TCF_Description": {
            "type": "string",
            "maxLength": 30,
            "example": "Terminal 1",
            "description": "Name of the terminal that completed the transaction."
          },
          "TCF_Number": {
            "type": "integer",
            "example": "1",
            "description": "Number of the terminal that completed the transaction."
          },
          "TCF_TerminalId": {
            "type": "string",
            "maxLength": 8,
            "example": "07325795",
            "description": "The unique identifier of terminal where the transaction was completed."
          },
          "EMP_Number": {
            "type": "integer",
            "example": "99",
            "description": "The Employee ID for the user (i.e. cashier) logged in to the terminal when the transaction was completed."
          },
          "EMP_FirstName": {
            "type": "string",
            "maxLength": 30,
            "example": "Self",
            "description": "The First Name of the user (i.e. cashier) logged in to the terminal when the transaction was completed."
          },
          "EMP_LastName": {
            "type": "string",
            "maxLength": 30,
            "example": "Checkout",
            "description": "The Last Name of the user (i.e. cashier) logged in to the terminal when the transaction was completed."
          },
          "CUS_AccountNumber": {
            "type": "string",
            "maxLength": 16,
            "example": "4012345678900",
            "description": "The Customer ID of the customer record associated with the transaction. Only valid if a customer record was actually associated with the transaction."
          },
          "CUS_FirstName": {
            "type": "string",
            "maxLength": 25,
            "example": "John",
            "description": "The First Name of the customer record associated with the transaction. Only valid if a customer record was actually associated with the transaction."
          },
          "CUS_LastName": {
            "type": "string",
            "maxLength": 25,
            "example": "Smith",
            "description": "The Last Name of the customer record associated with the transaction. Only valid if a customer record was actually associated with the transaction."
          },
          "CUS_Company": {
            "type": "string",
            "maxLength": 50,
            "example": "ECRS",
            "description": "The Company from the customer record associated with the transaction. Only valid if a customer record was actually associated with the transaction."
          },
          "TLI_PK": {
            "type": "integer",
            "example": "1",
            "description": "The itemized, sequenced identifier of an item on a transaction."
          },
          "TLI_LIT_FK": {
            "type": "integer",
            "example": "1",
            "description": "Defines the type of item referenced in a transaction line.\n\nTLI Type definitions:\n* 1 -  Inventory Item (Normal Sale of any Inventory Item )\n* 2 -  Tender (Tender associated with a Transaction)\n* 3 -  Tax\n* 4 -  Discount\n* 5 -  Item Correct (Item removed from sale)\n* 6 -  No Sale \n* 7 -  All Void \n* 8 -  No Tax \n* 9 -  Tax Mod Total \n* 10 -  Suspend \n* 11 -  Resume \n* 12 -  Tax Mod Indicator \n* 13 -  Recovered Transaction \n* 14 -  Totals Entry \n* 15 -  Return Merchandise (Return Transaction, identical to type 1)\n* 16 -  Customer Payment (Payment on House Charge Accounts)\n* 17 -  Change Tender \n* 18 -  Receipt Block \n* 19 -  Tender Correct (Tender removed from transaction)\n* 20 -  No Tax Total \n* 21 -  Reconciliation Action \n* 22 -  Tender Loan\n* 23 -  Tender Safe Drop\n* 24 -  Tender Mod Indicator \n* 25 -  Discount Total \n* 26 -  Discount Total Correct \n* 27 -  Paid Out \n* 28 -  Paid In \n* 29 -  Paid Out Correct \n* 30 -  Age Verification \n* 31 -  Vendor Coupon \n* 32 -  Credit Card Soft Check \n* 33 -  POS Prompt\n* 34 -  Salesperson (The Salesperson associated with a Transaction)\n* 35 -  Combo Total \n* 36 -  Combo Item \n* 37 -  Combo Removed \n* 38 -  WIC ID \n* 39 -  WIC Voucher Number \n* 40 -  WIC Voucher First Date \n* 41 -  WIC Voucher Last Date \n* 42 -  WIC Date Valid \n* 43 -  WIC Voucher Amount \n* 44 -  Prescription Info \n* 45 -  Signature Capture \n* 46 -  Electronic Gift Card \n* 47 -  Electronic Gift Card Info \n* 48 -  Buy Down Correct \n* 49 -  Buy Down \n* 50 -  Safe Drop Warning \n* 51 -  Loyalty \n* 52 -  Auto Transaction \n* 53 -  Paid In Correct \n* 54 -  Prepaid Cards \n* 55 -  Receipt Plug-in \n* 56 -  Cash Back \n* 57 -  Fuel Info \n* 58 -  **Do Not Use** / Type Not Used By Transaction Server\n* 59 -  Rewards \n* 60 -  Special Order\n* 61 -  Transaction Merge\n* 62 -  Return Limit Info\n* 63 -  Discount Card"
          },
          "TLI_StartTime": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/",
            "example": "2016-01-06 10:37:20.870",
            "description": "This field contains the line item start time. \n\n**Note:** For accuracy, use <code>TRN_EndTime</code> as the indicator of a particular transaction time."
          },
          "TLI_EndTime": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/",
            "example": "2016-01-06 10:37:20.870",
            "description": "This field contains the line item end time. \n\n**Note:** For accuracy, use <code>TRN_EndTime</code> as the indicator of a particular transaction time."
          },
          "TLI_Amount": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The dollar amount of the for a line item of the transaction."
          },
          "TLI_ReceiptAlias": {
            "type": "string",
            "maxLength": 50,
            "example": "Widget",
            "description": "The Receipt Alias for a line item of the transaction."
          },
          "TLI_Quantity": {
            "type": "string",
            "format": "decimal",
            "maxLength": 12,
            "example": "1.000",
            "description": "The Quantity of a particular line item on the transaction."
          },
          "TLI_ScanCode": {
            "type": "string",
            "maxLength": 50,
            "example": "212345678901",
            "description": "The scancode/UPC of a line item on the transaction. Only valid for line items defined as Inventory Items. Conditionally returns either a base Item ID or an Alternate ID."
          },
          "TLI_TaxDifference": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "Not currently recommended as reliable source of data."
          },
          "ExtendedPrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The extended price for a particular base line item sold in the transaction.     \n\n**Note:** For accuracy, use <code>ExtendedBasePrice</code> instead."
          },
          "ExtendedBasePrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The extended base price of a particular base line item sold in the transaction.  \n\n**Field Formula:** <code>Base Price</code> **Ã** <code>Alternate ID Item Count in Pkg</code> **Ã** <code>Unit Quantity Sold</code>."
          },
          "CTI_CMB_FK": {
            "type": "integer"
          },
          "CTI_CMB_CFK": {
            "type": "integer"
          },
          "CTI_DiscountAmount": {
            "type": "numreric"
          },
          "CTI_SellingAmount": {
            "type": "numeric"
          },
          "CTI_TLI_FK_Item": {
            "type": "integer",
            "example": "1",
            "description": "The relational ink between a combo and line item, where applicable."
          },
          "CMB_Name": {
            "type": "string",
            "description": "The name of a combo associated with a line item on the transaction, where applicable."
          },
          "CPT_Void": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the charge payment, if used in the transaction, was accepted or voided. Only valid when <code>TLI_LIT_FK = 16</code> (Charge Payment).        \n* <code>0</code> = Charge Payment is good.\n* <code>1</code> = Charge Payment is voided."
          },
          "DLI_TypeDollar": {
            "type": "boolean",
            "description": "Whether or not the line item discount, if applied in the transaction, was a dollar-based reduction. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item).\n* <code>0</code> = Discount is **not** a dollar reduction.\n* <code>1</code> = Discount is a dollar reduction."
          },
          "DLI_TypePercent": {
            "type": "boolean",
            "description": "Whether or not the line item discount was a percentage-based reduction. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item).\n* <code>0</code> = Discount is **not** a percent reduction.\n* <code>1</code> = Discount is a percent reduction."
          },
          "DLI_LineItem": {
            "type": "string"
          },
          "DLI_DIS_FK": {
            "type": "integer",
            "description": "The unique identifier for the discount line item applied in the transaction, where applicable."
          },
          "DLI_Void": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the particular discount line item was completed or voided. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item).        \n* <code>0</code> = Discount Line Item is completed.\n* <code>1</code> = Discount Line Item is voided."
          },
          "DLI_DIS_CFK": {
            "type": "integer",
            "description": "The unique creator identifier for the discount line item applied in the transaction, where applicable."
          },
          "DLI_ApplyBeforeTax": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the discount is calculated before or after tax(es). Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item).\n* <code>0</code> = Discount is applied before tax. \n* <code>1</code> = Discount is applied after tax.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=16114#applyaftertaxes\">Discount Generator (Applying Taxes)</a>."
          },
          "DLI_Return": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the discount is a return. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item).\n* <code>0</code> = Discount is applied in a normal sale.\n* <code>1</code> = Discount is applied in a return."
          },
          "DLI_INV_FK": {
            "type": "integer",
            "example": "1",
            "description": "The unqiue identifer for the particular base item on which the discount was applied. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item)."
          },
          "DLI_INV_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unqiue creator dentifer for the particular base item on which the discount was applied. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item)."
          },
          "DLI_Automatic": {
            "type": "boolean",
            "example": "0",
            "description": "Whether the discount is Manual or Automatic. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item). \n* <code>0</code> = Manual Discount\n* <code>1</code> = Automatic Discount"
          },
          "DLI_ASC_FK": {
            "type": "integer",
            "example": "1",
            "description": "The unique identifer of the Alternate ID item on which the discount was applied. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item). \n* If applied to an Alternate ID line item, this returns the respective AdditionalScanCodes identifier particular to that Alternate ID item.  \n* If applied to a Base ID line item, this returns a <code>null</code> value."
          },
          "DLI_ASC_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifer of the Alternate ID item on which the discount was applied. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item). \n* If applied to an Alternate ID line item, this returns the respective AdditionalScanCodes creator identifier particular to that Alternate ID item.  \n* If applied to a Base ID line item, this returns a <code>null</code> value."
          },
          "DLI_InventoryLineItem": {
            "type": "integer",
            "example": "3",
            "description": "The transaction item record which the discount applies to. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item).        "
          },
          "DLI_ReportConsolidated": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the discount is to be consolidated in reports. Only valid when <code>TLI_LIT_FK = 4</code> (Discount Line Item). \n* <code>0</code> = Discount is **not** consolidated.\n* <code>1</code> = Discount is consolidated."
          },
          "ITI_AverageCost": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The average cost of the base item at the time of the transaction. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "ITI_EntryMethod": {
            "type": "integer",
            "example": "1",
            "description": "The method by which the line item was entered onto the transaction. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item).\n* <code>1</code> = Item was manually entered.\n* <code>2</code> = Item was scanned."
          },
          "ITI_Return": {
            "type": "boolean",
            "example": "0",
            "description": "Whether or not the line item is a return. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item).\n* <code>0</code> = Line item was **not** a return (normal sale).\n* <code>1</code> = Line item was a return."
          },
          "ITI_INV_FK": {
            "type": "integer",
            "example": "1",
            "description": "The unique identifier of the base item that was sold/returned in the transaction. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "ITI_Void": {
            "type": "boolean",
            "description": "Whether or not the sale of a particular base item was completed or voided. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item).        \n* <code>0</code> = Sale of base item is completed.\n* <code>1</code> = Sale of base item is voided."
          },
          "ITI_INV_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier of the base item that was sold/returned in the transaction. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "ITI_SellingPrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The actual selling price of the base item after automatic discounts are applied. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item).\n\n**Note:** Does not include manual discounts, combos, promotions, etc."
          },
          "ITI_BasePrice": {
            "type": "string",
            "format": "decimal",
            "description": "The price of the base item before any automatic discounts or taxes are applied. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "ITI_ASC_FK": {
            "type": "integer",
            "example": "1",
            "description": "The unique identifer of the Alternate ID item that was sold/returned in the transaction. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item). \n* For Alternate ID items, this returns the respective AdditionalScanCodes creator identifier particular to a Alternate ID line item.  \n* For Base ID line item, this returns a <code>null</code> value."
          },
          "ITI_ASC_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifer of the Alternate ID item that was sold/returned in the transaction. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item). \n* For Alternate ID items, this returns the respective AdditionalScanCodes creator identifier particular to a Alternate ID line item.  \n* For Base ID line item, this returns a <code>null</code> value."
          },
          "ITI_ASCQuantity": {
            "type": "string",
            "format": "decimal",
            "maxLength": 12,
            "example": "1.00",
            "description": "The item count within the defined package for an Alternate ID line item in the transction, where applicable.\nOnly valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "ITI_PriceLevel": {
            "type": "integer",
            "example": "1",
            "description": "The Price Level of the item at the time of transaction sale. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "ITI_DiscountPriceOverride": {
            "type": "integer",
            "example": "1",
            "description": "Always returns <code>1</code>."
          },
          "DPT_Name": {
            "type": "string",
            "maxLength": 30,
            "example": "Grocery",
            "description": "The Department Name associated with the line item at the time of transaction sale. Only valid when <code>TLI_LIT_FK = 1</code> or <code>TLI_LIT_FK = 15</code> (Inventory Item)."
          },
          "DPT_Number": {
            "type": "integer",
            "example": "99",
            "description": "The Department ID for the department associated with a line item at the time of transaction sale."
          },
          "DPT_OmitFromSales": {
            "type": "boolean",
            "example": "0",
            "description": "* <code>0</code> = Sales Department.\n* <code>1</code> = Omit from Sales Department."
          },
          "TTI_TAX_FK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique identifier for the applied tax record. Only valid when <code>TLI_LIT_FK = 3</code>."
          },
          "TTI_TAX_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier for the applied tax record. Only valid when <code>TLI_LIT_FK = 3</code>."
          },
          "TTI_ReturnTax": {
            "type": "boolean",
            "example": "0",
            "description": "Whether the tax was applied in a normal sale or return. Only valid when <code>TLI_LIT_FK = 3</code>.\n* <code>0</code> = Tax applied to normal sale item.\n* <code>1</code> = Tax applied to a return item."
          },
          "TTI_TaxableAmount": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The taxable dollar amount of the transaction subtotal. Only valid when <code>TLI_LIT_FK = 3</code>. "
          },
          "NTI_TEN_FK": {
            "type": "integer",
            "example": "1",
            "description": "The unique identifier for the tender used on the transaction. Only valid when <code>TLI_LIT_FK = 2</code> (Tender Record)."
          },
          "NTI_TEN_CFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier for the tender used on the transaction. Only valid when <code>TLI_LIT_FK = 2</code> (Tender Record)."
          },
          "NTI_AuthorizationCode": {
            "type": "string",
            "maxLength": 20,
            "description": "The authorization code for the tender used on the transaction, where applicable."
          },
          "TRN_ETI_AccountName": {
            "type": "string",
            "maxLength": 40,
            "description": "The cardholder name, where applicable."
          },
          "TRN_ETI_AccountNumber": {
            "type": "string",
            "maxLength": 4,
            "description": "The last 4 digits of the card number used on the transaction."
          },
          "TRN_ETI_CardType": {
            "type": "string",
            "maxLength": 5,
            "description": "The Card Type used on the transaction."
          },
          "TRN_ETI_TenderAmount": {
            "type": "string",
            "format": "decimal",
            "maxLength": 14,
            "example": "1.29",
            "description": "The amount tendered to the card in the transaction."
          },
          "NTI_TenderType": {
            "type": "integer",
            "example": "2",
            "description": "Defines the type of tender received as payment in the transaction. Only valid when <code>TLI_LIT_FK = 2</code> (Tender Record)."
          },
          "NTI_Amount": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.2900",
            "description": "The amount tendered. Only valid when <code>TLI_LIT_FK = 2</code> (Tender Record)."
          },
          "NTI_Void": {
            "type": "boolean",
            "example": "0",
            "description": "Whether the tendered transaction was completed or voided. Only valid when <code>TLI_LIT_FK = 2</code> (Tender Record).\n* <code>0</code> = Not voided.\n* <code>1</code> = Voided."
          },
          "NTI_SafeDrop": {
            "type": "boolean",
            "example": "1",
            "description": "Whether or not this line item is a safe drop. Only valid when <code>TLI_LIT_FK = 23</code> (Safe Drop).\n* <code>0</code> = No.\n* <code>1</code> = Yes.\n\n**Note:** This will always return <code>1</code> when the line item type is set to safe drop. All other line item types return either <code>0</code> or <code>NULL</code>."
          },
          "NTI_Loan": {
            "type": "integer",
            "example": "1",
            "description": "Whether or not this line item is a drawer loan. Only valid when <code>TLI_LIT_FK = 22</code> (Drawer Loan).\n* <code>0</code> = No.\n* <code>1</code> = Yes.\n\n**Note:** This will always return <code>1</code> when the line item type is set to drawer loan. All other line item types return either <code>0</code> or <code>NULL</code>."
          },
          "NTI_FCExchangeRate": {
            "type": "string",
            "format": "decimal",
            "maxLength": 14,
            "example": "0.76",
            "description": "The Foreign Currency Exchange Rate at the time of sale."
          },
          "NTI_FCTenderAmount": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The Foreign Currency Amount tendered."
          },
          "NTI_ForeignCurrency": {
            "type": "integer",
            "example": "0",
            "description": "Whether or not the transaction was tendered with a foreign currency.\n* <code>0</code> = Not Foreign Currency.\n* <code>1</code> = Foreign Currency."
          },
          "TEN_PK": {
            "type": "integer",
            "example": "1",
            "description": "The unique identifier of the tender received for the transaction. References the Tenders table. Only valid when <code>TLI_LIT_FK = 2</code>."
          },
          "TEN_CPK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifier of the tender received for the transaction. References the Tenders table. Only valid when <code>TLI_LIT_FK = 2</code>."
          },
          "TEN_Description": {
            "type": "string",
            "example": "Cash",
            "maxLength": 30,
            "description": "The description of the tender received for the transaction. Only valid when <code>TLI_LIT_FK = 2</code>."
          },
          "CTI_BonusAmount": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "example": "1.29",
            "description": "The total amount deducted from a line item by a vendor coupon. Only valid when <code>TLI_LIT_FK = 31</code> (Vendor Coupon)."
          },
          "CTI_EntryMethod": {
            "type": "boolean",
            "example": "1",
            "description": "Whether the vendor coupon was keyed in as a POS function or scanned at the time of transaction. How Only valid when <code>TLI_LIT_FK = 31</code> (Vendor Coupon).\n* <code>1</code> = Vendor Coupon POS Function.\n* <code>2</code> = Scan.\n* <code>3</code> = Coupon from a Third-Party provider, such as InmarÂ®."
          },
          "CTI_Void": {
            "type": "integer",
            "example": "0",
            "description": "Only valid when <code>TLI_LIT_FK = 31</code> (Vendor Coupon).\n* <code>0</code> = Good record.\n* <code>01</code> = Voided record."
          },
          "CTI_ManufacturerCode": {
            "type": "string",
            "maxLength": 8,
            "description": "The Coupon Manufacturer Code. Only valid when <code>TLI_LIT_FK = 31</code> (Vendor Coupon)."
          },
          "CTI_FamilyCode": {
            "type": "string",
            "maxLength": 8,
            "description": "The Coupon Family Code. Only valid when <code>TLI_LIT_FK = 31</code> (Vendor Coupon)."
          },
          "CTI_CouponCode": {
            "type": "string",
            "maxLength": 8,
            "description": "The Coupon Code. Only valid when <code>TLI_LIT_FK = 31</code> (Vendor Coupon)."
          },
          "SalespersonFK": {
            "type": "integer",
            "example": "1",
            "description": "The unique identifer for the employee designated as the the salesperson associated with the sale or return of an item, where applicable.\nApplies to normal sales, a returns, and on associated discount lines items.\nOnly valid when <code>TLI_LIT_FK = 1</code>, <code>TLI_LIT_FK = 4</code>, or <code>TLI_LIT_FK = 15</code>."
          },
          "SalespersonCFK": {
            "type": "integer",
            "example": "1000",
            "description": "The unique creator identifer for the employee designated as the the salesperson associated with the sale or return of an item, where applicable.\nApplies to normal sales, a returns, and on associated discount lines items.\nOnly valid when <code>TLI_LIT_FK = 1</code>, <code>TLI_LIT_FK = 4</code>, or <code>TLI_LIT_FK = 15</code>."
          },
          "GCT_Void": {
            "type": "boolean",
            "example": "0",
            "description": "* <code>0</code> = Gift Card Line is good.\n* <code>1</code> = Gift Card Line is voided."
          },
          "LTN_Start1": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the starting value for Lot Number range 1."
          },
          "LTN_End1": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the ending value for Lot Number range 1."
          },
          "LTN_Start2": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the starting value for Lot Number range 2."
          },
          "LTN_End2": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the ending value for Lot Number range 2."
          },
          "LTN_Start3": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the starting value for Lot Number range 3."
          },
          "LTN_End3": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the ending value for Lot Number range 3."
          },
          "LTN_Start4": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the starting value for Lot Number range 4."
          },
          "LTN_End4": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the ending value for Lot Number range 4."
          },
          "LTN_Start5": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the starting value for Lot Number range 5."
          },
          "LTN_End5": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the ending value for Lot Number range 5."
          },
          "LTN_Start6": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the starting value for Lot Number range 6."
          },
          "LTN_End6": {
            "type": "string",
            "maxLength": 32,
            "description": "This field contains the ending value for Lot Number range 6."
          },
          "LTN_AddtlRanges": {
            "type": "string",
            "description": "This field contains values for any additional Lot Number ranges."
          },
          "TRN_Total": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "description": "The transaction total."
          },
          "TRN_NetSales": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16,
            "description": "The transaction sales amount after any modifiers."
          },
          "TRN_ItemQuantity": {
            "type": "string",
            "maxLength": 12
          },
          "TRN_ItemCorrects": {
            "type": "string"
          },
          "TRN_Negatives": {
            "type": "string"
          },
          "StoreNumber": {
            "type": "string",
            "maxLength": 10,
            "description": "The store number where the transaction was completed."
          },
          "TRN_ETI_Approval": {
            "type": "string",
            "maxLength": 20
          },
          "TRN_ETI_Reference": {
            "type": "string",
            "maxLength": 20
          },
          "TRN_ETI_RemainingBalance": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16
          },
          "TRN_ETI_CvvResult": {
            "type": "string",
            "maxLength": 1
          },
          "TRN_ETI_AvsResult": {
            "type": "string",
            "maxLength": 1
          },
          "TRN_ETI_Bin": {
            "type": "string",
            "maxLength": 6
          },
          "TRN_ETI_AuthorizationDate": {
            "type": "string",
            "maxLength": 8
          },
          "TRN_ETI_AuthorizationTime": {
            "type": "string",
            "maxLength": 8
          },
          "TRN_ETI_AuthorizationType": {
            "type": "string",
            "maxLength": 20
          },
          "TRN_ETI_AuthorizationStan": {
            "type": "string",
            "maxLength": 6
          },
          "CTI_ApplyToFoodstamps": {
            "type": "boolean"
          },
          "CTI_ApplyToFSA": {
            "type": "boolean"
          },
          "CTI_CouponBarcode": {
            "type": "string",
            "maxLength": 100
          },
          "CTI_ProviderId": {
            "type": "string",
            "maxLength": 32
          },
          "CTI_FaceValue": {
            "type": "string",
            "format": "decimal"
          },
          "NTI_CHG_FK": {
            "type": "integer"
          },
          "NTI_CHG_CFK": {
            "type": "integer"
          },
          "NTI_TLI_CashBack": {
            "type": "integer"
          },
          "TLI_Divider": {
            "type": "integer"
          },
          "ITI_BasePriceDivider": {
            "type": "integer"
          },
          "ITI_PL1BasePriceDivider": {
            "type": "integer"
          },
          "ITI_WeightEntryMethod": {
            "type": "integer"
          },
          "ITI_TareEntryMethod": {
            "type": "integer"
          },
          "ITI_Pl1BasePrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16
          },
          "ITI_Pl1PromptForPrice": {
            "type": "boolean"
          },
          "ITI_TareWeight": {
            "type": "string",
            "format": "decimal"
          },
          "ITI_EmbeddedPrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16
          },
          "ITI_SpecialPricing": {
            "type": "boolean"
          },
          "ITI_Variation": {
            "type": "integer"
          },
          "ITI_LinkType": {
            "type": "integer"
          },
          "ITI_ModQuantity": {
            "type": "string",
            "format": "decimal",
            "maxLength": 12
          },
          "ITI_ModPrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16
          },
          "ITI_EmbeddedDiscount": {
            "type": "string",
            "format": "decimal"
          },
          "ITI_FSA": {
            "type": "boolean"
          },
          "ITI_SNAP": {
            "type": "boolean"
          },
          "ITI_WeightUnit": {
            "type": "integer"
          },
          "PromptName": {
            "type": "string",
            "maxLength": 30,
            "description": "The name of the cashier prompt activated in the transaction, where applicable."
          },
          "PromptResponse": {
            "type": "string",
            "maxLength": 30
          },
          "PromptItem": {
            "type": "integer"
          },
          "CTI_Expiration": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/"
          },
          "ITI_MarkdownBarCode": {
            "type": "string",
            "maxLength": 64
          },
          "ITI_TLI_LinkLineItem": {
            "type": "integer"
          },
          "ComboTotalLoyaltyProgram": {
            "type": "string",
            "maxLength": 32
          },
          "ComboTotalStoreCouponName": {
            "type": "string",
            "maxLength": 30
          },
          "CTH_Voided": {
            "type": "boolean"
          },
          "CTH_EarnedLoyalty": {
            "type": "string",
            "format": "decimal"
          },
          "LoyaltyTransactionLoyaltyProgram": {
            "type": "string",
            "maxLength": 32
          },
          "LoyaltyTransactionStoreCouponName": {
            "type": "string",
            "maxLength": 30
          },
          "LTI_Expiring": {
            "type": "string",
            "format": "decimal"
          },
          "LTI_ExpirationDate": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/"
          },
          "CTI_ComboTotalLineItem": {
            "type": "integer"
          },
          "ComboOmitFromSales": {
            "type": "boolean"
          },
          "CMB_ApplyAfterTaxes": {
            "type": "boolean"
          },
          "STI_Status": {
            "type": "integer"
          },
          "EMD_SequenceNumber": {
            "type": "integer"
          },
          "EMD_TransactionSequenceNumber": {
            "type": "integer"
          },
          "EMD_Time": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/"
          },
          "EMD_Tender": {
            "type": "string",
            "maxLength": 60
          },
          "EMD_TLI_FK": {
            "type": "integer"
          },
          "EMD_5A": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_82": {
            "type": "string",
            "maxLength": 4
          },
          "EMD_84": {
            "type": "string",
            "maxLength": 20
          },
          "EMD_9A": {
            "type": "string",
            "maxLength": 6
          },
          "EMD_9F21": {
            "type": "string",
            "maxLength": 6
          },
          "EMD_9C": {
            "type": "string",
            "maxLength": 2
          },
          "EMD_5F34": {
            "type": "string",
            "maxLength": 2
          },
          "EMD_5F2A": {
            "type": "string",
            "maxLength": 3
          },
          "EMD_9F02": {
            "type": "string",
            "maxLength": 12
          },
          "EMD_9F03": {
            "type": "string",
            "maxLength": 12
          },
          "EMD_9F08": {
            "type": "string",
            "maxLength": 4
          },
          "EMD_9F09": {
            "type": "string",
            "maxLength": 4
          },
          "EMD_9F1A": {
            "type": "string",
            "maxLength": 3
          },
          "EMD_9F33": {
            "type": "string",
            "maxLength": 32
          },
          "EMD_9F34": {
            "type": "string",
            "maxLength": 6
          },
          "EMD_9F35": {
            "type": "string",
            "maxLength": 2
          },
          "EMD_9F36": {
            "type": "string",
            "maxLength": 4
          },
          "EMD_9F37": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_9F0D": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_9F0E": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_9F0F": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_TACD": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_TACO": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_TACF": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_95_1GEN": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_9F10_1GEN": {
            "type": "string",
            "maxLength": 32
          },
          "EMD_9F26_1GEN": {
            "type": "string",
            "maxLength": 16
          },
          "EMD_9F27_1GEN": {
            "type": "string",
            "maxLength": 2
          },
          "EMD_91": {
            "type": "string",
            "maxLength": 20
          },
          "EMD_95_2GEN": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_9F26_2GEN": {
            "type": "string",
            "maxLength": 16
          },
          "EMD_9F27_2GEN": {
            "type": "string",
            "maxLength": 2
          },
          "EMD_8A": {
            "type": "string",
            "maxLength": 4
          },
          "EMD_9B": {
            "type": "string",
            "maxLength": 4
          },
          "EMD_AppName": {
            "type": "string",
            "maxLength": 60
          },
          "EMD_CardEntryMethod": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_CardVerMethod": {
            "type": "string",
            "maxLength": 10
          },
          "EMD_Mode": {
            "type": "string",
            "maxLength": 30
          },
          "EMD_9F06": {
            "type": "string",
            "maxLength": 32
          },
          "ITI_RetailAccountingPrice": {
            "type": "string",
            "format": "decimal",
            "maxLength": 16
          },
          "ITI_RetailAccountingReportCode": {
            "type": "string",
            "maxLength": 30
          },
          "GCT_GCP_FK": {
            "type": "integer"
          },
          "GCT_GCP_CFK": {
            "type": "integer"
          },
          "GCT_Code": {
            "type": "string",
            "maxLength": 3
          },
          "GCT_Account": {
            "type": "string",
            "maxLength": 16
          },
          "GCT_SendDate": {
            "type": "string",
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}):([0-9]{3})/",
            "description": "Date the gift card is sent to the recipient."
          },
          "GCT_Print": {
            "type": "boolean"
          },
          "GCT_RecipientEmail": {
            "type": "string",
            "maxLength": 254,
            "description": "The gift card recipient e-mail address."
          },
          "GCT_RecipientPhoneNumber": {
            "type": "string",
            "maxLength": 14,
            "description": "The gift card recipient phone number."
          },
          "GCT_RecipientName": {
            "type": "string",
            "maxLength": 64,
            "description": "The gift card recipient full name."
          },
          "GCT_SenderName": {
            "type": "string",
            "maxLength": 64,
            "description": "The gift card sender first name."
          },
          "TRN_WTR_FK": {
            "type": "integer"
          },
          "TRN_WTR_CFK": {
            "type": "integer"
          },
          "TRN_ETI_ExpDate": {
            "type": "string",
            "maxLength": 5
          },
          "TRN_ETI_CardSwiped": {
            "type": "boolean"
          },
          "TRN_ETI_Processor": {
            "type": "string",
            "maxLength": 20
          }
        }
      },
      "dynamicPromotionsDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "38575|1000",
            "description": "The unique identifier of the dynamic promotions"
          },
          "name": {
            "type": "string",
            "example": "Test Promotion Name",
            "description": "Name of the dynamic promotion."
          },
          "alias": {
            "type": "string",
            "example": "TESTPRM ALIAS",
            "description": "Receipt alias of the dynamic promotion."
          },
          "storeCoupon": {
            "type": "string",
            "example": "Test Coupon - 10% Off",
            "description": "The store coupon required for the dynamic promotion, if present."
          },
          "storeFilterType": {
            "type": "string",
            "example": "Store Groups",
            "description": "The type of filter  used to determine which stores this promo applies to.  Either Zone, Store Groups, or Unknown."
          },
          "zone": {
            "type": "string",
            "example": "All",
            "description": "The zone to which this dynamic promotion is limited or All if no zone limit is applied."
          },
          "storeGroup": {
            "type": "string",
            "example": "Group Name",
            "description": "The store group to which this dynamic promotion applied or All if no store group is applied."
          },
          "powerField1": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 1 for the dynamic promotion."
          },
          "powerField2": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 2 for the dynamic promotion."
          },
          "powerField3": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 3 for the dynamic promotion."
          },
          "powerField4": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 4 for the dynamic promotion."
          },
          "powerField5": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 5 for the dynamic promotion."
          },
          "powerField6": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 6 for the dynamic promotion."
          },
          "powerField7": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 7 for the dynamic promotion."
          },
          "powerField8": {
            "type": "string",
            "example": "",
            "description": "The value of PowerField 8 for the dynamic promotion."
          },
          "terminalGroup": {
            "type": "string",
            "example": "POS Lanes",
            "description": "The terminal group to which this dynamic promotion is limited, if any."
          },
          "BOGOflag": {
            "type": "number",
            "example": 0,
            "description": "Indicator that this promotion is a BOGO"
          },
          "BOGOlesserValue": {
            "type": "number",
            "example": 0,
            "description": "If this promotion is a bogo then this is the number of equal or lesser value items that the discount is applied to."
          },
          "BOGOgreaterValue": {
            "type": "number",
            "example": 0,
            "description": "If this promotion is a bogo then this is the number of equal or greater values items that the discount is applied to."
          },
          "itemGroups": {
            "type": "array",
            "description": "The item groups which are required for the promotion to fire. Note that Item Groups with a large number of items (e.g., 100,000 or more) may impact the performance of the endpoint. Specifically, it may take an extended period of time for the responses to be returned.",
            "items": {
              "type": "object",
              "properties": {
                "itemGroupName": {
                  "type": "string",
                  "description": "The name of the Item Group, as entered in CATAPULT Web Office. Note that this object is only returned within the <code>itemGroups</code> array with CATAPULT 5.7.130 and newer."
                },
                "itemGroupID": {
                  "type": "string",
                  "description": "The Primary Key (PK) and Composite Primary Key (CPK) of the Item Group, as found in the merchant's CATAPULT database for the store where the requst is being made. Both the PK and CPK values are concatenated - with the PK displaying first - and separated by a pipe (e.g., <code>5|1003</code>). Note that this object is only returned within the <code>itemGroups</code> array with CATAPULT 5.7.130 and newer."
                },
                "requiredQuantity": {
                  "type": "numeric",
                  "description": "The number of items required for this item group to be satisified."
                },
                "requiredAmount": {
                  "type": "numeric",
                  "description": "The required total amount for this item group to be satisified."
                },
                "distribution": {
                  "type": "numeric",
                  "description": "The percent of the discount this item might receive."
                },
                "receivesDiscount": {
                  "type": "numeric",
                  "description": "1 if this item group can potentially receive the discount"
                },
                "itemCount": {
                  "type": "numeric",
                  "description": "The number of items in this item group"
                },
                "items": {
                  "type": "array",
                  "description": "The item id's belonging to this item group",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "schedules": {
            "type": "array",
            "description": "The schedules on which the dynamic promotion will fire.",
            "items": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string",
                  "format": "date",
                  "description": "The date on which this schedule starts being valid"
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "description": "The date after which this promotion is no longer valid"
                },
                "startTime": {
                  "type": "string",
                  "format": "time",
                  "description": "The time on each day within the schedule that the promo starts being valid"
                },
                "endTime": {
                  "type": "string",
                  "format": "time",
                  "description": "The time on each day after which the promo is no longer valid."
                },
                "amount": {
                  "type": "numeric",
                  "format": "decimal",
                  "description": "For amount based discounts this is the amount of the discount or override."
                },
                "percent": {
                  "type": "percent",
                  "format": "decimal",
                  "description": "For percent based discounts this is the amount of the discount."
                },
                "overridePriceSequence": {
                  "type": "string",
                  "description": "For override price sequence based discounts this is the divider/total of the pricing. Example - 5 / $10.0000"
                },
                "rounding": {
                  "type": "string",
                  "description": "How the amount of the discount is rounded.  One of 'Round Up', 'When half or more', 'Never', or 'Unknown'."
                }
              }
            }
          },
          "discountType": {
            "type": "string",
            "description": "The type of discount which this promotion applies.  Can be one of 'Override Price', 'Dollar Amount', 'Percent Amount', 'Override Price Sequence', or 'Unknown'."
          },
          "maximumAllowedPerTransaction": {
            "type": "number",
            "example": 1,
            "description": "The maximum number of times this promo can fire in a single transaction"
          },
          "maximumPurchaseAmount": {
            "type": "number",
            "example": 20,
            "description": "The maximum amount of a transaction on which this promotion is allowed to fire."
          },
          "stackLevel": {
            "type": "string",
            "example": "Always Apply",
            "description": "The stack level on which the promotion fires."
          },
          "includeItemGroup": {
            "type": "string",
            "description": "An item group to include in the calculation of the total limits for this promotion"
          },
          "excludeItemGroup": {
            "type": "string",
            "description": "An item group to exclude from the calculation of the total limits for this promotion"
          },
          "generalLedgerAccount": {
            "type": "string",
            "description": "The name of the general ledger account to which this promotion contributes"
          },
          "storeCoupontriggers": {
            "type": "string",
            "description": "The type of store coupon trigger which applies to this promotion.  One of '', 'Require Scan or Attachment', 'Require Scan and Attachment', 'Require Scan', 'Require Attachment', 'Require Scan or Customer Association', or 'Unknown'"
          },
          "disabled": {
            "type": "numeric",
            "description": "1 if the promotion is disabled."
          },
          "applyToBasePrice": {
            "type": "numeric",
            "description": "1 if the promotion applies to the base price."
          },
          "DisableUseLimits": {
            "type": "numeric",
            "description": "1 if use limits are disabled for this promotion."
          },
          "deferrable": {
            "type": "numeric",
            "description": "1 if use limits apply to this promotion and it is deferrable."
          },
          "usesPerPeriod": {
            "type": "numeric",
            "description": "If use limits are enabled, then this indicates how many times a promotion can be used in each period."
          },
          "maxSavingsPerPeriod": {
            "type": "numeric",
            "description": "If use limits are enabled, then this indicates the max savings amount allowed in each period."
          },
          "limitAppliesTo": {
            "type": "string",
            "description": "Indicates to what a uses limit applies. One of 'Transaction' or 'Total Promotions'."
          },
          "enforceUseLimits": {
            "type": "string",
            "description": "Indicates the scope at which use limits are tracked. One of 'Coupon Type', 'Customer', or 'Household'."
          },
          "resetUsages": {
            "type": "string",
            "description": "Describes the period of a use limit and when the tracked uses are reset."
          },
          "rewardedLoyaltyOption": {
            "type": "string",
            "description": "Described how loyalty points are awarded by the promotion.  One of 'None', 'Apply multiplier to item groups only', 'Apply multiplier to entire transaction', 'Reward points to transaction', and 'Unknown'."
          },
          "rewardedLoyaltyProgram": {
            "type": "string",
            "description": "The name of the program to which any points are awarded."
          },
          "rewardedLoyaltyPoints": {
            "type": "numeric",
            "description": "The number of points awarded to the loyalty program."
          },
          "rewardedLoyaltyMultiplier": {
            "type": "numeric",
            "description": "The multiplier awarded to the loyalty program."
          },
          "rewardCoupon": {
            "type": "string",
            "description": "The name of a coupon awarded by the redemption of this promotion"
          },
          "rewardedReceiptPromoSection": {
            "type": "string",
            "description": "The name of a receipt section awarded by this promotion."
          },
          "maxDiscountPerPromo": {
            "type": "numeric",
            "description": "1 if the maximum transaction discount amount is per instance of the promotion, else discount amount is per transaction."
          },
          "maximumTransactionDiscount": {
            "type": "string",
            "description": "The maximum amount of the discount allowed by this promotion. 0 is unlimited."
          },
          "minimumPurchaseAmount": {
            "type": "numeric",
            "description": "the minimum purchase amount before this promotion is allowed to fire."
          },
          "weightedItemOptions": {
            "type": "string",
            "description": "How weighted items are treated by this promotion.  One of 'Discount by calculated unit quantity', 'Discount by line item', 'Discount by line item per each unit of weight', or 'Unknown'."
          }
        }
      },
      "purchaseOrderItems": {
        "type": "object",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "A",
              "D"
            ],
            "description": "Type of Action to be Performed:\n* <code>A</code> - Insert or Update provided items on the purchase order worksheet.\n* <code>D</code> - Remove or Delete items from the purchase order worksheet."
          },
          "supplierUnitId": {
            "type": "string",
            "maxLength": 15,
            "description": "Determines the line item to add/update/delete. Takes precedences over <code>itemId</code> when both are provided."
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "Determines the line item to add/update/delete. When an <code>itemId</code> is provided without a specific <code>supplierUnitId</code>,\nthe latter is determined based on the supplier defaults for that item."
          },
          "orderQuantity": {
            "type": "number",
            "format": "double",
            "description": "The number of supplier units to be ordered, for a given line item, on this worksheet. \nIf a quantity is already defined for a <code>supplierUnitId</code> line item on the worksheet, \nit will be replaced by the value provided in the request body. \n\nValid for either purchase order worksheet type with **PENDING** status."
          },
          "shippedQuantity": {
            "type": "number",
            "format": "double",
            "description": "The number of supplier units shipped by the supplier. Replaces any pre-existing value for the matching <code>supplierUnitId</code>. \n\nOnly valid for conventional purchase order worksheets with **ORDERED** status. \\\nValid for receive-only purchase order worksheets with **PENDING** or **ORDERED** status."
          },
          "receivedQuantity": {
            "type": "number",
            "format": "double",
            "description": "The number of supplier units received from the supplier. Replaces any pre-existing value for the matching <code>supplierUnitId</code>. \n\nOnly valid for conventional purchase order worksheets with **ORDERED** status. \\\nValid for receive-only purchase order worksheets with **PENDING** or **ORDERED** status."
          },
          "distributeDiscountsFlag": {
            "type": "boolean",
            "enum": [
              0,
              1
            ],
            "description": "Defaults to <code>1</code> for newly added worksheet items."
          },
          "verifiedFlag": {
            "type": "boolean",
            "enum": [
              0,
              1
            ],
            "description": "Defaults to <code>1</code> for newly added worksheet items."
          },
          "receivedFlag": {
            "type": "boolean",
            "enum": [
              0,
              1
            ],
            "description": "Defaults to <code>0</code> for newly added worksheet items.\n\nOnly valid for conventional purchase order worksheets with **ORDERED** status. \\\nValid for receive-only purchase order worksheets with **PENDING** or **ORDERED** status."
          },
          "applyExiseTaxFlag": {
            "type": "boolean",
            "enum": [
              0,
              1
            ],
            "description": "Defaults to <code>0</code> for newly added worksheet items. \\\nOperation will only accept <code>1</code> if the worksheet has a non-zero Excise Tax amount."
          },
          "backOrderedFlag": {
            "type": "boolean",
            "enum": [
              0,
              1
            ],
            "description": "Defaults to <code>0</code> for newly added worksheet items.\n\nOnly valid for conventional purchase order worksheets with **ORDERED** status. \\\nNot valid for receive-only worksheets."
          },
          "totalAllowances": {
            "type": "number",
            "format": "double",
            "description": "Calculates the package and unit values for allowances.\n\nValid for either purchase order worksheet type with **PENDING** or **ORDERED** status."
          },
          "totalCharges": {
            "type": "number",
            "format": "double",
            "description": "Calculates the package and unit values for charges.\n\nValid for either purchase order worksheet type with **PENDING** or **ORDERED** status."
          },
          "totalCost": {
            "type": "number",
            "format": "double",
            "description": "Total cost of a worksheet item, which is comprised of the total ordered quantity of the item on the Purchase Order and the calculated cost of the item.\nWhen the totalCost field is omitted or null, an item's total cost is calculated using catalog costs, cost change worksheets, and last cost.\n\nUpdates the *Ordered Total Cost* value for purchase order worksheets with a **PENDING** status. \\\nUpdates the *Invoiced Total Cost* value for purchase order worksheets with a **ORDERED** status."
          },
          "itemTagQuantity": {
            "type": "string",
            "maxLength": 3,
            "description": "Number of Item Tags to print."
          },
          "signQuantity": {
            "type": "string",
            "maxLength": 1,
            "description": "Number of Signs to print."
          },
          "shelfTagQuantity": {
            "type": "string",
            "maxLength": 1,
            "description": "Number of Shelf Labels to print."
          }
        }
      },
      "purchaseOrderDetail": {
        "type": "object",
        "operationId": "purchaseOrderDetail",
        "properties": {
          "worksheetName": {
            "type": "string",
            "example": "VENDOR-013396-123-123",
            "description": "Name given to worksheet.",
            "maxLength": 40
          },
          "worksheetAlias": {
            "type": "string",
            "example": "My recent order",
            "description": "Optional alias that may have been given to the worksheet.",
            "maxLength": 40
          },
          "worksheetVendorCompany": {
            "type": "string",
            "example": "My Vendor",
            "description": "Vendor / supplier name.",
            "maxLength": 25
          },
          "worksheetVendorCode": {
            "type": "string",
            "example": "VENDOR",
            "description": "Vendor / supplier code.",
            "maxLength": 10
          },
          "worksheetSubmittedDate": {
            "type": "string",
            "format": "datetime",
            "example": "2023-01-20 11:57:52.321",
            "description": "Date the worksheet was submitted."
          },
          "worksheetPurchaseEmpFirstName": {
            "type": "string",
            "description": "First name of employee who created the worksheet.",
            "maxLength": 30
          },
          "worksheetPurchaseEmpLastName": {
            "type": "string",
            "description": "Last name of employee who created the worksheet.",
            "maxLength": 30
          },
          "worksheetPurchaseEmpNumber": {
            "type": "integer",
            "description": "Employee number of employee who created the worksheet."
          },
          "worksheetOrderNumber": {
            "type": "integer",
            "description": "Order number for the worksheet.",
            "maxLength": 20
          },
          "worksheetTerms": {
            "type": "string",
            "example": "Credit Card",
            "description": "Supplier terms.",
            "maxLength": 30
          },
          "worksheetReceivingStoreName": {
            "type": "string",
            "example": "RS Location 12",
            "description": "Name of the store receiving the order.",
            "maxLength": 60
          },
          "worksheetReceivingStoreNumber": {
            "type": "string",
            "example": "12",
            "description": "Store number of the store receiving the order.",
            "maxLength": 10
          },
          "worksheetSubmitViaGateway": {
            "type": "boolean",
            "description": "0: Order was eligible to be processed by Gateway\n1: Order was not eligible to be processed by Gateway"
          },
          "worksheetReceivingEmpFirstName": {
            "type": "string",
            "description": "First name of employee who received the order.",
            "maxLength": 30
          },
          "worksheetReceivingEmpLastName": {
            "type": "string",
            "description": "Last name of employee who received the order.",
            "maxLength": 30
          },
          "worksheetReceivingEmpNumber": {
            "type": "integer",
            "description": "Employee number of employee who received the order."
          },
          "worksheetReferenceNumber": {
            "type": "string",
            "description": "Invoice reference number associated with the order.",
            "maxLength": 30
          },
          "worksheetTrackingNumber": {
            "type": "string",
            "description": "Tracking number associated with the order.",
            "maxLength": 50
          },
          "worksheetInvoiceNumber": {
            "type": "string",
            "description": "Invoice number associated with the order.",
            "maxLength": 30
          },
          "worksheetInvoiceDate": {
            "type": "string",
            "format": "datetime",
            "example": "2023-01-20 11:57:52.321",
            "description": "Date order was invoiced.",
            "maxLength": 20
          },
          "worksheetFreightOnBoard": {
            "type": "string",
            "description": "Comment related to point at which freight changes hands from supplier to buyer.",
            "maxLength": 20
          },
          "worksheetExciseTax": {
            "type": "number",
            "format": "decimal",
            "description": "Excise tax related to the order."
          },
          "worksheetExciseTaxAuthority": {
            "type": "string",
            "description": "Excise tax authority related to the order.",
            "maxLength": 25
          },
          "worksheetPurchaseTotal": {
            "type": "number",
            "format": "decimal",
            "description": "Cost of the order."
          },
          "worksheetFreightCharges": {
            "type": "number",
            "format": "decimal",
            "description": "Freight charges related to the order."
          },
          "worksheetDistributeFreight": {
            "type": "boolean",
            "description": "1 if distribute freight option was checked, else 0."
          },
          "worksheetMiscCharges": {
            "type": "number",
            "format": "decimal",
            "description": "Miscellaneous charges related to the order."
          },
          "worksheetDiscount": {
            "type": "number",
            "format": "decimal",
            "description": "Discount related to the order."
          },
          "worksheetTax": {
            "type": "number",
            "format": "decimal",
            "description": "Tax related to the order."
          },
          "worksheetExpectedPurchaseTotal": {
            "type": "number",
            "format": "decimal",
            "description": "Expected total cost of the order."
          },
          "worksheetInvoiceTotal": {
            "type": "number",
            "format": "decimal",
            "description": "Actual total cost of the order."
          },
          "worksheetExchangeRate": {
            "type": "number",
            "format": "decimal",
            "description": "Exchange rate of the order."
          },
          "worksheetSupplierUnitID": {
            "type": "string",
            "description": "Supplier stock number / unit ID for the item.",
            "example": "132801",
            "maxLength": 15
          },
          "worksheetSupplierUnitDescription": {
            "type": "string",
            "description": "Supplier unit description for the item.",
            "example": "BOX",
            "maxLength": 30
          },
          "worksheetQtyInOrderUnit": {
            "type": "number",
            "format": "decimal",
            "description": "Supplier unit quantity for the supplier unit.",
            "example": "10"
          },
          "worksheetItemID": {
            "type": "string",
            "description": "The Item ID / Scan code of the item.",
            "maxLength": 14
          },
          "worksheetItemName": {
            "type": "string",
            "description": "The name of the item.",
            "maxLength": 254
          },
          "worksheetItemReceiptAlias": {
            "type": "string",
            "description": "The receipt alias of the item.",
            "maxLength": 32
          },
          "worksheetItemSize": {
            "type": "string",
            "description": "The size of the item.",
            "maxLength": 20
          },
          "worksheetItemBrandName": {
            "type": "string",
            "description": "The brand name of the item.",
            "maxLength": 30
          },
          "worksheetItemPricingDivider": {
            "type": "integer",
            "description": "Pricing divider of the item.",
            "example": "10"
          },
          "worksheetItemBasePrice": {
            "type": "number",
            "format": "decimal",
            "description": "Base price of the item."
          },
          "worksheetItemDepartmentName": {
            "type": "string",
            "description": "The department name of the item.",
            "maxLength": 30
          },
          "worksheetItemShelfLocation": {
            "type": "string",
            "description": "The shelf location of the item.",
            "maxLength": 30
          },
          "worksheetItemSuggestedRetail": {
            "type": "number",
            "format": "decimal",
            "description": "Suggested retail price of the item."
          },
          "worksheetItemGlobalPF1": {
            "type": "string",
            "description": "Power field 1 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF2": {
            "type": "string",
            "description": "Power field 1 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF3": {
            "type": "string",
            "description": "Power field 3 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF4": {
            "type": "string",
            "description": "Power field 4 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF5": {
            "type": "string",
            "description": "Power field 5 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF6": {
            "type": "string",
            "description": "Power field 6 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF7": {
            "type": "string",
            "description": "Power field 7 of the item.",
            "maxLength": 30
          },
          "worksheetItemGlobalPF8": {
            "type": "string",
            "description": "Power field 8 of the item.",
            "maxLength": 30
          },
          "worksheetOrderedQuantity": {
            "type": "number",
            "format": "decimal",
            "description": "Quantity of the item that was ordered."
          },
          "worksheetShippedQuantity": {
            "type": "number",
            "format": "decimal",
            "description": "Quantity of the item that was shipped."
          },
          "worksheetReceivedQuantity": {
            "type": "number",
            "format": "decimal",
            "description": "Quantity of the item that was received."
          },
          "worksheetItemVerified": {
            "type": "boolean",
            "description": "1 if the item has been verified, else 0."
          },
          "worksheetItemOrderCost": {
            "type": "number",
            "format": "decimal",
            "description": "Total cost of the item, accounting for quantity."
          },
          "worksheetItemInvoiceCost": {
            "type": "number",
            "format": "decimal",
            "description": "Total cost of the item as invoiced, accounting for allowances, etc."
          },
          "worksheetItemPkgTempDiscount": {
            "type": "number",
            "format": "decimal",
            "description": "Temporary discount of the item."
          },
          "worksheetItemPkgAllowance": {
            "type": "number",
            "format": "decimal",
            "description": "Total allowance for the item as calculated after commit (if type parameter is 0), else at submission."
          },
          "worksheetItemPkgCharges": {
            "type": "number",
            "format": "decimal",
            "description": "Total charges for the item."
          },
          "worksheetItemUnitTempDiscount": {
            "type": "number",
            "format": "decimal",
            "description": "Unit allowance for the item."
          },
          "worksheetItemUnitAllowance": {
            "type": "number",
            "format": "decimal",
            "description": "Additional unit allowance for the item."
          },
          "worksheetItemUnitCharges": {
            "type": "number",
            "format": "decimal",
            "description": "Unit charges for the item."
          },
          "worksheetItemTotalTempDiscount": {
            "type": "number",
            "format": "decimal",
            "description": "Base allowance for the item."
          },
          "worksheetItemTotalAllowance": {
            "type": "number",
            "format": "decimal",
            "description": "Allowance for the item, accounting for allowances, etc."
          },
          "worksheetItemTotalCharges": {
            "type": "number",
            "format": "decimal",
            "description": "Total charges for the item, accounting for quantity."
          },
          "worksheetItemBackordered": {
            "type": "boolean",
            "description": "1: Item was back ordered\n0: Item was not back ordered"
          },
          "worksheetItemReceived": {
            "type": "boolean",
            "description": "1: Item was received\n0: Item was not received"
          },
          "worksheetItemExciseApplied": {
            "type": "boolean",
            "description": "1: Item has had excise tax applied\n0: Item has not had excise tax applied"
          },
          "worksheetItemDiscountApplied": {
            "type": "boolean",
            "description": "1: Item has \"distribute discounts\" checked\n0: Item does not have \"distribute discounts\" checked"
          },
          "existingWorksheetId": {
            "type": "string",
            "example": "113416-1000",
            "description": "The PK-CPK of the Purchase Order worksheet, as referenced and obtained from the CATAPULT database."
          }
        }
      },
      "priceChangeDetail": {
        "type": "object",
        "properties": {
          "worksheetCreated": {
            "type": "datetime",
            "example": "2022-02-03 12:00:00.000",
            "description": "Creation date <code>WRK_CreateDate</code> for the returned worksheet."
          },
          "worksheetPriority": {
            "type": "integer",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "1",
            "description": "Defines priority level <code>PSW_PriorityLevel</code> of the returned worksheet:\n* **1** - High\n* **2** - Medium\n* **3** - Low \\\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#priority\">Worksheet Priority</a>."
          },
          "worksheetMemo": {
            "type": "string",
            "maxLength": 254,
            "example": "Ven Dors A-Z Supplies",
            "description": "Enter the supplier name into the worksheet memo field <code>PSW_Memo</code> \nwhen the Price Change Worksheet is created in Web Office. This supplier name will then\ndisplay in the worksheetMemo response parameter.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#memo\">Worksheet Memo</a>."
          },
          "itemID": {
            "type": "string",
            "maxLength": 14,
            "example": "3145236",
            "description": "The UPC <code>INV_scanCode</code> associated with an inventory record on the worksheet."
          },
          "worksheetStartDate": {
            "type": "datetime",
            "example": "2022-03-14 06:00:00.000",
            "description": "The start date <code>PSW_startTime</code> for the temporary price change on the returned worksheet. \n  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#startdate\">Price Change Start</a>."
          },
          "worksheetEndDate": {
            "type": "datetime",
            "example": "2022-03-18 23:59:59.000",
            "description": "The end date <code>PSW_endTime</code> for the temporary price change on the returned worksheet.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#enddate\">Price Change End</a>."
          },
          "worksheetIdentifier": {
            "type": "string",
            "example": "100021",
            "description": "The unique identifier <code>WRK_CPK + WRK_PK</code> for the returned worksheet."
          },
          "worksheetSalePrice": {
            "type": "string",
            "format": "decimal(16,4)",
            "example": 100.99,
            "description": "The temporary non-retail price <code>PSD_promotionalPrice_pl1</code> of an inventory record from the returned worksheet."
          },
          "worksheetSaleDiscount": {
            "type": "string",
            "maxLength": 30,
            "example": "Mid-March Discount",
            "description": "The discount name <code>DIS_Description</code> associated with an inventory record from the returned worksheet.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#discount\">Price Change Auto Discount</a>."
          },
          "worksheetItemDescription": {
            "type": "string",
            "example": "Gala Apple",
            "description": "Description of the inventory record as entered on the returned worksheet.\nIf this field is not directly available, the operation will return either the <code>INV_Name</code> or <code>INV_ReceiptAlias</code> instead.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#receiptalias\">Receipt Alias (Price Change)</a>."
          },
          "worksheetName": {
            "type": "string",
            "maxLength": 40,
            "example": "Seasonal Price Change",
            "description": "Returns the name of the committed worksheet <code>WRK_Name</code> with an active temporary price change between the requested start and end dates.\n  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#Name\">Name (Price Change)</a>."
          },
          "worksheetItemSize": {
            "type": "string",
            "example": "12",
            "description": "Total size/amount of the inventory record <code>INV_Size</code> as entered on the returned worksheet.\n\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=398#BP-size\">Size (Inventory Maintenance)</a>."
          },
          "worksheetCreateEmpFirstName": {
            "type": "string",
            "example": "Bob",
            "description": "**Available with CATAPULT 5.6.104+**\n\nDisplays the **First Name** of the store employee who created the Price and Cost Change worksheet. This name is managed on each employee's record in CATAPULT Web Office."
          },
          "worksheetCreateEmpLastName": {
            "type": "string",
            "example": "Smith",
            "description": "**Available with CATAPULT 5.6.104+**\n\nDisplays the **Last Name** of the store employee who created the Price and Cost Change worksheet. This name is managed on each employee's record in CATAPULT Web Office."
          },
          "worksheetCreateEmpNumber": {
            "type": "string",
            "example": "7",
            "description": "**Available with CATAPULT 5.6.104+**\n\nDisplays the **Employee ID** of the store employee who created the Price and Cost Change worksheet. This ID is managed on each employee's record in CATAPULT Web Office."
          },
          "worksheetCommitEmpFirstName": {
            "type": "string",
            "example": "Terry",
            "description": "**Available with CATAPULT 5.6.104+**\n\nDisplays the **First Name** of the authorized employee who committed the Price and Cost Change worksheet from CATAPULT Web Office. This name is managed on the employee's record in CATAPULT Web Office."
          },
          "worksheetCommitEmpLastName": {
            "type": "string",
            "example": "Smith",
            "description": "**Available with CATAPULT 5.6.104+**\n\nDisplays the **Last Name** of the authorized employee who committed the Price and Cost Change worksheet from CATAPULT Web Office. This name is managed on the employee's record in CATAPULT Web Office."
          },
          "worksheetCommitEmpNumber": {
            "type": "string",
            "example": "8",
            "description": "**Available with CATAPULT 5.6.104+**\n\nDisplays the **Employee ID** of the authorized employee who committed the Price and Cost Change worksheet from CATAPULT Web Office. This ID is managed on the employee's record in CATAPULT Web Office."
          },
          "worksheetItemCost": {
            "type": "string",
            "format": "decimal(16,4)",
            "example": 10.99,
            "description": "**Available with CATAPULT 5.6.117+**\n\nThe new cost entered on the worksheet."
          }
        }
      },
      "inventoryAdjustments_get": {
        "type": "object",
        "properties": {
          "worksheetName": {
            "type": "string",
            "maxLength": 40,
            "example": "Broken Goods",
            "description": "Returns the name of the committed Inventory Adjustment worksheet <code>WRK_Name</code> between the requested start and end dates.\n  \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1733\">Name (Inventory Adjustment)</a>."
          },
          "worksheetTimestampCommitted": {
            "type": "string",
            "format": "date",
            "example": "2022-02-03 12:00:00",
            "description": "Returns the date and time that the Inventory Adjustment worksheet was committed [WRK_TimestampCommitted] \nOnly those worksheets with a worksheetTimestampCommitted date within the startDate and endDate will be returned."
          },
          "worksheetItemID": {
            "type": "string",
            "maxLength": 14,
            "example": "4011",
            "description": "The UPC [INV_scanCode] associated with an item that was on the committed Inventory Adjustment worksheet. \nNote that if an item was an Alternate ID of the base item, then alternate ID [ASC_Scancode] is used.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=408\">Alternate ID</a>."
          },
          "worksheetItemDescription": {
            "type": "string",
            "maxLength": 32,
            "example": "Gala Apple",
            "description": "Description of the inventory record as entered on the returned worksheet.\nIf this field is not directly available, the operation will return either the <code>INV_Name</code> or <code>INV_ReceiptAlias</code> instead.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20683#receiptalias\">Receipt Alias (Price Change)</a>."
          },
          "worksheetBaseItemAdjustment": {
            "type": "string",
            "example": "4",
            "description": "Number of adjustments recorded for the item.\n - When the item is a base item, this field will be the same as Adjustment Quantity. \n - When the item is an Alternate ID of the base item, the field will display the Adjustment Quantity * Alternate ID Quantity."
          },
          "worksheetItemAdjustmentReason": {
            "type": "string",
            "maxLength": 32,
            "example": "Spoiled",
            "description": "Reason applied for the inventory adjustment.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1269\"> Reasons </a>."
          },
          "worksheetItemAdjustmentMemo": {
            "type": "string",
            "maxLength": 254,
            "example": "Any data from the worksheet memo",
            "description": "Worksheet memo field"
          }
        }
      },
      "inventoryAdjustmentItems": {
        "type": "object",
        "required": [
          "ItemID",
          "Adjustment"
        ],
        "properties": {
          "ItemID": {
            "type": "string",
            "description": "The <a href=\"https://olm.ecrs.com/5-6/?page_id=40208\">Item ID</a> or <a href=\"https://olm.ecrs.com/5-6/?page_id=40218\">Alternate ID</a> of the item.",
            "example": "CCK-001"
          },
          "Adjustment": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "Amount to adjust the item by (positive or negative).",
            "example": 12.5
          },
          "Reason": {
            "type": "string",
            "description": "The <a href=\"https://olm.ecrs.com/5-6/?page_id=41079\">Reason</a> for the adjustment.",
            "example": "Damaged"
          },
          "Comments": {
            "type": "string",
            "description": "Comment related to the adjustment.",
            "example": "Box arrived this way"
          }
        }
      },
      "physicalInventoryDetails": {
        "type": "object",
        "properties": {
          "worksheetName": {
            "type": "string",
            "example": "End of Year Physical Inventory",
            "description": "Returns the name of the Physical Inventory worksheet <code>WRK_Name</code> with a commit date within <code>startDate</code> and <code>endDate</code>."
          },
          "worksheetTimestampCommitted": {
            "type": "datetime",
            "description": "The date and time that the Physical Inventory worksheet as committed <code>WRK_TimestampCommitted</code> . Only those worksheets with a <code>worksheetTimestampCommitted</code> date within the <code>startDate</code> and <code>endDate</code> will be returned."
          },
          "worksheetItemID": {
            "type": "string",
            "maxLength": 14,
            "example": "3145236",
            "description": "The UPC <code>INV_scanCode</code> associated with an inventory record on the worksheet."
          },
          "worksheetItemDescription": {
            "type": "string",
            "example": "Gala Apple",
            "description": "Description of the inventory record as entered on the returned worksheet.\nIf this field is not directly available, the operation will return either the <code>INV_Name</code> or <code>INV_ReceiptAlias</code> instead."
          },
          "worksheetPriorOnHand": {
            "type": "string",
            "maxLength": 7,
            "example": "76.000",
            "description": "Displays the On Hand quantity associated with an item on the worksheet. This quantity will be the count that is currently present on the item - for the store - in CATAPULT. This is essentially how many the system thinks that it has available for the item in-store.\nEXAMPLE with Base Item + Alternate IDs: \n* 3 items on a Physical Inventory worksheet\n* 1 Base Item with an On Hand count of '2'\n* 1 Alternate ID that represents a 4-pack of the Base Item with an On Hand Count of 5 (5 x 4 = 20 Base Items)\n* 1 Alternate ID that represents a 6-pack of the Base Item with an On Hand Count of 6 (6 x 6 = 36 Base Items)\n* The end result would be one returned item (the Base Item) with a <code>worksheetPriorOnHand</code> of **58**."
          },
          "worksheetCountedOnHand": {
            "type": "string",
            "maxLength": 7,
            "example": "75.000",
            "description": "Returns the entered/counted On Hand quantity associated with an item on the worksheet. This quantity will be the count manually entered by a store employee as the Physical Inventory is performed. \nFor example, if a Physical Inventory worksheet was started, and the <code>worksheetPriorOnHand</code> was '15' for crackers, the store employee would enter '14' as the <code>worksheetCountedOnHand</code> at the end of the Physical Inventory (counting the items in store)."
          }
        }
      },
      "summaryFinancialDataDetails": {
        "type": "object",
        "properties": {
          "groupDate": {
            "type": "date",
            "example": "2023-09-05",
            "description": "Returns the date in <code>YYYY-MM-DD</code> format that the associated response data is applicable for."
          },
          "storeID": {
            "type": "string",
            "example": "RS1",
            "description": "The Store ID, as entered in CATAPULT Web Office, that the associated response data is tied to."
          },
          "storeName": {
            "type": "string",
            "example": "Main Store 123",
            "description": "The Store Name, as entered in CATAPULT Web Office, that the associated response data is tied to."
          },
          "dataType": {
            "type": "string",
            "example": "Discounts - Line Item",
            "description": "The type of financial data. This could be any one of the following types:\n- Buydowns\n- Discounts - Line Item\n- Discounts - Subtotal\n- Discounts - Excluded\n- Drops\n- Dynamic Promotions\n- Dynamic Promotions - Excluded\n- Loans\n- Negatives\n- Paid In \n- Paid Out\n- Taxes\n- Taxes - Exempt\n- Tenders\n- Totals (Gross Sales or Gross Sales - Training Mode)\n- Vendor Coupons"
          },
          "description": {
            "type": "string",
            "example": "10% OFF Subtotal",
            "description": "Returns the name or description of the <code>dataType</code>, as entered in CATAPULT Web Office."
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": "75.000",
            "description": "Returns the total dollar amount of the financial data collected for the reporting range."
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "example": "9.0000",
            "description": "Returns the total number of <code>dataType</code> records for the reporting range; note that \"Taxes\" and \"Taxes - Exempt\" are excluded from this count."
          },
          "omitFromSales": {
            "type": "boolean",
            "example": "1",
            "description": "Returns if an individual <code>dataType</code> was set to be omitted from sales or not. \n- 1 = <code>dataType</code> is omitted from sales\n- 0 = <code>dataType</code> is NOT omitted from sales"
          },
          "foreignCurrencyExchangeRate": {
            "type": "number",
            "format": "decimal",
            "example": "0.3800",
            "description": "ONLY applies to <code>dataType</code> = Tenders\nReturns the Currency Exchange Rate for a Foreign Tender, as entered in CATAPULT Web Office. "
          },
          "foreignCurrencyAmount": {
            "type": "number",
            "format": "decimal",
            "example": "-400.0000",
            "description": "ONLY applies to the <code>dataType</code> = Tenders\nReturns the Currency Amount for a Foreign Tender."
          }
        }
      },
      "summaryItemData": {
        "type": "object",
        "properties": {
          "summaryDepartmentNumber": {
            "type": "string",
            "example": "140",
            "description": "Returns the value entered into the \"Department ID\" field in CATAPULT Web Office for the returned Department. This field will only be returned when the **Type** parameter is set to 0 (for Department formatted data)."
          },
          "summaryDepartmentName": {
            "type": "string",
            "example": "ALCOHOL",
            "description": "Returns the text entered into the \"Department Name\" field in CATAPULT Web Office for the returned Department. This field will only be returned when the **Type** parameter is set to 0 (for Department formatted data)."
          },
          "summaryItemID": {
            "type": "string",
            "maxLength": 14,
            "example": "3145236",
            "description": "The UPC <code>INV_scanCode</code> associated with an inventory record in the summarized transaction data. This field will only be returned when the **Type** parameter is set to 1 (for Item formatted data)."
          },
          "summaryItemDescription": {
            "type": "string",
            "example": "Gala Apple",
            "description": "\"Receipt Alias\" associated with an inventory record in the summarized transaction data. This field will only be returned when the **Type** parameter is set to 1 (for Item formatted data)."
          },
          "summaryQtySold": {
            "type": "string",
            "example": "13.000000",
            "description": "Returns the total net quantity sold of a Department (if **Type** parameter = 0) OR the total net quantity sold of an item (if **Type** parameter = 1) within the specified period. "
          },
          "summaryExtCost": {
            "type": "string",
            "example": "76.509900",
            "description": "Returns the total cost of the goods sold for a Department (if **Type** parameter = 0) OR the total cost of an item (if **Type** parameter = 1) within the specified period. "
          },
          "summaryNetSales": {
            "type": "string",
            "example": "105.290000",
            "description": "Returns the total dollars sold for a Department (if **Type** parameter = 0) OR the total dollars sold for an item (if **Type** parameter = 1) within the specified period."
          },
          "summaryStoreNumber": {
            "type": "string",
            "example": "CA",
            "description": "Returns the value entered into the \"Store ID\" field in CATAPULT Web Office for the specified store(s), or for the store where the API is being executed (if no store was specified)."
          },
          "summaryStoreName": {
            "type": "string",
            "example": "CALIFORNIA AVENUE STORE",
            "description": "Returns the value entered into the \"Store Name\" field in CATAPULT Web Office for the specified store(s), or for the store where the API is being executed (if no store was specified)."
          }
        }
      },
      "giftCardBulk": {
        "type": "object",
        "properties": {
          "GiftCardNumber": {
            "type": "string",
            "minLength": 19,
            "maxLength": 19,
            "example": "999X4KE25KU9MPGJ3E5",
            "description": "This field represents the automatically generated code/number of each E-Gift Card. This code will always be 19 alphanumeric digits. If a <code>prefix</code> is established as a query parameter, the entered prefix - if valid - will be included in this field. "
          },
          "BeginningBalance": {
            "type": "number",
            "example": 25,
            "description": "This field represents the pre-loaded amount on the E-Gift Card, which is established with the <code>amount</code> query parameter. "
          },
          "SecurityCode": {
            "type": "integer",
            "maxLength": 3,
            "example": 497,
            "description": "This field represents the Personal Identificatiion Number (PIN) of the E-Gift Card. This field will only be present if the <code>pin_required</code> query parameter is set to **1**. "
          },
          "IssuingEmployeeID": {
            "type": "integer",
            "maxLength": 9,
            "example": 487659,
            "description": "This field represents the Employee ID of the store employee that initiated the request to create/generate the E-Gift Cards. This ID is established on the corresponding Employee Record in CATAPULT Web Office. "
          },
          "IssuingEmployeeFirst": {
            "type": "string",
            "maxLength": 30,
            "example": "Sally",
            "description": "This field represents the First Name of the store employee that initiated the request to create/generate the E-Gift Cards. This name is established on the corresponding Employee Record in CATAPULT Web Office."
          },
          "IssuingEmployeeLast": {
            "type": "string",
            "maxLength": 30,
            "example": "Jones",
            "description": "This field represents the Last Name of the store employee that initiated the request to create/generate the E-Gift Cards. This name is established on the corresponding Employee Record in CATAPULT Web Office."
          },
          "IssueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2024-05-31 09:20.57.731",
            "description": "This field represents the date and time on which the E-Gift Cards were successfully generated. "
          }
        }
      },
      "labelDataExport": {
        "type": "object",
        "properties": {
          "Dept": {
            "type": "integer",
            "minLength": 1,
            "maxLength": 8,
            "example": 23,
            "description": "This field represents the ID of the item's assigned Department. "
          },
          "PLU": {
            "type": "string",
            "minLength": 1,
            "maxLength": 14,
            "example": 99515,
            "description": "This field represents the Item ID of the item.  "
          },
          "Price": {
            "type": "number",
            "maxLength": 10000000000000000,
            "example": 2.99,
            "description": "This field represents price of the item. "
          },
          "NetWt": {
            "type": "string",
            "maxLength": 20,
            "example": "16 OZ",
            "description": "This field represents the item's \"Size\", as entered in CATAPULT Web Office."
          },
          "ShelfLife": {
            "type": "integer",
            "maxLength": 999,
            "example": 5,
            "description": "This field represents the entered Shelf Life of the item."
          },
          "Ingredients": {
            "type": "string",
            "example": "Red Potatoes, Dill, Sour Cream, Mayonnaise, Salt, Pepper, Sugar",
            "description": "This field represents the entered Ingredients for the item."
          },
          "Description1": {
            "type": "string",
            "maxLength": 64,
            "example": "string",
            "description": "This field represents the Deli Attribute Description Line 1 of the item, as entered on the item's Inventory Record in CATAPULT Web Office. Note that if an item does not have an assigned Description Line 1, the default Description Line 1 - as entered in the *Scale Settings* of CATAPULT Web Office will be used (if present). "
          },
          "Description2": {
            "type": "string",
            "maxLength": 64,
            "example": "string",
            "description": "This field represents the Deli Attribute Description Line 2 of the item, as entered on the item's Inventory Record in CATAPULT Web Office. Note that if an item does not have an assigned Description Line 2, the default Description Line 2 - as entered in the *Scale Settings* of CATAPULT Web Office will be used (if present)."
          },
          "Description3": {
            "type": "string",
            "maxLength": 64,
            "example": "string",
            "description": "This field represents the Deli Attribute Description Line 3 of the item, as entered on the item's Inventory Record in CATAPULT Web Office. Note that if an item does not have an assigned Description Line 3, the default Description Line 3 - as entered in the *Scale Settings* of CATAPULT Web Office will be used (if present)."
          },
          "Description4": {
            "type": "string",
            "maxLength": 64,
            "example": "string",
            "description": "This field represents the Deli Attribute Description Line 4 of the item, as entered on the item's Inventory Record in CATAPULT Web Office. Note that if an item does not have an assigned Description Line 4, the default Description Line 4 - as entered in the *Scale Settings* of CATAPULT Web Office will be used (if present)."
          },
          "UserAssigned1": {
            "type": "string",
            "maxLength": 30,
            "example": "string",
            "description": "This field represents the Deli Attribute User Assigned 1 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "UserAssigned2": {
            "type": "string",
            "maxLength": 30,
            "example": "string",
            "description": "This field represents the Deli Attribute User Assigned 2 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "UserAssigned3": {
            "type": "string",
            "maxLength": 30,
            "example": "string",
            "description": "This field represents the Deli Attribute User Assigned 3 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "UserAssigned4": {
            "type": "string",
            "maxLength": 30,
            "example": "string",
            "description": "This field represents the Deli Attribute User Assigned 4 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "UserAssigned5": {
            "type": "integer",
            "maxLength": 30,
            "example": 5,
            "description": "This field represents the Deli Attribute User Assigned 5 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "UserAssigned6": {
            "type": "integer",
            "maxLength": 30,
            "example": 6,
            "description": "This field represents the Deli Attribute User Assigned 6 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "UserAssigned7": {
            "type": "integer",
            "maxLength": 30,
            "example": 7,
            "description": "This field represents the Deli Attribute User Assigned 7 field of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "Scaleable": {
            "type": "bit",
            "example": "yes",
            "description": "This field represents if the item has an assigned Weight Profile.\n  - <code>yes</code> = The item has an assigned Weight Profile\n  - <code>no</code> = The item does NOT have an assigned Weight Profile. "
          },
          "Tare": {
            "type": "number",
            "maxLength": 999999999999.999,
            "example": 0.25,
            "description": "This field represents the \"Fixed\" tare weight, which is established on the item's Weight Profile in CATAPULT Web Office."
          },
          "CategoryNum": {
            "type": "integer",
            "example": 12,
            "description": "This field represents ID of the item's assigned Category."
          },
          "Logo1": {
            "type": "integer",
            "example": 1,
            "description": "This field represents the Image 1 field for the \"Logo numbers\" Deli Attribute of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "Logo2": {
            "type": "integer",
            "example": 2,
            "description": "This field represents the Image 2 field for the \"Logo numbers\" Deli Attribute of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "Logo3": {
            "type": "integer",
            "example": 3,
            "description": "This field represents the Image 3 field for the \"Logo numbers\" Deli Attribute of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "Logo4": {
            "type": "integer",
            "example": 4,
            "description": "This field represents the Image 4 field for the \"Logo numbers\" Deli Attribute of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "Logo5": {
            "type": "integer",
            "example": 5,
            "description": "This field represents the Image 5 field for the \"Logo numbers\" Deli Attribute of the item, as entered on the item's Inventory Record in CATAPULT Web Office."
          },
          "CountryOfOrigin": {
            "type": "string",
            "maxLength": 100,
            "example": "USA",
            "description": "This field represents the entered Country of Origin for the item. "
          },
          "Brand": {
            "type": "string",
            "maxLength": 30,
            "example": "Urban Market Deli",
            "description": "This field represents the name of the item's assigned Brand. "
          },
          "SubDepartment": {
            "type": "string",
            "maxLength": 30,
            "example": "Prepared Foods",
            "description": "This field represents the name of the item's assigned Sub-Department."
          },
          "Category": {
            "type": "string",
            "maxLength": 30,
            "example": "Cold Items",
            "description": "This field represents the name of the item's assigned Category."
          },
          "SubCategory": {
            "type": "string",
            "maxLength": 30,
            "example": "Weighted Cold Items",
            "description": "This field represents the name of the item's assigned Sub-Category."
          },
          "Variety": {
            "type": "string",
            "maxLength": 30,
            "example": "House-Made",
            "description": "This field represents the name of the item's assigned Variety. "
          }
        }
      },
      "batch-item": {
        "type": "object",
        "required": [
          "action",
          "itemId"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove"
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          },
          "deptNo": {
            "type": "integer",
            "description": "Required for new items.\nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=department-id\">Department ID</a>."
          },
          "deptName": {
            "type": "string",
            "maxLength": 30,
            "description": "Required for new departments.\nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=department\">Department Name</a>."
          },
          "name": {
            "type": "string",
            "maxLength": 254
          },
          "receiptAlias": {
            "type": "string",
            "maxLength": 32,
            "description": "Required for new items.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=398#ReceiptAlias\">Receipt Alias</a>."
          },
          "brand": {
            "type": "string",
            "maxLength": 30,
            "description": "'NONE' to set to null/no choice.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1602\">Brand</a>."
          },
          "size": {
            "type": "string",
            "maxLength": 20
          },
          "promptList": {
            "type": "string",
            "maxLength": 30,
            "description": "List of prompts names separated by colon(:). Enter 'NONE' to remove all. \\\nEntered list will replace any currently listed prompts."
          },
          "discountList": {
            "type": "string",
            "maxLength": 30,
            "description": "List of discount names separated by colon(:). Enter 'NONE' to remove all; 'DEFAULT' to use department default. \\\nEntered list will replace any currently listed discounts.\nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=discount\">Discount</a>."
          },
          "suggestedRetail": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=suggested-retail-price-srp\">SRP</a>."
          },
          "pf1": {
            "type": "string",
            "maxLength": 30,
            "description": "List Power Field 1. Enter 'NONE' to set to null/no choice.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=412\">Power Fields (Global)</a>."
          },
          "pf2": {
            "type": "string",
            "maxLength": 30,
            "description": "List Power Field 2. Enter 'NONE' to set to null/no choice."
          },
          "pf3": {
            "type": "string",
            "maxLength": 30,
            "description": "List Power Field 3. Enter 'NONE' to set to null/no choice."
          },
          "pf4": {
            "type": "string",
            "maxLength": 30,
            "description": "List Power Field 4. Enter 'NONE' to set to null/no choice."
          },
          "pf5": {
            "type": "string",
            "maxLength": 30
          },
          "pf6": {
            "type": "string",
            "maxLength": 30
          },
          "pf7": {
            "type": "string",
            "maxLength": 30
          },
          "pf8": {
            "type": "string",
            "maxLength": 30
          },
          "memo": {
            "type": "string",
            "maxLength": 254,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=memo\">Memo</a>."
          },
          "linkGroup": {
            "type": "string",
            "description": "- This parameter allows you to specify a Linked Item Group for the item. Note that if a Linked Item Group is specified, it will be appllied to ALL stores for that item. Enter 'NONE' to set to null/no choice.\n- **NOTE**: If you want to choose an item's Linked Item Group for a specific store, use the **Batch Item Store Data** endpoint. \n- See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-groups\">Item Groups</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=400#LinkedItem\">Linked Items</a>"
          },
          "nonReturnable": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=returns\">Returns</a>."
          },
          "embeddedPriceAsUnit": {
            "type": "boolean"
          },
          "countryOfOrigin": {
            "type": "string",
            "maxLength": 28
          },
          "subDeptNumber": {
            "type": "integer",
            "description": "Must also specify a deptNo.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=31321\">Item Hierarchy</a>."
          },
          "categoryNumber": {
            "type": "integer",
            "description": "Must also specify a deptNo and subDeptNumber.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=31321\">Item Hierarchy</a>."
          },
          "subCategoryNumber": {
            "type": "integer",
            "description": "Must also specify a deptNo, subDeptNumber, and categoryNumber.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=31321\">Item Hierarchy</a>."
          },
          "varietyNumber": {
            "type": "integer",
            "description": "Must also specify a deptNo, subDeptNumber, categoryNumber, and varietyNumber.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=31321\">Item Hierarchy</a>"
          }
        }
      },
      "batch-itemPrice": {
        "type": "object",
        "required": [
          "itemId",
          "zoneId"
        ],
        "properties": {
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          },
          "zoneId": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=zones\">Zones</a>."
          },
          "retail1": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=price-levels\">Price Levels</a>."
          },
          "promptForPrice1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=prompt-for-price\">Prompt for Price</a>."
          },
          "discount1": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#AutoDiscount\">Auto Discount</a>."
          },
          "quantityOnly1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#PriceLevelQty\">Count Towards Quantity</a>."
          },
          "idealMargin1": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=ideal-margin-and-ideal-price\">Ideal Margin</a>."
          },
          "divider1": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=16519\">Pricing Divider</a>."
          },
          "retail2": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice2": {
            "type": "boolean"
          },
          "discount2": {
            "type": "string",
            "maxLength": 30
          },
          "quantityOnly2": {
            "type": "boolean"
          },
          "idealMargin2": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "divider2": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "retail3": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice3": {
            "type": "boolean"
          },
          "discount3": {
            "type": "string",
            "maxLength": 30
          },
          "quantityOnly3": {
            "type": "boolean"
          },
          "idealMargin3": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "divider3": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "retail4": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice4": {
            "type": "boolean"
          },
          "discount4": {
            "type": "string",
            "maxLength": 30
          },
          "quantityOnly4": {
            "type": "boolean"
          },
          "idealMargin4": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "divider4": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "familyLine": {
            "type": "string",
            "maxLength": 30,
            "description": "Family Line name. Enter 'NONE' to set to null/no choice.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1484\">Family Lines</a>."
          },
          "retailAccountingPrice": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "Applies to all stores in the Zone specified. Use 'Batch Item Store Data' for updates to a single store. This value will be recorded with transactions.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#RetailAcct\">Retail Value</a>."
          },
          "retailAccountingReportCode": {
            "type": "string",
            "maxLength": 30,
            "description": "Applies to all stores in the Zone specified. Use 'Batch Item Store Data' for updates to a single store. This value will be recorded with transactions.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#RetailAcct\">Report Code</a>."
          }
        }
      },
      "batch-itemStoreData": {
        "type": "object",
        "required": [
          "itemId",
          "storeId"
        ],
        "properties": {
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          },
          "storeId": {
            "type": "string",
            "maxLength": 10,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>."
          },
          "taxList": {
            "type": "string",
            "maxLength": 30,
            "description": "List of tax names separated by colon(:). Enter 'NONE' to remove all; 'DEFAULT' to use department default. \\\nEntered list will replace any currently listed taxes.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#Taxes\">Taxes</a>."
          },
          "specialTendersList": {
            "type": "string",
            "maxLength": 30,
            "description": "List of tender names separated by colon(:). Enter 'NONE' to remove all; 'DEFAULT' to use department default. \\\nEntered list will replace any currently listed special tenders.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#SpecialTendersAllowed\">Special Tenders Allowed</a>."
          },
          "itemRestriction": {
            "type": "string",
            "maxLength": 30,
            "description": "Enter 'NONE' to set to null/no choice; 'DEFAULT' to use department default. \\\nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-restrictions\">Item Restrictions</a>."
          },
          "lastCost": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=last-cost\">Last Cost</a>."
          },
          "defaultSupplierId": {
            "type": "string",
            "maxLength": 10,
            "description": "Enter 'NONE' to set to null/no choice. \\\nItem must have an ordering item ID for selected supplier.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410\">Suppliers Section</a>."
          },
          "loyaltyMultiplier": {
            "type": "string",
            "format": "decimal(4,3)",
            "description": "Negative number will use department default.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#LoyaltyAccrualMultiplier\">Loyalty Accrual Multiplier</a>."
          },
          "weightProfile": {
            "type": "string",
            "maxLength": 30,
            "description": "Enter 'NONE' to set to null/no choice; 'DEFAULT' to use department default. \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#WeightsAndRestrictions\">Weight Profiles</a>."
          },
          "qtyEntry": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#RequireQtyEntry\">Require Quantity Entry at POS</a>."
          },
          "discontinued": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#InventoryDiscontinued\">Discontinued (Inventory)</a>."
          },
          "promptForPriceMin": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#pfp-ranges\">Prompt for Price Ranges</a>."
          },
          "promptForPriceMax": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#pfp-ranges\">Prompt for Price Ranges</a>."
          },
          "retailAccountingPrice": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#RetailAcct\">Retail Value</a>."
          },
          "retailAccountingReportCode": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=402#RetailAcct\">Report Code</a>."
          },
          "linkGroup": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-groups\">Item Groups</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=400#LinkedItem\">Linked Items</a>."
          },
          "pf1": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=power-fields\">PowerFields</a>."
          },
          "pf2": {
            "type": "string",
            "maxLength": 30
          },
          "pf3": {
            "type": "string",
            "maxLength": 30
          },
          "pf4": {
            "type": "string",
            "maxLength": 30
          },
          "pf5": {
            "type": "string",
            "maxLength": 30
          },
          "pf6": {
            "type": "string",
            "maxLength": 30
          },
          "pf7": {
            "type": "string",
            "maxLength": 30
          },
          "pf8": {
            "type": "string",
            "maxLength": 30
          },
          "location": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#shelf-information-tab-location\">Location</a>."
          },
          "shelfSequence": {
            "type": "integer",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=400#shelf-information-tab\">Shelf Information Tab</a>. Note that this field can support a maximum value of 999999999."
          }
        }
      },
      "batch-itemAlternateId": {
        "type": "object",
        "required": [
          "action",
          "itemId",
          "alternateId",
          "alternateIdQty"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove"
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          },
          "alternateId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=408#AltIDScancode\">Alternate ID Scancode</a>."
          },
          "alternateIdReceiptAlias": {
            "type": "string",
            "maxLength": 32,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=408#AltIDReceiptAlias\">Alternate ID Receipt Alias</a>."
          },
          "alternateIdQty": {
            "type": "string",
            "format": "decimal(12,3)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=408#Qty\">Alternate ID Quantity</a>."
          }
        }
      },
      "batch-itemOrderingInformation": {
        "type": "object",
        "required": [
          "action",
          "itemId",
          "supplierId",
          "orderId"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R",
              "D",
              "E"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove\n* 'E' - Un-Discontinue\n* 'D' - Discontinue"
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          },
          "supplierId": {
            "type": "string",
            "maxLength": 10,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=677#SupplierID\">Supplier ID</a>."
          },
          "orderId": {
            "type": "string",
            "maxLength": 15,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=supplier-unit-id-suid\">Supplier Unit ID</a>."
          },
          "orderQty": {
            "type": "string",
            "format": "decimal(12,3)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#Quantity\">Order Quantity</a>."
          },
          "orderUnitName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=supplier-unit\">Supplier Unit Name</a>."
          },
          "orderPrimary": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=410#Default\">Default Supplier</a>."
          },
          "vendorDistributionCenterID": {
            "type": "string",
            "maxLength": 32,
            "description": "This field, which is available with **CATAPULT 5.6.101 and newer**, allows you to look up or create a Supplier Distribution Center record's \"ID\" field. Each inventory item's *orderId* (a.k.a Supplier Unit ID) will be used to identify the correct Supplier where the Distribution Center needs to be looked up or added. If this field is populated, along with the vendorDistributionCenterName, new Distribution Center records will be added for the supplier if they are not originally found. Likewise, if this field is populated with NONE, then the Distribution Center will be removed/unassociated from the item's *orderId*. "
          },
          "vendorDistributionCenterName": {
            "type": "string",
            "maxLength": 32,
            "description": "This field, which is available with **CATAPULT 5.6.101 and newer**, allows you to enter the name of a new Distribution Center being added for a supplier. Each inventory item's *orderId* (a.k.a Supplier Unit ID) will be used to identify the correct Supplier where the Distribution Center needs to be added. This field is only required when adding a new Distribution Center for a Supplier. If this field is not populated, and a new Distribution Center is being added, the vendorDistributionCenterID value will be copied and used as the \"Name\" for the new Distribution Center."
          },
          "minimumOrder": {
            "type": "number",
            "example": "12.000",
            "maxLength": 999999999999.999,
            "description": "This field allows you to specify the Supplier Unit ID's minimum order quantity (i.e., the quantity of the Supplier Unit ID (SUID) that must be ordered from the supplier at any given time). Please note the following about this field:\n  - The Minimum Order Quantity entered must be a positive number. If negative, the request will fail. \n  - The Minimum Order Quantity entered must not be longer than the maximum length of 999999999999.999. If longer, then the request will fail. \n  - This field is not required, but if no Minimum Order Quantity is specified, and default value of **0.000** will be used.\n  - Only if <code>minimumOrder</code> is included in the request will the corresponding field be updated for the inventory item. Meaning, other aspects about the item's Supplier Unit ID can be updated or specified and the <code>minimumOrder</code> can remain unchanged, if desired."
          },
          "suggestedMultiple": {
            "type": "integer",
            "example": "2",
            "maxLength": 999999999,
            "description": "This field allows you to specify the Supplier Unit ID's Case Pack Multiple, which is the multiple that the SUID must be ordered by. For example, if an item's <code>suggestedMultiple</code> is set to '2', and it was recommended to order 7.25 of the SUID, then '8' would be ordered for the SUID, as 8 is a multiple of 2. Please note the following about this field:\n  - The Case Pack Multiple entered must be a positive integer. If negative, the request will fail. \n  - The Case Pack Multiple entered must not be longer than the maximum length of 999999999. If longer, then the request will fail.\n  - This field is not required, but if no Case Pack Multiple is specified, and default value of **0** will be used.\n  - Only if <code>suggestedMultiple</code> is included in the request will the corresponding field be updated for the inventory item. Meaning, other aspects about the item's Supplier Unit ID can be updated or specified and the <code>suggestedMultiple</code> can remain unchanged, if desired."
          }
        }
      },
      "batch-itemPermanentPriceCost": {
        "type": "object",
        "required": [
          "zoneName",
          "startDate",
          "endDate",
          "itemId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 40,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Name\">Name (P&CC)</a>."
          },
          "zoneName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Zones\">Zones (P&CC)</a>."
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Start\">Start Date (P&CC)</a>."
          },
          "memo": {
            "type": "string",
            "maxLength": 254,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Memo\">Memo (P&CC)</a>."
          },
          "commitAtStore": {
            "type": "boolean",
            "description": "List of store numbers separated by colon(:). If not supplied then it will default to all stores in the Pricing Zone. \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#CommitAtStore\">Commit at Store (P&CC)</a>."
          },
          "itemType": {
            "type": "string",
            "enum": [
              "I",
              "F",
              "G"
            ],
            "description": "**I** - Item (Default) \\\n**F** - Family Line \\\n**G** - Item Group"
          },
          "itemId": {
            "type": "string",
            "maxLength": 30,
            "description": "Identifier for itemType parameter: Use <code>itemId</code> for Items and specify the <code>name</code> for Family Lines and Item Groups.\nmaxLength for Family Line names is 254, for Item IDs and Item Group names the maxLength is 30. \\\nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>, <a href=\"https://olm.ecrs.com/5-5/?page_id=1484\">Family Lines</a>, <a href=\"https://olm.ecrs.com/glossary/?term=item-groups\">Item Groups</a>."
          },
          "cost": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#NewCost\">New Cost</a>."
          },
          "price1": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#AdjustPrice\">Adjust Price</a>."
          },
          "promptForPrice1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#PromptForPrice\">Prompt for Price (P&CC)</a>."
          },
          "discount1": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL1 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL1 auto discounts for this line item. \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#AutoDiscount\">Auto Discount (P&CC)</a>."
          },
          "qtyOnly1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Quantity\">Count Towards Quantity (P&CC)</a>."
          },
          "idealMargin1": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#IdealMargin\">Ideal Margin (P&CC)</a>."
          },
          "noManualDiscount1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#NoManualDiscounts\">No Manual Discounts (P&CC)</a>."
          },
          "divider1": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Divider\">Pricing Divider (P&CC)</a>."
          },
          "priceLabel1": {
            "type": "string",
            "maxLength": 30,
            "example": "Base Price Adjustment",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the permanent Price & Cost Change worksheet for **Price Level 1**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 1 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be permanet; i.e., the **Permanent** box *must* be checked in CATAPULT Web Office for that Price Label Type. If a temporary Price Label Type is specified for an item, that item will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are temporary when permanent price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "price2": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice2": {
            "type": "boolean"
          },
          "discount2": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL2 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL2 auto discounts for this line item."
          },
          "qtyOnly2": {
            "type": "boolean"
          },
          "idealMargin2": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "noManualDiscount2": {
            "type": "boolean"
          },
          "divider2": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "priceLabel2": {
            "type": "string",
            "maxLength": 30,
            "example": "Every Day Low Price",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the permanent Price & Cost Change worksheet for **Price Level 2**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 2 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be permanent; i.e., the **Permanent** box *must* be checked in CATAPULT Web Office for that Price Label Type. If a temporary Price Label Type is specified for an item, that item will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are temporary when permanent price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "price3": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice3": {
            "type": "boolean"
          },
          "discount3": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL3 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL3 auto discounts for this line item."
          },
          "qtyOnly3": {
            "type": "boolean"
          },
          "idealMargin3": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "noManualDiscount3": {
            "type": "boolean"
          },
          "divider3": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "priceLabel3": {
            "type": "string",
            "maxLength": 30,
            "example": "Employee Price Adjustment",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the permanent Price & Cost Change worksheet for **Price Level 3**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 3 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be permanent; i.e., the **Permanent** box *must* be checked in CATAPULT Web Office for that Price Label Type. If a temporary Price Label Type is specified for an item, that item will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are temporary when permanent price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "price4": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice4": {
            "type": "boolean"
          },
          "discount4": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL4 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL4 auto discounts for this line item."
          },
          "qtyOnly4": {
            "type": "boolean"
          },
          "idealMargin4": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "noManualDiscount4": {
            "type": "boolean"
          },
          "divider4": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "priceLabel4": {
            "type": "string",
            "maxLength": 30,
            "example": "Members Special",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the permanent Price & Cost Change worksheet for **Price Level 4**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 4 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be permanent; i.e., the **Permanent** box *must* be checked in CATAPULT Web Office for that Price Label Type. If a temporary Price Label Type is specified for an item, that item will fail to update/insert into the permanent Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are temporary when permanent price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "worksheetTypeProfileName": {
            "type": "string",
            "maxLength": 30,
            "description": "**Available with CATAPULT 5.6.121 and newer.** \\\nAllows you to define what Worksheet Type Profile is assigned to the permanent Price & Cost Change worksheet. This assignment relies on the <code>name</code> that you enter for the Worksheet Type Profile in the request row. With this in mind, there are three scenarios possible when assigning a Worksheet Type Profile:\n1. **No Worksheet Type Profile Name is Specified** - If no Worksheet Type Profile is specified, the **Default** Worksheet Type Profile will be assigned to the worksheet. This essentially specifies that the worksheet is not assigned a type.\n2. **Worksheet Type Profile Name is Specified, but Name Doesn't Match** - If a Worksheet Type Profile is specified, but the entered <code>name</code> of the profile doesn't match any prexisting profile, CATAPULT will create a new Worksheet Type Profile - with the entered Name - and assign it to the worksheet. Please note, this new profile will have the 'Prevent ordering during active worksheet period' setting disabled, and will not have any store-specific settings in place.\n3. **Worksheet Type Profile Name is Specified, and Name Matches** - If a Worksheet Type Profile is specified, and the entered <code>name</code> of the profile matches an existing profile, the existing/specified Worksheet Type Profile will be assigned to the worksheet. Any and all settings associated with the Worksheet Type Profile will also be assigned and apply to the worksheet."
          }
        }
      },
      "batch-itemPriceCost": {
        "type": "object",
        "required": [
          "zoneName",
          "startDate",
          "endDate",
          "itemId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 40,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Name\">Name (P&CC)</a>."
          },
          "zoneName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Zones\">Zones (P&CC)</a>."
          },
          "stores": {
            "type": "string",
            "maxLength": 10,
            "description": "List of store numbers separated by colon(:). \\\nIf not supplied then it will default to all stores in the Pricing Zone.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>."
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Allows you to specify the date and time that the temporary changes included on the Price and Cost Change worksheet are to take effect. The format of this field is <code>mm/dd/yy hh:mm am/pm</code>. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Start\">Start Date (P&CC)</a>."
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "Allows you to specify the date and time that the temporary changes included on the Price and Cost Change worksheet are to **end**. Omitting this field will not result in a permanent Price & Cost Change worksheet; this field must be populated to determine when the worksheet's changes will end. The format of this field is <code>mm/dd/yy hh:mm am/pm</code>. See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#End\">End Date</a>."
          },
          "priority": {
            "type": "integer",
            "description": "Worksheet priority if multiple start at the same time. \\\n**1** - High \\\n**2** - Medium \\\n**3** - Low \\\nDefault is 3.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Priority\">Priority (P&CC)</a>."
          },
          "commitAtStore": {
            "type": "boolean",
            "description": "Defaults to <code>0</code> when not specified. Enter <code>1</code> and the worksheet will be created at the applicable stores\nbut require manual input to activate and commit.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#CommitAtStore\">Commit at Store (P&CC)</a>."
          },
          "itemType": {
            "type": "string",
            "enum": [
              "I",
              "F",
              "G"
            ],
            "description": "**I** - Item (Default) \\\n**F** - Family Line \\\n**G** - Item Group"
          },
          "itemId": {
            "type": "string",
            "maxLength": 30,
            "description": "Identifier for itemType parameter: Use <code>itemId</code> for Items and specify the <code>name</code> for Family Lines and Item Groups.\nmaxLength for Family Line names is 254, for Item IDs and Item Group names the maxLength is 30. \\\nSee also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>, <a href=\"https://olm.ecrs.com/5-5/?page_id=1484\">Family Lines</a>, <a href=\"https://olm.ecrs.com/glossary/?term=item-groups\">Item Groups</a>."
          },
          "cost": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#NewCost\">New Cost</a>."
          },
          "price1": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#AdjustPrice\">Adjust Price</a>."
          },
          "promptForPrice1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#PromptForPrice\">Prompt for Price (P&CC)</a>."
          },
          "discount1": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL1 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL1 auto discounts for this line item. \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#AutoDiscount\">Auto Discount (P&CC)</a>."
          },
          "qtyOnly1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Quantity\">Count Towards Quantity (P&CC)</a>."
          },
          "idealMargin1": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#IdealMargin\">Ideal Margin (P&CC)</a>."
          },
          "noManualDiscount1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#NoManualDiscounts\">No Manual Discounts (P&CC)</a>."
          },
          "divider1": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Divider\">Pricing Divider (P&CC)</a>."
          },
          "priceLabel1": {
            "type": "string",
            "maxLength": 30,
            "example": "3-Day Deals",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the temporary Price & Cost Change worksheet for **Price Level 1**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 1 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be temporary; i.e., the **Permanent** box must not be checked in CATAPULT Web Office for that Price Label Type. If a \"Permanent\" Price Label Type is specified for an item, that item will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are permanent when temporary price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "price2": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice2": {
            "type": "boolean"
          },
          "discount2": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL2 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL2 auto discounts for this line item."
          },
          "qtyOnly2": {
            "type": "boolean"
          },
          "idealMargin2": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "noManualDiscount2": {
            "type": "boolean"
          },
          "divider2": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "priceLabel2": {
            "type": "string",
            "maxLength": 30,
            "example": "Every Day Low Price",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the temporary Price & Cost Change worksheet for **Price Level 2**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 2 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be temporary; i.e., the **Permanent** box must not be checked in CATAPULT Web Office for that Price Label Type. If a \"Permanent\" Price Label Type is specified for an item, that item will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are permanent when temporary price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "price3": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice3": {
            "type": "boolean"
          },
          "discount3": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL3 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL3 auto discounts for this line item."
          },
          "qtyOnly3": {
            "type": "boolean"
          },
          "idealMargin3": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "noManualDiscount3": {
            "type": "boolean"
          },
          "divider3": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "priceLabel3": {
            "type": "string",
            "maxLength": 30,
            "example": "Weekend Deals",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the temporary Price & Cost Change worksheet for **Price Level 3**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 3 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be temporary; i.e., the **Permanent** box must not be checked in CATAPULT Web Office for that Price Label Type. If a \"Permanent\" Price Label Type is specified for an item, that item will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are permanent when temporary price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "price4": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "promptForPrice4": {
            "type": "boolean"
          },
          "discount4": {
            "type": "string",
            "maxLength": 30,
            "description": "Define the PL4 auto discount to use. \\\nUse <code>default</code> to instruct the worksheet to use any auto discount presently attached on the inventory record. \\\nSpecify the <code>name</code> of an auto discount to include it on worksheet for this line item. \\\nOmit this parameter to exclude PL4 auto discounts for this line item."
          },
          "qtyOnly4": {
            "type": "boolean"
          },
          "idealMargin4": {
            "type": "string",
            "format": "decimal(16,4)"
          },
          "noManualDiscount4": {
            "type": "boolean"
          },
          "divider4": {
            "type": "integer",
            "minimum": 1,
            "maximum": 99
          },
          "priceLabel4": {
            "type": "string",
            "maxLength": 30,
            "example": "Members Special",
            "description": "**Available with CATAPULT 5.7.144 and Newer**\n  - Allows you to specify the desired Price Label Type that should be assigned to an item on the temporary Price & Cost Change worksheet for **Price Level 4**. This specification is done by entering the name of the Price Label Type, exactly as it appears in CATAPULT Web Office. \n  - If the entered name of a Price Label Type doesn't match a record in CATAPULT Web Office, or the Price Label Type does not exist yet, only the associated item(s) - not the entire batch - will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: Price Label 4 not found\" will display for the item in <code>batch/importMessages</code>. \n  - The specified Price Label Type can only be temporary; i.e., the **Permanent** box must not be checked in CATAPULT Web Office for that Price Label Type. If a \"Permanent\" Price Label Type is specified for an item, that item will fail to update/insert into the temporary Price & Cost Change worksheet. In addition, the message \"RAISERROR executed: One or more PriceLabels are permanent when temporary price labels are required\" will display in <code>batch/importMessages</code>."
          },
          "worksheetTypeProfileName": {
            "type": "string",
            "maxLength": 30,
            "description": "**Available with CATAPULT 5.6.121 and newer.**\nAllows you to define what Worksheet Type Profile is assigned to the temporary Price & Cost Change worksheet. This assignment relies on the <code>name</code> that you enter for the Worksheet Type Profile in the request row. With this in mind, there are three scenarios possible when assigning a Worksheet Type Profile:\n1. **No Worksheet Type Profile Name is Specified** - If no Worksheet Type Profile is specified, the **Default** Worksheet Type Profile will be assigned to the worksheet. This essentially specifies that the worksheet is not assigned a type.\n2. **Worksheet Type Profile Name is Specified, but Name Doesn't Match** - If a Worksheet Type Profile is specified, but the entered <code>name</code> of the profile doesn't match any prexisting profile, CATAPULT will create a new Worksheet Type Profile - with the entered Name - and assign it to the worksheet. Please note, this new profile will have the 'Prevent ordering during active worksheet period' setting disabled, and will not have any store-specific settings in place.\n3. **Worksheet Type Profile Name is Specified, and Name Matches** - If a Worksheet Type Profile is specified, and the entered <code>name</code> of the profile matches an existing profile, the existing/specified Worksheet Type Profile will be assigned to the worksheet. Any and all settings associated with the Worksheet Type Profile will also be assigned and apply to the worksheet."
          }
        }
      },
      "batch-inventoryLabel": {
        "type": "object",
        "required": [
          "name",
          "storeNumber",
          "itemId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 40,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=18872#Name\">Worksheet Name (IL)</a>."
          },
          "storeNumber": {
            "type": "string",
            "maxLength": 10,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=723#StoreID\">Store ID</a>."
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=18872#AddItems\">Add Items (IL)</a>."
          },
          "itemTagQuantity": {
            "type": "string",
            "maxLength": 3,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1945#Type\">Type (IL)</a>."
          },
          "shelfLabelQuantity": {
            "type": "string",
            "maxLength": 1,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1945#Type\">Type (IL)</a>."
          },
          "signsQuantity": {
            "type": "string",
            "maxLength": 1,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1945#Type\">Type (IL)</a>."
          }
        }
      },
      "batch-storePromotion": {
        "type": "object",
        "required": [
          "action",
          "receiptAlias",
          "type",
          "value"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R",
              "D",
              "E"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove\n* 'E' - Un-Discontinue\n* 'D' - Discontinue"
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#Name\">Name (Promo)</a>."
          },
          "zoneName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#Zone\">Pricing Zone (Promo)</a>."
          },
          "receiptAlias": {
            "type": "string",
            "maxLength": 32,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#ReceiptAlias\">Receipt Alias (Promo)</a>."
          },
          "minPurchase": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#MinPurchaseAmt\">Minimum Purchase Amount</a>."
          },
          "requireMin": {
            "type": "boolean"
          },
          "maxPerTrans": {
            "type": "integer",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#MaxPurchaseAmt\">Maximum Purchase Amount</a>."
          },
          "maxTransactionDiscount": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#MaxTransactionDiscount\">Maximum Discount/Transaction</a>."
          },
          "maxDiscountPerPromo": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#MaxDiscountPerPromo\">Maximum Discount/Promotion</a>."
          },
          "itemGroups": {
            "type": "string",
            "maxLength": 30,
            "description": "List of Item Group names, their Distribution Percentage (%), and their Required Quantity are separated by a colon(:). \nDistinct Item Groups (and their associated values) are separated by a pipe (|).\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#ItemGroup\">Item Groups (Promo)</a>.\n\n*This field is required when request Action = 'U'*"
          },
          "scheduleName": {
            "type": "string",
            "maxLength": 30,
            "description": "Must provide name of an existing schedule in WebOffice. Providing a Schedule Name means StartDate and EndDate will not be used.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#Schedule\">Promotion Schedule</a>."
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Format yyyy-mm-dd.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#StartDate\">Promotion Start Day</a>."
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Format yyyy-mm-dd.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#EndDate\">Promotion End Day</a>."
          },
          "startTime": {
            "type": "string",
            "format": "time",
            "description": "Start Time for each day of schedule. 24-hour format (hh:mm:ss) required, defaults to 00:00:00.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#StartTime\">Promotion Start Time</a>."
          },
          "endTime": {
            "type": "string",
            "format": "time",
            "description": "End Time for each day of schedule. 24-hour format (hh:mm:ss) required, defaults to 00:00:00.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#EndTime\">Promotion End Time</a>."
          },
          "type": {
            "type": "integer",
            "description": "**1** - Price \\\n**2** - Amount \\\n**3** - Percent \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#Type\">Promotion Type</a>."
          },
          "value": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "Meaning of this value depends on type of promotion selected.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#Type\">Promotion Type</a>."
          },
          "excludeGroup": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#ExcludeItemGroup\">Excluded Item Groups (Promo)</a>."
          },
          "storeCoupon": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#StoreCoupon\">Store Coupon (Promo)</a>."
          },
          "customers": {
            "type": "string",
            "format": "long varchar",
            "description": "List of customer numbers separated by colon (:).\nThis field is only used if named Store Coupon is supplied.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#StoreCouponCustomerGroup\">Customer Groups (Promo)</a>."
          },
          "oneTimeUse": {
            "type": "boolean"
          },
          "couponEntryType": {
            "type": "integer",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#StoreCouponTriggers\">Store Coupon Triggers</a>."
          },
          "stackLevel": {
            "type": "integer",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#stacklevels\">Promotion Stack Levels</a>."
          },
          "applyToPl1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#PriceLevel\">Promotion Price Levels</a>."
          },
          "applyToPl2": {
            "type": "boolean"
          },
          "applyToPl3": {
            "type": "boolean"
          },
          "applyToPl4": {
            "type": "boolean"
          }
        }
      },
      "batch-itemPromotion": {
        "type": "object",
        "required": [
          "action",
          "receiptAlias",
          "startDate",
          "endDate"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R",
              "D",
              "E"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove\n* 'E' - Un-Discontinue\n* 'D' - Discontinue"
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#Name\">Name (Promo)</a>."
          },
          "zoneName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#Zone\">Pricing Zone (Promo)</a>."
          },
          "receiptAlias": {
            "type": "string",
            "maxLength": 32,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#ReceiptAlias\">Receipt Alias (Promo)</a>."
          },
          "minPurchase": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#MinPurchaseAmt\">Minimum Purchase Amount</a>."
          },
          "requireMin": {
            "type": "boolean"
          },
          "maxPerTrans": {
            "type": "integer",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#MaxPurchaseAmt\">Maximum Purchase Amount</a>."
          },
          "maxTransactionDiscount": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#MaxTransactionDiscount\">Maximum Discount/Transaction</a>."
          },
          "maxDiscountPerPromo": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#MaxDiscountPerPromo\">Maximum Discount/Promotion</a>."
          },
          "scheduleName": {
            "type": "string",
            "maxLength": 30,
            "description": "Must provide name of an existing schedule in WebOffice. Providing a Schedule Name means StartDate and EndDate will not be used.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#Schedule\">Promotion Schedule</a>."
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Format yyyy-mm-dd.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#StartDate\">Promotion Start Day</a>."
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Format yyyy-mm-dd.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#EndDate\">Promotion End Day</a>."
          },
          "startTime": {
            "type": "string",
            "format": "time",
            "description": "Start Time for each day of schedule. 24-hour format (hh:mm:ss) required, defaults to 00:00:00.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#StartTime\">Promotion Start Time</a>."
          },
          "endTime": {
            "type": "string",
            "format": "time",
            "description": "End Time for each day of schedule. 24-hour format (hh:mm:ss) required, defaults to 00:00:00.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#EndTime\">Promotion End Time</a>."
          },
          "type": {
            "type": "integer",
            "description": "**2** - Amount \\\n**3** - Percent \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#Type\">Promotion Type</a>."
          },
          "value": {
            "type": "string",
            "format": "decimal(16,4)",
            "description": "Meaning of this value depends on type of promotion selected.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#Type\">Promotion Type</a>."
          },
          "excludeGroup": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#ExcludeItemGroup\">Excluded Item Groups (Promo)</a>."
          },
          "storeCoupon": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2691#StoreCoupon\">Store Coupon (Promo)</a>."
          },
          "customers": {
            "type": "string",
            "format": "long varchar",
            "description": "List of customer numbers separated by colon (:).\nThis field is only used if named Store Coupon is supplied. \nFormat and maxLength of individual CUS_AccountNum is <code>char(16)</code>. \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2697#StoreCouponCustomerGroup\">Customer Groups (Promo)</a>."
          },
          "deferrable": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2695#Deferrable\">Deferrable Usages</a>."
          },
          "usesPerPeriod": {
            "type": "integer",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2695#UsesPerPeriod\">Uses per Period</a>."
          },
          "resetPeriod": {
            "type": "integer",
            "description": "**1** - Never \\\n**2** - Every X days \\\n**3** - Weekly \\\n**4** - Monthly \\\nDefaults to 'Never'.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2695#ResetUseLimits\">Reset Usages</a>."
          },
          "periodDow": {
            "type": "integer",
            "description": "Required when resetPeriod = **3** (Weekly). Accepted values: \\\n**1** = Sunday \\\n**2** = Monday \\\n**3** = Tuesday \\\n**4** = Wednesday \\\n**5** = Thursday \\\n**6** = Friday \\\n**7** = Saturday \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2695#ResetUseLimits\">Reset Usages (Day of Week)</a>."
          },
          "periodDays": {
            "type": "integer",
            "description": "Required when resetPeriod = **2** (Every X Days).\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2695#ResetUseLimits\">Reset Usages (Every X Days)</a>."
          },
          "applyToPl1": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=2705#PriceLevel\">Promotion Price Levels</a>."
          },
          "applyToPl2": {
            "type": "boolean"
          },
          "applyToPl3": {
            "type": "boolean"
          },
          "applyToPl4": {
            "type": "boolean"
          }
        }
      },
      "batch-itemGroupConventional": {
        "type": "object",
        "required": [
          "itemGroupName",
          "itemId"
        ],
        "properties": {
          "itemGroupName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-groups\">Item Groups</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=400#LinkedItem\">Linked Items</a>."
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          }
        }
      },
      "batch-itemGroupStore": {
        "type": "object",
        "required": [
          "itemGroupName",
          "itemId"
        ],
        "properties": {
          "itemGroupName": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-groups\">Item Groups</a>, <a href=\"https://olm.ecrs.com/5-6/?page_id=400#LinkedItem\">Linked Items</a>."
          },
          "itemId": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/glossary/?term=item-id\">Item ID</a>."
          },
          "storeGroupName": {
            "type": "string",
            "maxLength": 30,
            "description": "If no Store Group is defined then the function defaults to all stores.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1179#StoreGroupName\">Name (Store Group)</a>."
          }
        }
      },
      "batch-customer": {
        "type": "object",
        "required": [
          "action",
          "customerId",
          null
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove"
          },
          "customerId": {
            "type": "string",
            "maxLength": 16,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#CustomerID\">Customer ID</a>."
          },
          "prefix": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#Prefix\">Customer Prefix</a>."
          },
          "firstName": {
            "type": "string",
            "maxLength": 25,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#FirstName\">First Name (Customer)</a>."
          },
          "middleName": {
            "type": "string",
            "maxLength": 25,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#MiddleName\">Middle Name (Customer)</a>."
          },
          "lastName": {
            "type": "string",
            "maxLength": 25,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#LastName\">Last Name (Customer)</a>."
          },
          "suffix": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#Suffix\">Customer Suffix</a>."
          },
          "alias": {
            "type": "string",
            "maxLength": 25,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#Alias\">Customer Alias</a>."
          },
          "pf1": {
            "type": "string",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=506\">PowerFields (Customer)</a>."
          },
          "pf2": {
            "type": "string",
            "maxLength": 30
          },
          "pf3": {
            "type": "string",
            "maxLength": 30
          },
          "pf4": {
            "type": "string",
            "maxLength": 30
          },
          "pf5": {
            "type": "string",
            "maxLength": 30
          },
          "pf6": {
            "type": "string",
            "maxLength": 30
          },
          "pf7": {
            "type": "string",
            "maxLength": 30
          },
          "pf8": {
            "type": "string",
            "maxLength": 30
          },
          "title": {
            "type": "string",
            "maxLength": 25,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#Title\">Customer Title</a>."
          },
          "company": {
            "type": "string",
            "maxLength": 50,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#Company\">Customer Company</a>."
          },
          "memo": {
            "type": "string",
            "maxLength": 254,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#Memo\">Memo (Customer)</a>."
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "maxLength": 30,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=534#BirthDate\">Birth Date (Customer)</a>."
          },
          "priceLevel": {
            "type": "string",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#PriceLevel\">Price Level (Customer)</a>."
          },
          "optOutReceipt": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#OptOutPrintedReceipt\">Receipt Opt-Out</a>."
          },
          "blockSuspendedSales": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#blocksuspends\">Block Suspended Sales</a>."
          },
          "hideInLookup": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#HideInLookup\">Hide in Lookup</a>."
          },
          "inactive": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#inactive\">Inactive (Customer)</a>."
          },
          "loyalty": {
            "type": "boolean",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#LoyaltyPoints\">Loyalty (Customer)</a>."
          },
          "loyaltyAccrualMultiplier": {
            "type": "number",
            "format": "numeric(4,3)",
            "description": "The loyalty multiplier for the default loyalty program for this customer"
          },
          "taxExempt": {
            "type": "boolean",
            "description": "Defaults to <code>0</code>. Set as <code>1</code> to mark this customer exempt from all taxes.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#TaxExempt\">Tax Exempt</a>."
          },
          "storeCouponList": {
            "type": "string",
            "format": "long varchar",
            "description": "List of Store Coupon names separated by colon (:). Entered values will replace any current values listed on customer record. \\\nEnter 'NONE' to remove all without replacement. Format and maxLength of individual storeCoupon names is <code>char(30)</code>. \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=528#StoreCouponCustGroupList\">Store Coupons / Customer Groups</a>."
          },
          "householdMainCustomerId": {
            "type": "string",
            "maxLength": 16,
            "description": "Customer ID for the customer's Head of Household.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=22643#HeadOfHousehold\">Head of Household</a>."
          },
          "householdRelation": {
            "type": "string",
            "maxLength": 30,
            "description": "Requires householdMainCustomerId be set. Enter text describing relationship to household.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=32644#Type\">Household Relationship</a>."
          },
          "householdCanRedeem": {
            "type": "boolean",
            "description": "Requires householdMainCustomerId be set. Set to 1 to allow customer to redeem loyalty points from household.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=22643#HouseholdMember\">Redeem Household Loyalty</a>."
          },
          "dependentList": {
            "type": "string",
            "format": "long varchar",
            "description": "List of customer dependents. Component field parameters of each individual dependent record are: <code>type</code>, <code>name</code>, <code>birthdate</code> (birthDate is optional). \nDistinct dependent records in the list are delimited by ascii code RS (30 or hex <code>1d</code>). \nThe component fields in each dependent record are delimited by ascii code GS (29 or hex <code>1e</code>). \nDependent types that do not exist in your database are created by the batch process. \\\nBirth Date format: YYYY-MM-DD \\\nExample: <code>Spouse\\x1eCameron\\x1e1991-06-10\\x1dPet\\x1eFido\\x1e2015-10-14</code> \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=22643#Dependents\">Household Dependents</a>."
          }
        }
      },
      "batch-address": {
        "type": "object",
        "required": [
          "action",
          "category",
          "entityId",
          "description"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove"
          },
          "category": {
            "type": "string",
            "enum": [
              "C",
              "E",
              "S",
              "V"
            ],
            "description": "Category of the address:\n* 'C' - Customer Address\n* 'E' - Employee Address\n* 'S' - Store Address\n* 'V' - Vendor / Supplier Address \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1661\">Address Profiles</a>."
          },
          "entityId": {
            "type": "string",
            "maxLength": 30,
            "description": "Exact value of the entityId depends entirely on, and must correspond to, the selected category: it can conditionally be the customerId, employeeId, storeId, or supplierId."
          },
          "description": {
            "type": "string",
            "maxLength": 30,
            "description": "Name of the address description to use. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=5996#AddressDescription\">Address Description</a>."
          },
          "streetaddressline1": {
            "type": "string",
            "maxLength": 50,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=525#Street1\">Address Line 01</a>"
          },
          "streetaddressline2": {
            "type": "string",
            "maxLength": 50,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=525#Street2\">Address Line 02</a>."
          },
          "city": {
            "type": "string",
            "maxLength": 20,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=525#City\">City</a>."
          },
          "stateProvince": {
            "type": "string",
            "maxLength": 2,
            "description": "Uses standard two-character postal abbreviations. \nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=525#StateProvince\">State/Province</a>, <a href=\"https://www.bls.gov/respondents/mwr/electronic-data-interchange/appendix-d-usps-state-abbreviations-and-fips-codes.htm\">USPS State Abbreviations</a>."
          },
          "country": {
            "type": "string",
            "maxLength": 2,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=525#Country\">Country</a>. Country entries of more than 2 characters on an imported record will prevent that record from updating."
          },
          "postalCode": {
            "type": "string",
            "maxLength": 15,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=525#PostalCode\">Postal Code</a>."
          }
        }
      },
      "batch-phoneNumber": {
        "type": "object",
        "required": [
          "action",
          "category",
          "entityId",
          "description",
          "phoneNumber"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove"
          },
          "category": {
            "type": "string",
            "enum": [
              "C",
              "E",
              "S",
              "V"
            ],
            "description": "Category of the address:\n* 'C' - Customer Address\n* 'E' - Employee Address\n* 'S' - Store Address\n* 'V' - Vendor / Supplier Address \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=6441\">Phone Profiles</a>."
          },
          "entityId": {
            "type": "string",
            "maxLength": 30,
            "description": "Exact value of the entityId depends entirely on, and must correspond to, the selected category: it can conditionally be the customerId, employeeId, storeId, or supplierId."
          },
          "description": {
            "type": "string",
            "maxLength": 30,
            "description": "Name of the Phone Number description to use.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=6441#PhoneDescription\">Phone Description</a>."
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 14,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=523#PhoneNumber\">Phone Number</a>."
          }
        }
      },
      "batch-emailAddress": {
        "type": "object",
        "required": [
          "action",
          "category",
          "entityId",
          "description",
          "address"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "U",
              "R"
            ],
            "description": "Type of Action to be Performed:\n* 'U' - Insert or Update\n* 'R' - Remove"
          },
          "category": {
            "type": "string",
            "enum": [
              "C",
              "E",
              "S",
              "V"
            ],
            "description": "Category of the address:\n* 'C' - Customer Address\n* 'E' - Employee Address\n* 'S' - Store Address\n* 'V' - Vendor / Supplier Address \\\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=1530\">E-mail Profiles</a>."
          },
          "entityId": {
            "type": "string",
            "maxLength": 30,
            "description": "Exact value of the entityId depends entirely on, and must correspond to, the selected category: it can conditionally be the customerId, employeeId, storeId, or supplierId."
          },
          "description": {
            "type": "string",
            "maxLength": 30,
            "description": "Enter the name of the Email Description to use.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=6191#EmailDescription\">E-mail Description</a>."
          },
          "address": {
            "type": "string",
            "maxLength": 254,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=518#EmailAddress\">E-mail Address</a>."
          },
          "marketingOptIn": {
            "type": "boolean",
            "description": "Declares if this e-mail address, and subject of the associated maintenance record by extension, has agreed to receive marketing messages.\nDefaults to 0 (disabled) if left empty or not otherwise specified.\nSee also: <a href=\"https://olm.ecrs.com/5-6/?page_id=518#MarketingOptIn\">Marketing Opt-In</a>."
          }
        }
      },
      "batch-binLookupOverride": {
        "type": "object",
        "required": [
          "min"
        ],
        "properties": {
          "min": {
            "type": "string",
            "maxLength": 20,
            "description": "Minimum BIN for range. Note any records within the min and max range are subject to normal type restrictions."
          },
          "max": {
            "type": "string",
            "maxLength": 20,
            "description": "Maximum BIN for range. Defaults to MIN value if not set."
          },
          "type": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "description": "**0** - Not Allowed in SaF processing. \\\n**1** - Allowed in SaF Processing. \\\n**2** - Not allowed for online processing. \\\n**Anything else will be interpreted as 0**"
          }
        }
      },
      "batch-checkFile": {
        "type": "object",
        "required": [
          "accountNumber"
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "description": "Routing number for checking account"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number for checking account"
          }
        }
      },
      "batch-removePriceCost": {
        "type": "object",
        "required": [
          "action",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 40,
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Name\">Name (P&CC)</a>."
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#Start\">Start Date (P&CC)</a>."
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "See also: <a href=\"https://olm.ecrs.com/5-6/?page_id=20712#End\">End Date</a>."
          }
        }
      },
      "batch-importMessage": {
        "type": "object",
        "properties": {
          "messageTime": {
            "type": "string",
            "format": "datetime",
            "description": "The time at which the message was generated."
          },
          "batchType": {
            "type": "string",
            "description": "The type of batch for which this message was generated."
          },
          "messageType": {
            "type": "string",
            "enum": [
              "I",
              "E",
              "W"
            ],
            "description": "The type of message\n  - <code>I</code> - **Informational Message**: These messages are used to indicate that a \"success\" or \"processed\" event occurred.\n  - <code>E</code> - **Error Message**: These messages are used to indicate that a record failed to process. In these events, why the error occurred can be viewed in the <code>detail</code> line of the response. \n  - <code>W</code> - **Warning Message**: These messages are used to indicate a part of the record is failing, but there is enough data to proceed with adding or updating the record. "
          },
          "messageText": {
            "type": "string",
            "description": "The textual message associated with the import batch."
          },
          "detail": {
            "type": "string",
            "description": "**Available with CATAPULT 5.7.143 and newer**, if a failure condition is encountered, this field provides details on why the record(s) failed. "
          }
        }
      }
    },
    "examples": {
      "GET-XML": {
        "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <row customerId=\"40100637000029\"\n  lastName=\"Doe\"\n  firstName=\"John\"\n  middleName=\"\"\n  nickName=\"\"\n  memo=\"\"\n  powerField1=\"\"\n  powerField2=\"\"\n  powerField3=\"\"\n  powerField4=\"\"\n  powerField5=\"\"\n  powerField6=\"\"\n  powerField7=\"\"\n  powerField8=\"\"\n  birthDate=\"1970-01-01\"\n  lastModified=\"2019-12-19 14:43:55.041\"\n  membershipAccount=\"\"\n  checkAcceptanceProfile=\"\"\n  priceLevel=\"\"\n  automaticDiscount=\"\"\n  suppressReceipt=\"false\"\n  loyaltyEnabled=\"true\"\n  loyaltyAccrualMultiplier=\"1.000\"\n  suffix=\"\"\n  prefix=\"\"\n  title=\"\"\n  company=\"\"\n  checkFileMemo=\"\"\n  billToPhoneNumber=\"8281112222\"\n  billToPhoneDescription=\"Home\"\n  billToEmailAddress=\"\"\n  billToEmailDescription=\"\"\n  billToEmailMarketing=\"false\"\n  billToEmailReceipt=\"false\"\n  billToAddressLine1=\"\"\n  billToAddressLine2=\"\"\n  billToAddressCity=\"\"\n  billToAddressStateProv=\"\"\n  billToAddressPostalCode=\"\"\n  billToAddressDescription=\"\"\n  membershipAccountJoined=\"\"\n  hideInLookup=\"false\"\n  customerInactive=\"false\"\n  loyaltyBalances=\"Default Program=.0200|Program A=0.0000|Program B=0.0000\"\n  HeadOfHousehold=\"\"\n  HouseholdAccounts=\"\"\n  Dependents=\"\"\n  lastPurchaseStore=\"123\"\n  lastPurchaseDate=\"2014-08-17\"\n  membershipProfileName=\"\"\n  taxExemption=\"State Tax\"\n  DateCreated=\"2022-02-04 11:30:00.000\"\n  HomeStore=\"Spring Valley Store\"/>\n</root>",
        "summary": "Simple XML Response"
      },
      "GET-CSV": {
        "value": "'lastName','firstName','middleName','nickName','memo','powerField1','powerField2','powerField3','powerField4','powerField5','powerField6','powerField7','powerField8','birthDate','lastModified','membershipAccount','checkAcceptanceProfile','priceLevel','automaticDiscount','suppressReceipt','loyaltyEnabled','loyaltyAccrualMultiplier','suffix','prefix','title','company','checkFileMemo','billToPhoneNumber','billToPhoneDescription','billToEmailAddress','billToEmailDescription','billToEmailMarketing','billToEmailReceipt','billToAddressLine1','billToAddressLine2','billToAddressCity','billToAddressStateProv','billToAddressPostalCode','billToAddressDescription','membershipAccountJoined','hideInLookup','customerInactive','loyaltyBalances','HeadOfHousehold','HouseholdAccounts','Dependents','lastPurchaseStore','lastPurchaseDate','membershipProfileName', 'taxExemption','DateCreated','HomeStore'\n'Doe','John','','','','','','','','','','','','1970-01-01','2019-12-19 14:43:55.041','','','','','false','true','1.000','','','','','','8281112222','Home','','','false','false','','','','','','','','false','false','','','','','123','2014-08-17','','State Tax','2022-02-04 11:30:00.00','Spring Valley Store'",
        "summary": "Simple CSV Response"
      },
      "PUT-XML": {
        "value": "<?xml version='1.1' encoding='UTF-8'?>\n  <root>\n    <row customerId=\"123456789000\"\n    lastName=\"Doe\" \n    firstName=\"Jane\" \n    middleName=\"\" \n    nickName=\"\" \n    memo=\"\" \n    powerField1=\"\" \n    powerField2=\"\" \n    powerField3=\"\" \n    powerField4=\"\" \n    powerField5=\"\" \n    powerField6=\"\" \n    powerField7=\"\" \n    powerField8=\"\" \n    birthDate=\"1970-01-01\" \n    lastModified=\"2019-12-19 14:43:55.041\" \n    membershipAccount=\"\" \n    checkAcceptanceProfile=\"\" \n    priceLevel=\"\" \n    automaticDiscount=\"\" \n    suppressReceipt=\"false\" \n    loyaltyEnabled=\"true\" \n    loyaltyAccrualMultiplier=\"1.000\" \n    suffix=\"\" \n    prefix=\"\" \n    title=\"\" \n    company=\"\" \n    checkFileMemo=\"\" \n    billToPhoneNumber=\"8281112222\" \n    billToPhoneDescription=\"Home\" \n    billToEmailAddress=\"\" \n    billToEmailDescription=\"\" \n    billToEmailMarketing=\"false\" \n    billToEmailReceipt=\"false\" \n    billToAddressLine1=\"\" \n    billToAddressLine2=\"\" \n    billToAddressCity=\"\" \n    billToAddressStateProv=\"\" \n    billToAddressPostalCode=\"\" \n    billToAddressDescription=\"\" \n    membershipAccountJoined=\"\" \n    hideInLookup=\"false\" \n    customerInactive=\"false\" \n    loyaltyBalances=\"\" \n    HeadOfHousehold=\"\" \n    HouseholdAccounts=\"\" \n    Dependents=\"\" \n    lastPurchaseStore=\"123\" \n    lastPurchaseDate=\"2014-08-17\" \n    membershipProfileName=\"\"\n    taxExemption=\"State Tax\"/>\n  </root>",
        "summary": "Simple XML Confirmation Response"
      },
      "PUT-JSON": {
        "value": [
          {
            "customerId": "123456789000",
            "lastName": "Doe",
            "firstName": "Jane",
            "middleName": "",
            "nickName": "",
            "memo": "",
            "powerField1": "",
            "powerField2": "",
            "powerField3": "",
            "powerField4": "",
            "powerField5": "",
            "powerField6": "",
            "powerField7": "",
            "powerField8": "",
            "birthDate": "1970-01-01",
            "lastModified": "2019-12-19 14:43:55.041",
            "membershipAccount": "",
            "checkAcceptanceProfile": "",
            "priceLevel": "",
            "automaticDiscount": "",
            "suppressReceipt": "false",
            "loyaltyEnabled": "true",
            "loyaltyAccrualMultiplier": "1.000",
            "suffix": "",
            "prefix": "",
            "title": "",
            "company": "",
            "checkFileMemo": "",
            "billToPhoneNumber": "8281112222",
            "billToPhoneDescription": "Home",
            "billToEmailAddress": "",
            "billToEmailDescription": "",
            "billToEmailMarketing": "false",
            "billToEmailReceipt": "false",
            "billToAddressLine1": "",
            "billToAddressLine2": "",
            "billToAddressCity": "",
            "billToAddressStateProv": "",
            "billToAddressPostalCode": "",
            "billToAddressDescription": "",
            "membershipAccountJoined": "",
            "hideInLookup": "false",
            "customerInactive": "false",
            "loyaltyBalances": "",
            "HeadOfHousehold": "",
            "HouseholdAccounts": "",
            "Dependents": "",
            "lastPurchaseStore": "123",
            "lastPurchaseDate": "2014-08-17",
            "membershipProfileName": "",
            "taxExemption": "State Tax"
          }
        ],
        "summary": "Simple JSON Confirmation Response"
      },
      "PUT-CSV": {
        "value": "'customerId','lastName','firstName','middleName','nickName','memo','powerField1','powerField2','powerField3','powerField4','powerField5','powerField6','powerField7','powerField8','birthDate','lastModified','membershipAccount','checkAcceptanceProfile','priceLevel','automaticDiscount','suppressReceipt','loyaltyEnabled','loyaltyAccrualMultiplier','suffix','prefix','title','company','checkFileMemo','billToPhoneNumber','billToPhoneDescription','billToEmailAddress','billToEmailDescription','billToEmailMarketing','billToEmailReceipt','billToAddressLine1','billToAddressLine2','billToAddressCity','billToAddressStateProv','billToAddressPostalCode','billToAddressDescription','membershipAccountJoined','hideInLookup','customerInactive','loyaltyBalances','HeadOfHousehold','HouseholdAccounts','Dependents','lastPurchaseStore','lastPurchaseDate','membershipProfileName','taxExemption'\n'123456789000','Doe','Jane','','','','','','','','','','','','1970-01-01','2019-12-19 14:43:55.041','','','','','false','true','1.000','','','','','','8281112222','Home','','','false','false','','','','','','','','false','false','','','','','123','2014-08-17','','State Tax'",
        "summary": "Simple CSV Confirmation Response"
      },
      "examples-GET-CSV": {
        "value": "\n'itemId','storeName','zoneName','receiptAlias','itemName','department','subDepartment','category','subCategory','variety','size','brand','loyaltyMultiplier','shelfLocation','shelfSequence','PricePL1','priceDividerPL1','PricePL2','priceDividerPL2','PricePL3','priceDividerPL3','PricePL4','priceDividerPL4','promoPricePL1','promoPriceDividerPL1','promoPricePL2','promoPriceDividerPL2','promoPricePL3','promoPriceDividerPL3','promoPricePL4','promoPriceDividerPL4','lastCost','averageCost','onHand','onOrder','defaultSupplier','defaultSupplierUnitId','defaultSupplierUnitQty','powerField1','storePowerField1'\n'999','Market 5 ','Store Zone 2','Gala Apple ','GALA APPLE ','Produce','Organic','','','','1 lb.','Williamn Producers','1.100 ','11','2','0.5000 ','1','','','','','','','','','','','','','','','0.5000 ','0.5000 ','125.000','70.000','Catapult Industries ','ca-1 ','15.000','Popular','Not Popular', 'Stock Inventory','1'",
        "summary": "Simple CSV Confirmation Response"
      },
      "components-examples-GET-CSV": {
        "value": "\n'itemId','name','receiptAlias','unitOfMeasure','departmentNumber','brand','powerField1','subCategoryNumber','categoryNumber','variety','familyLine'\n'777','REAL MEDLEYS APPLE NUT HRVST BAR','APPLE NUT HRVST BAR','12 ea','5','QUAKER','Fruit Bar Collection','15','45','Harvest Bar','Breakfast Bar'",
        "summary": "Simple CSV Confirmation Response"
      },
      "transactionjournal_components-examples-GET-CSV": {
        "value": "\n'TRN_PK','TRN_CPK','TRN_STO_FK','TRN_STO_CFK','TRN_StartTime','TRN_EndTime','TRN_ReceiptNumber','TRN_Type','TRN_EMP_FK','TRN_EMP_CFK','TRN_SequenceNumber','TRN_TCF_FK','TRN_TCF_CFK','TRN_CUS_FK','TRN_CUS_CFK','TRN_AllVoid','TRN_UploadTime','TRN_Status','TCF_Description','TCF_Number','TCF_TerminalId','EMP_Number','EMP_FirstName','EMP_LastName','CUS_AccountNumber','CUS_FirstName','CUS_LastName','CUS_Company','TLI_PK','TLI_LIT_FK','TLI_StartTime','TLI_EndTime','TLI_Amount','TLI_ReceiptAlias','TLI_Quantity','TLI_ScanCode','TLI_TaxDifference','ExtendedPrice','ExtendedBasePrice','CTI_CMB_FK','CTI_CMB_CFK','CTI_DiscountAmount','CTI_SellingAmount','CTI_TLI_FK_Item','CMB_Name','CPT_Void','DLI_TypeDollar','DLI_TypePercent','DLI_LineItem','DLI_DIS_FK','DLI_Void','DLI_DIS_CFK','DLI_ApplyBeforeTax','DLI_Return','DLI_INV_FK','DLI_INV_CFK','DLI_Automatic','DLI_ASC_FK','DLI_ASC_CFK','DLI_InventoryLineItem','DLI_ReportConsolidated','ITI_AverageCost','ITI_EntryMethod','ITI_Return','ITI_INV_FK','ITI_Void','ITI_INV_CFK','ITI_SellingPrice','ITI_BasePrice','ITI_ASC_FK','ITI_ASC_CFK','ITI_ASCQuantity','ITI_PriceLevel','ITI_DiscountPriceOverride','DPT_Name','DPT_Number','DPT_OmitFromSales','TTI_TAX_FK','TTI_TAX_CFK','TTI_ReturnTax','TTI_TaxableAmount','NTI_TEN_FK','NTI_TEN_CFK','NTI_AuthorizationCode','TRN_ETI_AccountName','TRN_ETI_AccountNumber','TRN_ETI_CardType','TRN_ETI_TenderAmount','NTI_TenderType','NTI_Amount','NTI_Void','NTI_SafeDrop','NTI_Loan','NTI_FCExchangeRate','NTI_FCTenderAmount','NTI_ForeignCurrency','TEN_PK','TEN_CPK','TEN_Description','CTI_BonusAmount','CTI_EntryMethod','CTI_Void','CTI_ManufacturerCode','CTI_FamilyCode','CTI_CouponCode','SalespersonFK','SalespersonCFK','GCT_Void','LTN_Start1','LTN_End1','LTN_Start2','LTN_End2','LTN_Start3','LTN_End3','LTN_Start4','LTN_End4','LTN_Start5','LTN_End5','LTN_Start6','LTN_End6','LTN_AddtlRanges','TRN_Total','TRN_NetSales','TRN_ItemQuantity','TRN_ItemCorrects','TRN_Negatives','StoreNumber','TRN_ETI_Approval','TRN_ETI_Reference','TRN_ETI_RemainingBalance','TRN_ETI_CvvResult','TRN_ETI_AvsResult','TRN_ETI_Bin','TRN_ETI_AuthorizationDate','TRN_ETI_AuthorizationTime','TRN_ETI_AuthorizationType','TRN_ETI_AuthorizationStan','CTI_ApplyToFoodstamps','CTI_ApplyToFSA','CTI_CouponBarcode','CTI_ProviderId','CTI_FaceValue','NTI_CHG_FK','NTI_CHG_CFK','NTI_TLI_CashBack','TLI_Divider','ITI_BasePriceDivider','ITI_PL1BasePriceDivider','ITI_WeightEntryMethod','ITI_TareEntryMethod','ITI_Pl1BasePrice','ITI_Pl1PromptForPrice','ITI_TareWeight','ITI_EmbeddedPrice','ITI_SpecialPricing','ITI_Variation','ITI_LinkType','ITI_ModQuantity','ITI_ModPrice','ITI_EmbeddedDiscount','ITI_FSA','ITI_SNAP','ITI_WeightUnit','PromptName','PromptResponse','PromptItem','CTI_Expiration','ITI_MarkdownBarCode','ITI_TLI_LinkLineItem','ComboTotalLoyaltyProgram','ComboTotalStoreCouponName','CTH_Voided','CTH_EarnedLoyalty','LoyaltyTransactionLoyaltyProgram','LoyaltyTransactionStoreCouponName','LTI_Expiring','LTI_ExpirationDate','CTI_ComboTotalLineItem','ComboOmitFromSales','CMB_ApplyAfterTaxes','STI_Status','EMD_SequenceNumber','EMD_TransactionSequenceNumber','EMD_Time','EMD_Tender','EMD_TLI_FK','EMD_5A','EMD_82','EMD_84','EMD_9A','EMD_9F21','EMD_9C','EMD_5F34','EMD_5F2A','EMD_9F02','EMD_9F03','EMD_9F08','EMD_9F09','EMD_9F1A','EMD_9F33','EMD_9F34','EMD_9F35','EMD_9F36','EMD_9F37','EMD_9F0D','EMD_9F0E','EMD_9F0F','EMD_TACD','EMD_TACO','EMD_TACF','EMD_95_1GEN','EMD_9F10_1GEN','EMD_9F26_1GEN','EMD_9F27_1GEN','EMD_91','EMD_95_2GEN','EMD_9F26_2GEN','EMD_9F27_2GEN','EMD_8A','EMD_9B','EMD_AppName','EMD_CardEntryMethod','EMD_CardVerMethod','EMD_Mode','EMD_9F06','ITI_RetailAccountingPrice','ITI_RetailAccountingReportCode','GCT_GCP_FK','GCT_GCP_CFK','GCT_Code','GCT_Account','GCT_SendDate','GCT_Print','GCT_RecipientEmail','GCT_RecipientPhoneNumber','GCT_RecipientName','GCT_SenderName','TRN_WTR_FK','TRN_WTR_CFK','TRN_ETI_ExpDate','TRN_ETI_CardSwiped','TRN_ETI_Processor'\n'18048','1002','3','1000','2016-01-06 10:37:20.870','2016-01-06 10:37:20.870','16029','0','4','1000','16029','2','1002','2','1000','0','2016-01-06 10:37:20.870','0','Terminal 1','1','07325795','99','Self','Checkout','4012345678900','John','Smith','ECRS','1','1','2016-01-06 10:37:20.870','2016-01-06 10:37:20.870','1.29','Widget','1.000','212345678901','1.29','1.29','1.29','0','0','null','null','1','string','0','true','true','string','0','0','0','0','0','1','1000','0','1','1000','3','0','1.29','1','0','1','true','1000','1.29','string','1','1000','1.00','1','1','Grocery','99','0','1000','1000','0','1.29','1','1000','string','string','stri','strin','1.29','2','1.2900','0','1','1','0.76','1.29','0','1','1000','Cash','1.29','1','0','string','string','string','1','1000','0','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','string','s','s','string','string','string','string','string','true','true','string','string','string','0','0','0','0','0','0','0','0','string','true','string','string','true','0','0','string','string','string','true','true','0','string','string','0','string','string','0','string','string','true','string','string','string','string','string','0','true','true','0','0','0','string','string','0','string','stri','string','string','string','st','st','str','string','string','stri','stri','str','string','string','st','stri','string','string','string','string','string','string','string','string','string','string','st','string','string','string','st','stri','stri','string','string','string','string','string','string','string','0','0','str','string','string','true','string','string','string','string','0','0','strin','true','string'",
        "summary": "Simple CSV Confirmation Response"
      }
    }
  }
}